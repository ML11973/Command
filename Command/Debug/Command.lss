
Command.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002004  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00002a80  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80004c00  80004c00  00005000  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00003478  80004e00  80004e00  00005200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .data         0000002c  00000004  80008278  00008804  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00001238  00000030  800082a4  00008830  2**2
                  ALLOC
  7 .comment      00000030  00000000  00000000  00008830  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000960  00000000  00000000  00008860  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 000018e9  00000000  00000000  000091c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0000b722  00000000  00000000  0000aaa9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00001fb0  00000000  00000000  000161cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00009e9b  00000000  00000000  0001817b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001b18  00000000  00000000  00022018  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00002d6c  00000000  00000000  00023b30  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00003fc6  00000000  00000000  0002689c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macinfo 00f11d6f  00000000  00000000  0002a862  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .stack        00001000  0000f000  0000f000  00000400  2**0
                  ALLOC
 18 .debug_ranges 00000a58  00000000  00000000  00f3c5d8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_trampoline>:
80000000:	e0 8f 10 00 	bral	80002000 <program_start>
	...

80002000 <program_start>:
80002000:	fe cf f1 90 	sub	pc,pc,-3696

Disassembly of section .text:

80002004 <sd_mmc_spi_get_capacity>:
80002004:	d4 01       	pushm	lr
80002006:	4c 18       	lddpc	r8,80002108 <sd_mmc_spi_get_capacity+0x104>
80002008:	11 db       	ld.ub	r11,r8[0x5]
8000200a:	4c 18       	lddpc	r8,8000210c <sd_mmc_spi_get_capacity+0x108>
8000200c:	11 8a       	ld.ub	r10,r8[0x0]
8000200e:	30 38       	mov	r8,3
80002010:	f0 0a 18 00 	cp.b	r10,r8
80002014:	c2 71       	brne	80002062 <sd_mmc_spi_get_capacity+0x5e>
80002016:	4b d8       	lddpc	r8,80002108 <sd_mmc_spi_get_capacity+0x104>
80002018:	f1 3a 00 08 	ld.ub	r10,r8[8]
8000201c:	f1 39 00 09 	ld.ub	r9,r8[9]
80002020:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002024:	11 fa       	ld.ub	r10,r8[0x7]
80002026:	f5 da c0 06 	bfextu	r10,r10,0x0,0x6
8000202a:	f3 ea 11 0a 	or	r10,r9,r10<<0x10
8000202e:	2f fa       	sub	r10,-1
80002030:	f4 0b 16 0d 	lsr	r11,r10,0xd
80002034:	16 99       	mov	r9,r11
80002036:	f4 08 15 13 	lsl	r8,r10,0x13
8000203a:	4b 6a       	lddpc	r10,80002110 <sd_mmc_spi_get_capacity+0x10c>
8000203c:	f4 e9 00 00 	st.d	r10[0],r8
80002040:	f7 db c0 09 	bfextu	r11,r11,0x0,0x9
80002044:	4b 48       	lddpc	r8,80002114 <sd_mmc_spi_get_capacity+0x110>
80002046:	b0 0b       	st.h	r8[0x0],r11
80002048:	f4 ea 00 00 	ld.d	r10,r10[0]
8000204c:	90 09       	ld.sh	r9,r8[0x0]
8000204e:	f4 08 16 09 	lsr	r8,r10,0x9
80002052:	f1 eb 11 78 	or	r8,r8,r11<<0x17
80002056:	20 18       	sub	r8,1
80002058:	b7 79       	lsl	r9,0x17
8000205a:	12 08       	add	r8,r9
8000205c:	4a f9       	lddpc	r9,80002118 <sd_mmc_spi_get_capacity+0x114>
8000205e:	93 08       	st.w	r9[0x0],r8
80002060:	c4 28       	rjmp	800020e4 <sd_mmc_spi_get_capacity+0xe0>
80002062:	4a a8       	lddpc	r8,80002108 <sd_mmc_spi_get_capacity+0x104>
80002064:	f1 3c 00 0a 	ld.ub	r12,r8[10]
80002068:	f1 39 00 08 	ld.ub	r9,r8[8]
8000206c:	a7 89       	lsr	r9,0x6
8000206e:	11 fe       	ld.ub	lr,r8[0x7]
80002070:	f2 0e 00 29 	add	r9,r9,lr<<0x2
80002074:	11 ee       	ld.ub	lr,r8[0x6]
80002076:	fd de c0 02 	bfextu	lr,lr,0x0,0x2
8000207a:	ab 6e       	lsl	lr,0xa
8000207c:	1c 09       	add	r9,lr
8000207e:	2f f9       	sub	r9,-1
80002080:	f1 38 00 09 	ld.ub	r8,r8[9]
80002084:	f1 d8 c0 02 	bfextu	r8,r8,0x0,0x2
80002088:	f8 0e 16 07 	lsr	lr,r12,0x7
8000208c:	fc 08 00 18 	add	r8,lr,r8<<0x1
80002090:	2f e8       	sub	r8,-2
80002092:	f2 08 09 49 	lsl	r9,r9,r8
80002096:	20 19       	sub	r9,1
80002098:	4a 08       	lddpc	r8,80002118 <sd_mmc_spi_get_capacity+0x114>
8000209a:	91 09       	st.w	r8[0x0],r9
8000209c:	70 0e       	ld.w	lr,r8[0x0]
8000209e:	f7 db c0 04 	bfextu	r11,r11,0x0,0x4
800020a2:	2f fe       	sub	lr,-1
800020a4:	fc 0b 09 48 	lsl	r8,lr,r11
800020a8:	30 09       	mov	r9,0
800020aa:	49 ae       	lddpc	lr,80002110 <sd_mmc_spi_get_capacity+0x10c>
800020ac:	fc e9 00 00 	st.d	lr[0],r8
800020b0:	49 98       	lddpc	r8,80002114 <sd_mmc_spi_get_capacity+0x110>
800020b2:	b0 09       	st.h	r8[0x0],r9
800020b4:	30 98       	mov	r8,9
800020b6:	f0 0b 18 00 	cp.b	r11,r8
800020ba:	e0 88 00 08 	brls	800020ca <sd_mmc_spi_get_capacity+0xc6>
800020be:	49 78       	lddpc	r8,80002118 <sd_mmc_spi_get_capacity+0x114>
800020c0:	70 09       	ld.w	r9,r8[0x0]
800020c2:	20 9b       	sub	r11,9
800020c4:	f2 0b 09 4b 	lsl	r11,r9,r11
800020c8:	91 0b       	st.w	r8[0x0],r11
800020ca:	58 0a       	cp.w	r10,0
800020cc:	c0 c1       	brne	800020e4 <sd_mmc_spi_get_capacity+0xe0>
800020ce:	f1 dc c0 45 	bfextu	r8,r12,0x2,0x5
800020d2:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
800020d6:	48 d9       	lddpc	r9,80002108 <sd_mmc_spi_get_capacity+0x104>
800020d8:	f3 39 00 0b 	ld.ub	r9,r9[11]
800020dc:	a3 7c       	lsl	r12,0x3
800020de:	f9 e9 12 59 	or	r9,r12,r9>>0x5
800020e2:	c0 c8       	rjmp	800020fa <sd_mmc_spi_get_capacity+0xf6>
800020e4:	48 9a       	lddpc	r10,80002108 <sd_mmc_spi_get_capacity+0x104>
800020e6:	f5 39 00 0a 	ld.ub	r9,r10[10]
800020ea:	f3 d9 c0 06 	bfextu	r9,r9,0x0,0x6
800020ee:	f5 38 00 0b 	ld.ub	r8,r10[11]
800020f2:	a7 98       	lsr	r8,0x7
800020f4:	f0 09 00 18 	add	r8,r8,r9<<0x1
800020f8:	30 09       	mov	r9,0
800020fa:	2f f9       	sub	r9,-1
800020fc:	2f f8       	sub	r8,-1
800020fe:	b1 39       	mul	r9,r8
80002100:	48 78       	lddpc	r8,8000211c <sd_mmc_spi_get_capacity+0x118>
80002102:	b0 09       	st.h	r8[0x0],r9
80002104:	d8 02       	popm	pc
80002106:	00 00       	add	r0,r0
80002108:	00 00       	add	r0,r0
8000210a:	05 a8       	ld.ub	r8,r2[0x2]
8000210c:	00 00       	add	r0,r0
8000210e:	05 a6       	ld.ub	r6,r2[0x2]
80002110:	00 00       	add	r0,r0
80002112:	05 94       	ld.ub	r4,r2[0x1]
80002114:	00 00       	add	r0,r0
80002116:	05 9c       	ld.ub	r12,r2[0x1]
80002118:	00 00       	add	r0,r0
8000211a:	05 a0       	ld.ub	r0,r2[0x2]
8000211c:	00 00       	add	r0,r0
8000211e:	05 9e       	ld.ub	lr,r2[0x1]

80002120 <sd_mmc_spi_send_and_read>:
80002120:	d4 01       	pushm	lr
80002122:	20 1d       	sub	sp,4
80002124:	18 9b       	mov	r11,r12
80002126:	fe 7c 28 00 	mov	r12,-55296
8000212a:	f0 1f 00 09 	mcall	8000214c <sd_mmc_spi_send_and_read+0x2c>
8000212e:	fa cb ff fe 	sub	r11,sp,-2
80002132:	fe 7c 28 00 	mov	r12,-55296
80002136:	f0 1f 00 07 	mcall	80002150 <sd_mmc_spi_send_and_read+0x30>
8000213a:	58 1c       	cp.w	r12,1
8000213c:	c0 41       	brne	80002144 <sd_mmc_spi_send_and_read+0x24>
8000213e:	e0 6c 00 ff 	mov	r12,255
80002142:	c0 28       	rjmp	80002146 <sd_mmc_spi_send_and_read+0x26>
80002144:	1b bc       	ld.ub	r12,sp[0x3]
80002146:	2f fd       	sub	sp,-4
80002148:	d8 02       	popm	pc
8000214a:	00 00       	add	r0,r0
8000214c:	80 00       	ld.sh	r0,r0[0x0]
8000214e:	2e 32       	sub	r2,-29
80002150:	80 00       	ld.sh	r0,r0[0x0]
80002152:	2e 4e       	sub	lr,-28

80002154 <sd_mmc_spi_wait_not_busy>:
80002154:	d4 21       	pushm	r4-r7,lr
80002156:	30 1b       	mov	r11,1
80002158:	fe 7c 28 00 	mov	r12,-55296
8000215c:	f0 1f 00 10 	mcall	8000219c <sd_mmc_spi_wait_not_busy+0x48>
80002160:	30 07       	mov	r7,0
80002162:	e0 65 00 ff 	mov	r5,255
80002166:	48 f4       	lddpc	r4,800021a0 <sd_mmc_spi_wait_not_busy+0x4c>
80002168:	3f f6       	mov	r6,-1
8000216a:	c0 b8       	rjmp	80002180 <sd_mmc_spi_wait_not_busy+0x2c>
8000216c:	2f f7       	sub	r7,-1
8000216e:	e2 57 0d 40 	cp.w	r7,200000
80002172:	c0 71       	brne	80002180 <sd_mmc_spi_wait_not_busy+0x2c>
80002174:	30 1b       	mov	r11,1
80002176:	fe 7c 28 00 	mov	r12,-55296
8000217a:	f0 1f 00 0b 	mcall	800021a4 <sd_mmc_spi_wait_not_busy+0x50>
8000217e:	d8 2a       	popm	r4-r7,pc,r12=0
80002180:	0a 9c       	mov	r12,r5
80002182:	f0 1f 00 0a 	mcall	800021a8 <sd_mmc_spi_wait_not_busy+0x54>
80002186:	a8 8c       	st.b	r4[0x0],r12
80002188:	ec 0c 18 00 	cp.b	r12,r6
8000218c:	cf 01       	brne	8000216c <sd_mmc_spi_wait_not_busy+0x18>
8000218e:	30 1b       	mov	r11,1
80002190:	fe 7c 28 00 	mov	r12,-55296
80002194:	f0 1f 00 04 	mcall	800021a4 <sd_mmc_spi_wait_not_busy+0x50>
80002198:	da 2a       	popm	r4-r7,pc,r12=1
8000219a:	00 00       	add	r0,r0
8000219c:	80 00       	ld.sh	r0,r0[0x0]
8000219e:	2d 02       	sub	r2,-48
800021a0:	00 00       	add	r0,r0
800021a2:	05 b8       	ld.ub	r8,r2[0x3]
800021a4:	80 00       	ld.sh	r0,r0[0x0]
800021a6:	2d 4e       	sub	lr,-44
800021a8:	80 00       	ld.sh	r0,r0[0x0]
800021aa:	21 20       	sub	r0,18

800021ac <sd_mmc_spi_command>:
800021ac:	eb cd 40 f8 	pushm	r3-r7,lr
800021b0:	18 96       	mov	r6,r12
800021b2:	16 97       	mov	r7,r11
800021b4:	e0 6b 00 ff 	mov	r11,255
800021b8:	fe 7c 28 00 	mov	r12,-55296
800021bc:	f0 1f 00 2b 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021c0:	0c 9b       	mov	r11,r6
800021c2:	a7 ab       	sbr	r11,0x6
800021c4:	5c 5b       	castu.b	r11
800021c6:	fe 7c 28 00 	mov	r12,-55296
800021ca:	f0 1f 00 28 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021ce:	ee 0b 16 18 	lsr	r11,r7,0x18
800021d2:	fe 7c 28 00 	mov	r12,-55296
800021d6:	f0 1f 00 25 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021da:	ee 0b 16 10 	lsr	r11,r7,0x10
800021de:	fe 7c 28 00 	mov	r12,-55296
800021e2:	f0 1f 00 22 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021e6:	f7 d7 c1 10 	bfextu	r11,r7,0x8,0x10
800021ea:	fe 7c 28 00 	mov	r12,-55296
800021ee:	f0 1f 00 1f 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021f2:	0e 9b       	mov	r11,r7
800021f4:	5c 7b       	castu.h	r11
800021f6:	fe 7c 28 00 	mov	r12,-55296
800021fa:	f0 1f 00 1c 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021fe:	30 08       	mov	r8,0
80002200:	f0 06 18 00 	cp.b	r6,r8
80002204:	c0 60       	breq	80002210 <sd_mmc_spi_command+0x64>
80002206:	30 88       	mov	r8,8
80002208:	f0 06 18 00 	cp.b	r6,r8
8000220c:	c1 01       	brne	8000222c <sd_mmc_spi_command+0x80>
8000220e:	c0 88       	rjmp	8000221e <sd_mmc_spi_command+0x72>
80002210:	e0 6b 00 95 	mov	r11,149
80002214:	fe 7c 28 00 	mov	r12,-55296
80002218:	f0 1f 00 14 	mcall	80002268 <sd_mmc_spi_command+0xbc>
8000221c:	c0 e8       	rjmp	80002238 <sd_mmc_spi_command+0x8c>
8000221e:	e0 6b 00 87 	mov	r11,135
80002222:	fe 7c 28 00 	mov	r12,-55296
80002226:	f0 1f 00 11 	mcall	80002268 <sd_mmc_spi_command+0xbc>
8000222a:	c0 78       	rjmp	80002238 <sd_mmc_spi_command+0x8c>
8000222c:	e0 6b 00 ff 	mov	r11,255
80002230:	fe 7c 28 00 	mov	r12,-55296
80002234:	f0 1f 00 0d 	mcall	80002268 <sd_mmc_spi_command+0xbc>
80002238:	3f f9       	mov	r9,-1
8000223a:	48 d8       	lddpc	r8,8000226c <sd_mmc_spi_command+0xc0>
8000223c:	b0 89       	st.b	r8[0x0],r9
8000223e:	30 07       	mov	r7,0
80002240:	e0 64 00 ff 	mov	r4,255
80002244:	10 93       	mov	r3,r8
80002246:	12 96       	mov	r6,r9
80002248:	30 b5       	mov	r5,11
8000224a:	c0 68       	rjmp	80002256 <sd_mmc_spi_command+0xaa>
8000224c:	2f f7       	sub	r7,-1
8000224e:	5c 57       	castu.b	r7
80002250:	ea 07 18 00 	cp.b	r7,r5
80002254:	c0 80       	breq	80002264 <sd_mmc_spi_command+0xb8>
80002256:	08 9c       	mov	r12,r4
80002258:	f0 1f 00 06 	mcall	80002270 <sd_mmc_spi_command+0xc4>
8000225c:	a6 8c       	st.b	r3[0x0],r12
8000225e:	ec 0c 18 00 	cp.b	r12,r6
80002262:	cf 50       	breq	8000224c <sd_mmc_spi_command+0xa0>
80002264:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002268:	80 00       	ld.sh	r0,r0[0x0]
8000226a:	2e 32       	sub	r2,-29
8000226c:	00 00       	add	r0,r0
8000226e:	05 b8       	ld.ub	r8,r2[0x3]
80002270:	80 00       	ld.sh	r0,r0[0x0]
80002272:	21 20       	sub	r0,18

80002274 <sd_mmc_spi_send_command>:
80002274:	eb cd 40 c0 	pushm	r6-r7,lr
80002278:	18 97       	mov	r7,r12
8000227a:	16 96       	mov	r6,r11
8000227c:	30 1b       	mov	r11,1
8000227e:	fe 7c 28 00 	mov	r12,-55296
80002282:	f0 1f 00 09 	mcall	800022a4 <sd_mmc_spi_send_command+0x30>
80002286:	0c 9b       	mov	r11,r6
80002288:	0e 9c       	mov	r12,r7
8000228a:	f0 1f 00 08 	mcall	800022a8 <sd_mmc_spi_send_command+0x34>
8000228e:	48 87       	lddpc	r7,800022ac <sd_mmc_spi_send_command+0x38>
80002290:	ae 8c       	st.b	r7[0x0],r12
80002292:	30 1b       	mov	r11,1
80002294:	fe 7c 28 00 	mov	r12,-55296
80002298:	f0 1f 00 06 	mcall	800022b0 <sd_mmc_spi_send_command+0x3c>
8000229c:	0f 8c       	ld.ub	r12,r7[0x0]
8000229e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800022a2:	00 00       	add	r0,r0
800022a4:	80 00       	ld.sh	r0,r0[0x0]
800022a6:	2d 02       	sub	r2,-48
800022a8:	80 00       	ld.sh	r0,r0[0x0]
800022aa:	21 ac       	sub	r12,26
800022ac:	00 00       	add	r0,r0
800022ae:	05 b8       	ld.ub	r8,r2[0x3]
800022b0:	80 00       	ld.sh	r0,r0[0x0]
800022b2:	2d 4e       	sub	lr,-44

800022b4 <sd_mmc_spi_check_presence>:
800022b4:	eb cd 40 fe 	pushm	r1-r7,lr
800022b8:	49 a8       	lddpc	r8,80002320 <sd_mmc_spi_check_presence+0x6c>
800022ba:	11 89       	ld.ub	r9,r8[0x0]
800022bc:	30 08       	mov	r8,0
800022be:	f0 09 18 00 	cp.b	r9,r8
800022c2:	c1 f1       	brne	80002300 <sd_mmc_spi_check_presence+0x4c>
800022c4:	30 07       	mov	r7,0
800022c6:	0e 94       	mov	r4,r7
800022c8:	49 73       	lddpc	r3,80002324 <sd_mmc_spi_check_presence+0x70>
800022ca:	30 16       	mov	r6,1
800022cc:	e0 62 00 ff 	mov	r2,255
800022d0:	fe 71 28 00 	mov	r1,-55296
800022d4:	30 b5       	mov	r5,11
800022d6:	c0 c8       	rjmp	800022ee <sd_mmc_spi_check_presence+0x3a>
800022d8:	04 9b       	mov	r11,r2
800022da:	02 9c       	mov	r12,r1
800022dc:	f0 1f 00 13 	mcall	80002328 <sd_mmc_spi_check_presence+0x74>
800022e0:	2f f7       	sub	r7,-1
800022e2:	5c 87       	casts.h	r7
800022e4:	ea 07 19 00 	cp.h	r7,r5
800022e8:	c0 31       	brne	800022ee <sd_mmc_spi_check_presence+0x3a>
800022ea:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
800022ee:	08 9b       	mov	r11,r4
800022f0:	08 9c       	mov	r12,r4
800022f2:	f0 1f 00 0f 	mcall	8000232c <sd_mmc_spi_check_presence+0x78>
800022f6:	a6 8c       	st.b	r3[0x0],r12
800022f8:	ec 0c 18 00 	cp.b	r12,r6
800022fc:	ce e1       	brne	800022d8 <sd_mmc_spi_check_presence+0x24>
800022fe:	c0 e8       	rjmp	8000231a <sd_mmc_spi_check_presence+0x66>
80002300:	30 0b       	mov	r11,0
80002302:	33 bc       	mov	r12,59
80002304:	f0 1f 00 0a 	mcall	8000232c <sd_mmc_spi_check_presence+0x78>
80002308:	48 78       	lddpc	r8,80002324 <sd_mmc_spi_check_presence+0x70>
8000230a:	b0 8c       	st.b	r8[0x0],r12
8000230c:	58 0c       	cp.w	r12,0
8000230e:	c0 60       	breq	8000231a <sd_mmc_spi_check_presence+0x66>
80002310:	30 09       	mov	r9,0
80002312:	48 48       	lddpc	r8,80002320 <sd_mmc_spi_check_presence+0x6c>
80002314:	b0 89       	st.b	r8[0x0],r9
80002316:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
8000231a:	e3 cf 90 fe 	ldm	sp++,r1-r7,pc,r12=1
8000231e:	00 00       	add	r0,r0
80002320:	00 00       	add	r0,r0
80002322:	00 44       	or	r4,r0
80002324:	00 00       	add	r0,r0
80002326:	05 b8       	ld.ub	r8,r2[0x3]
80002328:	80 00       	ld.sh	r0,r0[0x0]
8000232a:	2e 32       	sub	r2,-29
8000232c:	80 00       	ld.sh	r0,r0[0x0]
8000232e:	22 74       	sub	r4,39

80002330 <sd_mmc_spi_check_hc>:
80002330:	eb cd 40 c0 	pushm	r6-r7,lr
80002334:	f0 1f 00 1c 	mcall	800023a4 <sd_mmc_spi_check_hc+0x74>
80002338:	c0 31       	brne	8000233e <sd_mmc_spi_check_hc+0xe>
8000233a:	e3 cf c0 c0 	ldm	sp++,r6-r7,pc,r12=-1
8000233e:	30 1b       	mov	r11,1
80002340:	fe 7c 28 00 	mov	r12,-55296
80002344:	f0 1f 00 19 	mcall	800023a8 <sd_mmc_spi_check_hc+0x78>
80002348:	30 0b       	mov	r11,0
8000234a:	33 ac       	mov	r12,58
8000234c:	f0 1f 00 18 	mcall	800023ac <sd_mmc_spi_check_hc+0x7c>
80002350:	49 88       	lddpc	r8,800023b0 <sd_mmc_spi_check_hc+0x80>
80002352:	b0 8c       	st.b	r8[0x0],r12
80002354:	58 0c       	cp.w	r12,0
80002356:	c0 80       	breq	80002366 <sd_mmc_spi_check_hc+0x36>
80002358:	30 1b       	mov	r11,1
8000235a:	fe 7c 28 00 	mov	r12,-55296
8000235e:	f0 1f 00 16 	mcall	800023b4 <sd_mmc_spi_check_hc+0x84>
80002362:	e3 cf c0 c0 	ldm	sp++,r6-r7,pc,r12=-1
80002366:	e0 6c 00 ff 	mov	r12,255
8000236a:	f0 1f 00 14 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
8000236e:	18 96       	mov	r6,r12
80002370:	e0 6c 00 ff 	mov	r12,255
80002374:	f0 1f 00 11 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
80002378:	48 e7       	lddpc	r7,800023b0 <sd_mmc_spi_check_hc+0x80>
8000237a:	ae 8c       	st.b	r7[0x0],r12
8000237c:	e0 6c 00 ff 	mov	r12,255
80002380:	f0 1f 00 0e 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
80002384:	ae 8c       	st.b	r7[0x0],r12
80002386:	e0 6c 00 ff 	mov	r12,255
8000238a:	f0 1f 00 0c 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
8000238e:	ae 8c       	st.b	r7[0x0],r12
80002390:	30 1b       	mov	r11,1
80002392:	fe 7c 28 00 	mov	r12,-55296
80002396:	f0 1f 00 08 	mcall	800023b4 <sd_mmc_spi_check_hc+0x84>
8000239a:	f9 d6 c0 c1 	bfextu	r12,r6,0x6,0x1
8000239e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800023a2:	00 00       	add	r0,r0
800023a4:	80 00       	ld.sh	r0,r0[0x0]
800023a6:	21 54       	sub	r4,21
800023a8:	80 00       	ld.sh	r0,r0[0x0]
800023aa:	2d 02       	sub	r2,-48
800023ac:	80 00       	ld.sh	r0,r0[0x0]
800023ae:	21 ac       	sub	r12,26
800023b0:	00 00       	add	r0,r0
800023b2:	05 b8       	ld.ub	r8,r2[0x3]
800023b4:	80 00       	ld.sh	r0,r0[0x0]
800023b6:	2d 4e       	sub	lr,-44
800023b8:	80 00       	ld.sh	r0,r0[0x0]
800023ba:	21 20       	sub	r0,18

800023bc <sd_mmc_spi_get_if>:
800023bc:	eb cd 40 80 	pushm	r7,lr
800023c0:	f0 1f 00 27 	mcall	8000245c <sd_mmc_spi_get_if+0xa0>
800023c4:	c0 31       	brne	800023ca <sd_mmc_spi_get_if+0xe>
800023c6:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
800023ca:	30 1b       	mov	r11,1
800023cc:	fe 7c 28 00 	mov	r12,-55296
800023d0:	f0 1f 00 24 	mcall	80002460 <sd_mmc_spi_get_if+0xa4>
800023d4:	e0 6b 01 aa 	mov	r11,426
800023d8:	30 8c       	mov	r12,8
800023da:	f0 1f 00 23 	mcall	80002464 <sd_mmc_spi_get_if+0xa8>
800023de:	4a 38       	lddpc	r8,80002468 <sd_mmc_spi_get_if+0xac>
800023e0:	b0 8c       	st.b	r8[0x0],r12
800023e2:	e2 1c 00 04 	andl	r12,0x4,COH
800023e6:	c0 80       	breq	800023f6 <sd_mmc_spi_get_if+0x3a>
800023e8:	30 1b       	mov	r11,1
800023ea:	fe 7c 28 00 	mov	r12,-55296
800023ee:	f0 1f 00 20 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
800023f2:	e3 cf 80 80 	ldm	sp++,r7,pc,r12=0
800023f6:	e0 6c 00 ff 	mov	r12,255
800023fa:	f0 1f 00 1e 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
800023fe:	49 b7       	lddpc	r7,80002468 <sd_mmc_spi_get_if+0xac>
80002400:	ae 8c       	st.b	r7[0x0],r12
80002402:	e0 6c 00 ff 	mov	r12,255
80002406:	f0 1f 00 1b 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
8000240a:	ae 8c       	st.b	r7[0x0],r12
8000240c:	e0 6c 00 ff 	mov	r12,255
80002410:	f0 1f 00 18 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
80002414:	ae 8c       	st.b	r7[0x0],r12
80002416:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
8000241a:	c0 81       	brne	8000242a <sd_mmc_spi_get_if+0x6e>
8000241c:	30 1b       	mov	r11,1
8000241e:	fe 7c 28 00 	mov	r12,-55296
80002422:	f0 1f 00 13 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
80002426:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
8000242a:	e0 6c 00 ff 	mov	r12,255
8000242e:	f0 1f 00 11 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
80002432:	48 e8       	lddpc	r8,80002468 <sd_mmc_spi_get_if+0xac>
80002434:	b0 8c       	st.b	r8[0x0],r12
80002436:	3a a8       	mov	r8,-86
80002438:	f0 0c 18 00 	cp.b	r12,r8
8000243c:	c0 80       	breq	8000244c <sd_mmc_spi_get_if+0x90>
8000243e:	30 1b       	mov	r11,1
80002440:	fe 7c 28 00 	mov	r12,-55296
80002444:	f0 1f 00 0a 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
80002448:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
8000244c:	30 1b       	mov	r11,1
8000244e:	fe 7c 28 00 	mov	r12,-55296
80002452:	f0 1f 00 07 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
80002456:	e3 cf 90 80 	ldm	sp++,r7,pc,r12=1
8000245a:	00 00       	add	r0,r0
8000245c:	80 00       	ld.sh	r0,r0[0x0]
8000245e:	21 54       	sub	r4,21
80002460:	80 00       	ld.sh	r0,r0[0x0]
80002462:	2d 02       	sub	r2,-48
80002464:	80 00       	ld.sh	r0,r0[0x0]
80002466:	21 ac       	sub	r12,26
80002468:	00 00       	add	r0,r0
8000246a:	05 b8       	ld.ub	r8,r2[0x3]
8000246c:	80 00       	ld.sh	r0,r0[0x0]
8000246e:	2d 4e       	sub	lr,-44
80002470:	80 00       	ld.sh	r0,r0[0x0]
80002472:	21 20       	sub	r0,18

80002474 <sd_mmc_spi_get_csd>:
80002474:	eb cd 40 fc 	pushm	r2-r7,lr
80002478:	20 1d       	sub	sp,4
8000247a:	18 92       	mov	r2,r12
8000247c:	f0 1f 00 32 	mcall	80002544 <sd_mmc_spi_get_csd+0xd0>
80002480:	c5 f0       	breq	8000253e <sd_mmc_spi_get_csd+0xca>
80002482:	30 1b       	mov	r11,1
80002484:	fe 7c 28 00 	mov	r12,-55296
80002488:	f0 1f 00 30 	mcall	80002548 <sd_mmc_spi_get_csd+0xd4>
8000248c:	30 0b       	mov	r11,0
8000248e:	30 9c       	mov	r12,9
80002490:	f0 1f 00 2f 	mcall	8000254c <sd_mmc_spi_get_csd+0xd8>
80002494:	4a f8       	lddpc	r8,80002550 <sd_mmc_spi_get_csd+0xdc>
80002496:	b0 8c       	st.b	r8[0x0],r12
80002498:	58 0c       	cp.w	r12,0
8000249a:	c0 81       	brne	800024aa <sd_mmc_spi_get_csd+0x36>
8000249c:	30 07       	mov	r7,0
8000249e:	e0 64 00 ff 	mov	r4,255
800024a2:	10 93       	mov	r3,r8
800024a4:	3f e6       	mov	r6,-2
800024a6:	30 95       	mov	r5,9
800024a8:	c1 78       	rjmp	800024d6 <sd_mmc_spi_get_csd+0x62>
800024aa:	30 1b       	mov	r11,1
800024ac:	fe 7c 28 00 	mov	r12,-55296
800024b0:	f0 1f 00 29 	mcall	80002554 <sd_mmc_spi_get_csd+0xe0>
800024b4:	30 09       	mov	r9,0
800024b6:	4a 98       	lddpc	r8,80002558 <sd_mmc_spi_get_csd+0xe4>
800024b8:	b0 89       	st.b	r8[0x0],r9
800024ba:	30 0c       	mov	r12,0
800024bc:	c4 18       	rjmp	8000253e <sd_mmc_spi_get_csd+0xca>
800024be:	ea 07 18 00 	cp.b	r7,r5
800024c2:	c0 81       	brne	800024d2 <sd_mmc_spi_get_csd+0x5e>
800024c4:	30 1b       	mov	r11,1
800024c6:	fe 7c 28 00 	mov	r12,-55296
800024ca:	f0 1f 00 23 	mcall	80002554 <sd_mmc_spi_get_csd+0xe0>
800024ce:	30 0c       	mov	r12,0
800024d0:	c3 78       	rjmp	8000253e <sd_mmc_spi_get_csd+0xca>
800024d2:	2f f7       	sub	r7,-1
800024d4:	5c 57       	castu.b	r7
800024d6:	08 9c       	mov	r12,r4
800024d8:	f0 1f 00 21 	mcall	8000255c <sd_mmc_spi_get_csd+0xe8>
800024dc:	a6 8c       	st.b	r3[0x0],r12
800024de:	ec 0c 18 00 	cp.b	r12,r6
800024e2:	ce e1       	brne	800024be <sd_mmc_spi_get_csd+0x4a>
800024e4:	30 07       	mov	r7,0
800024e6:	e0 65 00 ff 	mov	r5,255
800024ea:	fe 76 28 00 	mov	r6,-55296
800024ee:	fa c4 ff fe 	sub	r4,sp,-2
800024f2:	0a 9b       	mov	r11,r5
800024f4:	0c 9c       	mov	r12,r6
800024f6:	f0 1f 00 1b 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
800024fa:	08 9b       	mov	r11,r4
800024fc:	0c 9c       	mov	r12,r6
800024fe:	f0 1f 00 1a 	mcall	80002564 <sd_mmc_spi_get_csd+0xf0>
80002502:	9a 18       	ld.sh	r8,sp[0x2]
80002504:	e4 07 0b 08 	st.b	r2[r7],r8
80002508:	2f f7       	sub	r7,-1
8000250a:	59 07       	cp.w	r7,16
8000250c:	cf 31       	brne	800024f2 <sd_mmc_spi_get_csd+0x7e>
8000250e:	e0 6b 00 ff 	mov	r11,255
80002512:	fe 7c 28 00 	mov	r12,-55296
80002516:	f0 1f 00 13 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
8000251a:	e0 6b 00 ff 	mov	r11,255
8000251e:	fe 7c 28 00 	mov	r12,-55296
80002522:	f0 1f 00 10 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
80002526:	e0 6b 00 ff 	mov	r11,255
8000252a:	fe 7c 28 00 	mov	r12,-55296
8000252e:	f0 1f 00 0d 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
80002532:	30 1b       	mov	r11,1
80002534:	fe 7c 28 00 	mov	r12,-55296
80002538:	f0 1f 00 07 	mcall	80002554 <sd_mmc_spi_get_csd+0xe0>
8000253c:	30 1c       	mov	r12,1
8000253e:	2f fd       	sub	sp,-4
80002540:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80002544:	80 00       	ld.sh	r0,r0[0x0]
80002546:	21 54       	sub	r4,21
80002548:	80 00       	ld.sh	r0,r0[0x0]
8000254a:	2d 02       	sub	r2,-48
8000254c:	80 00       	ld.sh	r0,r0[0x0]
8000254e:	21 ac       	sub	r12,26
80002550:	00 00       	add	r0,r0
80002552:	05 b8       	ld.ub	r8,r2[0x3]
80002554:	80 00       	ld.sh	r0,r0[0x0]
80002556:	2d 4e       	sub	lr,-44
80002558:	00 00       	add	r0,r0
8000255a:	00 44       	or	r4,r0
8000255c:	80 00       	ld.sh	r0,r0[0x0]
8000255e:	21 20       	sub	r0,18
80002560:	80 00       	ld.sh	r0,r0[0x0]
80002562:	2e 32       	sub	r2,-29
80002564:	80 00       	ld.sh	r0,r0[0x0]
80002566:	2e 4e       	sub	lr,-28

80002568 <sd_mmc_spi_internal_init>:
80002568:	d4 31       	pushm	r0-r7,lr
8000256a:	fe fb 02 66 	ld.w	r11,pc[614]
8000256e:	e6 68 1a 80 	mov	r8,400000
80002572:	97 18       	st.w	r11[0x4],r8
80002574:	fe f8 02 60 	ld.w	r8,pc[608]
80002578:	70 0a       	ld.w	r10,r8[0x0]
8000257a:	fe 7c 28 00 	mov	r12,-55296
8000257e:	f0 1f 00 97 	mcall	800027d8 <sd_mmc_spi_internal_init+0x270>
80002582:	30 1b       	mov	r11,1
80002584:	fe 7c 28 00 	mov	r12,-55296
80002588:	f0 1f 00 95 	mcall	800027dc <sd_mmc_spi_internal_init+0x274>
8000258c:	30 07       	mov	r7,0
8000258e:	e0 66 00 ff 	mov	r6,255
80002592:	fe 75 28 00 	mov	r5,-55296
80002596:	0c 9b       	mov	r11,r6
80002598:	0a 9c       	mov	r12,r5
8000259a:	f0 1f 00 92 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
8000259e:	2f f7       	sub	r7,-1
800025a0:	58 a7       	cp.w	r7,10
800025a2:	cf a1       	brne	80002596 <sd_mmc_spi_internal_init+0x2e>
800025a4:	30 1b       	mov	r11,1
800025a6:	fe 7c 28 00 	mov	r12,-55296
800025aa:	f0 1f 00 8f 	mcall	800027e4 <sd_mmc_spi_internal_init+0x27c>
800025ae:	30 08       	mov	r8,0
800025b0:	fe f9 02 38 	ld.w	r9,pc[568]
800025b4:	b2 88       	st.b	r9[0x0],r8
800025b6:	fe f9 02 36 	ld.w	r9,pc[566]
800025ba:	b2 88       	st.b	r9[0x0],r8
800025bc:	30 0b       	mov	r11,0
800025be:	16 9c       	mov	r12,r11
800025c0:	f0 1f 00 8c 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800025c4:	fe f8 02 30 	ld.w	r8,pc[560]
800025c8:	b0 8c       	st.b	r8[0x0],r12
800025ca:	e0 6b 00 ff 	mov	r11,255
800025ce:	fe 7c 28 00 	mov	r12,-55296
800025d2:	f0 1f 00 84 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800025d6:	30 17       	mov	r7,1
800025d8:	fe f6 02 1c 	ld.w	r6,pc[540]
800025dc:	30 15       	mov	r5,1
800025de:	30 03       	mov	r3,0
800025e0:	e0 62 00 ff 	mov	r2,255
800025e4:	fe 71 28 00 	mov	r1,-55296
800025e8:	36 54       	mov	r4,101
800025ea:	c1 08       	rjmp	8000260a <sd_mmc_spi_internal_init+0xa2>
800025ec:	06 9b       	mov	r11,r3
800025ee:	06 9c       	mov	r12,r3
800025f0:	f0 1f 00 80 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800025f4:	ac 8c       	st.b	r6[0x0],r12
800025f6:	04 9b       	mov	r11,r2
800025f8:	02 9c       	mov	r12,r1
800025fa:	f0 1f 00 7a 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800025fe:	2f f7       	sub	r7,-1
80002600:	5c 87       	casts.h	r7
80002602:	e8 07 19 00 	cp.h	r7,r4
80002606:	e0 80 00 e4 	breq	800027ce <sd_mmc_spi_internal_init+0x266>
8000260a:	0d 88       	ld.ub	r8,r6[0x0]
8000260c:	ea 08 18 00 	cp.b	r8,r5
80002610:	ce e1       	brne	800025ec <sd_mmc_spi_internal_init+0x84>
80002612:	f0 1f 00 7a 	mcall	800027f8 <sd_mmc_spi_internal_init+0x290>
80002616:	5b fc       	cp.w	r12,-1
80002618:	e0 80 00 db 	breq	800027ce <sd_mmc_spi_internal_init+0x266>
8000261c:	58 1c       	cp.w	r12,1
8000261e:	c0 51       	brne	80002628 <sd_mmc_spi_internal_init+0xc0>
80002620:	30 29       	mov	r9,2
80002622:	4f 38       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
80002624:	b0 89       	st.b	r8[0x0],r9
80002626:	c4 c8       	rjmp	800026be <sd_mmc_spi_internal_init+0x156>
80002628:	30 0b       	mov	r11,0
8000262a:	33 7c       	mov	r12,55
8000262c:	f0 1f 00 71 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002630:	4f 17       	lddpc	r7,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002632:	ae 8c       	st.b	r7[0x0],r12
80002634:	e0 6b 00 ff 	mov	r11,255
80002638:	fe 7c 28 00 	mov	r12,-55296
8000263c:	f0 1f 00 69 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002640:	30 0b       	mov	r11,0
80002642:	32 9c       	mov	r12,41
80002644:	f0 1f 00 6b 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002648:	ae 8c       	st.b	r7[0x0],r12
8000264a:	e0 6b 00 ff 	mov	r11,255
8000264e:	fe 7c 28 00 	mov	r12,-55296
80002652:	f0 1f 00 64 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002656:	0f 88       	ld.ub	r8,r7[0x0]
80002658:	e2 18 00 fe 	andl	r8,0xfe,COH
8000265c:	c0 51       	brne	80002666 <sd_mmc_spi_internal_init+0xfe>
8000265e:	30 19       	mov	r9,1
80002660:	4e 38       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
80002662:	b0 89       	st.b	r8[0x0],r9
80002664:	c2 d8       	rjmp	800026be <sd_mmc_spi_internal_init+0x156>
80002666:	30 09       	mov	r9,0
80002668:	4e 18       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
8000266a:	b0 89       	st.b	r8[0x0],r9
8000266c:	30 0b       	mov	r11,0
8000266e:	16 9c       	mov	r12,r11
80002670:	f0 1f 00 60 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002674:	4e 08       	lddpc	r8,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002676:	b0 8c       	st.b	r8[0x0],r12
80002678:	e0 6b 00 ff 	mov	r11,255
8000267c:	fe 7c 28 00 	mov	r12,-55296
80002680:	f0 1f 00 58 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002684:	30 17       	mov	r7,1
80002686:	4d c6       	lddpc	r6,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002688:	30 15       	mov	r5,1
8000268a:	30 03       	mov	r3,0
8000268c:	e0 62 00 ff 	mov	r2,255
80002690:	fe 71 28 00 	mov	r1,-55296
80002694:	36 54       	mov	r4,101
80002696:	c1 08       	rjmp	800026b6 <sd_mmc_spi_internal_init+0x14e>
80002698:	06 9b       	mov	r11,r3
8000269a:	06 9c       	mov	r12,r3
8000269c:	f0 1f 00 55 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800026a0:	ac 8c       	st.b	r6[0x0],r12
800026a2:	04 9b       	mov	r11,r2
800026a4:	02 9c       	mov	r12,r1
800026a6:	f0 1f 00 4f 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800026aa:	2f f7       	sub	r7,-1
800026ac:	5c 87       	casts.h	r7
800026ae:	e8 07 19 00 	cp.h	r7,r4
800026b2:	e0 80 00 8e 	breq	800027ce <sd_mmc_spi_internal_init+0x266>
800026b6:	0d 88       	ld.ub	r8,r6[0x0]
800026b8:	ea 08 18 00 	cp.b	r8,r5
800026bc:	ce e1       	brne	80002698 <sd_mmc_spi_internal_init+0x130>
800026be:	30 07       	mov	r7,0
800026c0:	4c b4       	lddpc	r4,800027ec <sd_mmc_spi_internal_init+0x284>
800026c2:	30 15       	mov	r5,1
800026c4:	0e 93       	mov	r3,r7
800026c6:	33 70       	mov	r0,55
800026c8:	4c b6       	lddpc	r6,800027f4 <sd_mmc_spi_internal_init+0x28c>
800026ca:	e0 62 00 ff 	mov	r2,255
800026ce:	fe 71 28 00 	mov	r1,-55296
800026d2:	09 88       	ld.ub	r8,r4[0x0]
800026d4:	ea 08 18 00 	cp.b	r8,r5
800026d8:	c1 10       	breq	800026fa <sd_mmc_spi_internal_init+0x192>
800026da:	c0 63       	brcs	800026e6 <sd_mmc_spi_internal_init+0x17e>
800026dc:	30 29       	mov	r9,2
800026de:	f2 08 18 00 	cp.b	r8,r9
800026e2:	c2 81       	brne	80002732 <sd_mmc_spi_internal_init+0x1ca>
800026e4:	c1 98       	rjmp	80002716 <sd_mmc_spi_internal_init+0x1ae>
800026e6:	06 9b       	mov	r11,r3
800026e8:	30 1c       	mov	r12,1
800026ea:	f0 1f 00 42 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800026ee:	ac 8c       	st.b	r6[0x0],r12
800026f0:	04 9b       	mov	r11,r2
800026f2:	02 9c       	mov	r12,r1
800026f4:	f0 1f 00 3b 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800026f8:	c1 d8       	rjmp	80002732 <sd_mmc_spi_internal_init+0x1ca>
800026fa:	06 9b       	mov	r11,r3
800026fc:	00 9c       	mov	r12,r0
800026fe:	f0 1f 00 3d 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002702:	06 9b       	mov	r11,r3
80002704:	32 9c       	mov	r12,41
80002706:	f0 1f 00 3b 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
8000270a:	ac 8c       	st.b	r6[0x0],r12
8000270c:	04 9b       	mov	r11,r2
8000270e:	02 9c       	mov	r12,r1
80002710:	f0 1f 00 34 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002714:	c0 f8       	rjmp	80002732 <sd_mmc_spi_internal_init+0x1ca>
80002716:	06 9b       	mov	r11,r3
80002718:	00 9c       	mov	r12,r0
8000271a:	f0 1f 00 36 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
8000271e:	fc 1b 40 00 	movh	r11,0x4000
80002722:	32 9c       	mov	r12,41
80002724:	f0 1f 00 33 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002728:	ac 8c       	st.b	r6[0x0],r12
8000272a:	04 9b       	mov	r11,r2
8000272c:	02 9c       	mov	r12,r1
8000272e:	f0 1f 00 2d 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002732:	2f f7       	sub	r7,-1
80002734:	5c 87       	casts.h	r7
80002736:	fe 78 c3 50 	mov	r8,-15536
8000273a:	f0 07 19 00 	cp.h	r7,r8
8000273e:	c4 80       	breq	800027ce <sd_mmc_spi_internal_init+0x266>
80002740:	0d 89       	ld.ub	r9,r6[0x0]
80002742:	30 08       	mov	r8,0
80002744:	f0 09 18 00 	cp.b	r9,r8
80002748:	cc 51       	brne	800026d2 <sd_mmc_spi_internal_init+0x16a>
8000274a:	4a 98       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
8000274c:	11 89       	ld.ub	r9,r8[0x0]
8000274e:	30 28       	mov	r8,2
80002750:	f0 09 18 00 	cp.b	r9,r8
80002754:	c0 a1       	brne	80002768 <sd_mmc_spi_internal_init+0x200>
80002756:	f0 1f 00 2a 	mcall	800027fc <sd_mmc_spi_internal_init+0x294>
8000275a:	5b fc       	cp.w	r12,-1
8000275c:	c3 90       	breq	800027ce <sd_mmc_spi_internal_init+0x266>
8000275e:	58 1c       	cp.w	r12,1
80002760:	c0 41       	brne	80002768 <sd_mmc_spi_internal_init+0x200>
80002762:	30 39       	mov	r9,3
80002764:	4a 28       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
80002766:	b0 89       	st.b	r8[0x0],r9
80002768:	30 0b       	mov	r11,0
8000276a:	33 bc       	mov	r12,59
8000276c:	f0 1f 00 21 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002770:	4a 17       	lddpc	r7,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002772:	ae 8c       	st.b	r7[0x0],r12
80002774:	e0 6b 00 ff 	mov	r11,255
80002778:	fe 7c 28 00 	mov	r12,-55296
8000277c:	f0 1f 00 19 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002780:	e0 6b 02 00 	mov	r11,512
80002784:	31 0c       	mov	r12,16
80002786:	f0 1f 00 1b 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
8000278a:	ae 8c       	st.b	r7[0x0],r12
8000278c:	e0 6b 00 ff 	mov	r11,255
80002790:	fe 7c 28 00 	mov	r12,-55296
80002794:	f0 1f 00 13 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002798:	0f 89       	ld.ub	r9,r7[0x0]
8000279a:	30 08       	mov	r8,0
8000279c:	f0 09 18 00 	cp.b	r9,r8
800027a0:	c1 71       	brne	800027ce <sd_mmc_spi_internal_init+0x266>
800027a2:	49 8c       	lddpc	r12,80002800 <sd_mmc_spi_internal_init+0x298>
800027a4:	f0 1f 00 18 	mcall	80002804 <sd_mmc_spi_internal_init+0x29c>
800027a8:	c1 30       	breq	800027ce <sd_mmc_spi_internal_init+0x266>
800027aa:	f0 1f 00 18 	mcall	80002808 <sd_mmc_spi_internal_init+0x2a0>
800027ae:	30 19       	mov	r9,1
800027b0:	48 e8       	lddpc	r8,800027e8 <sd_mmc_spi_internal_init+0x280>
800027b2:	b0 89       	st.b	r8[0x0],r9
800027b4:	48 7b       	lddpc	r11,800027d0 <sd_mmc_spi_internal_init+0x268>
800027b6:	e0 68 1b 00 	mov	r8,6912
800027ba:	ea 18 00 b7 	orh	r8,0xb7
800027be:	97 18       	st.w	r11[0x4],r8
800027c0:	48 58       	lddpc	r8,800027d4 <sd_mmc_spi_internal_init+0x26c>
800027c2:	70 0a       	ld.w	r10,r8[0x0]
800027c4:	fe 7c 28 00 	mov	r12,-55296
800027c8:	f0 1f 00 04 	mcall	800027d8 <sd_mmc_spi_internal_init+0x270>
800027cc:	da 3a       	popm	r0-r7,pc,r12=1
800027ce:	d8 3a       	popm	r0-r7,pc,r12=0
800027d0:	00 00       	add	r0,r0
800027d2:	00 30       	cp.w	r0,r0
800027d4:	00 00       	add	r0,r0
800027d6:	00 40       	or	r0,r0
800027d8:	80 00       	ld.sh	r0,r0[0x0]
800027da:	2d 74       	sub	r4,-41
800027dc:	80 00       	ld.sh	r0,r0[0x0]
800027de:	2d 02       	sub	r2,-48
800027e0:	80 00       	ld.sh	r0,r0[0x0]
800027e2:	2e 32       	sub	r2,-29
800027e4:	80 00       	ld.sh	r0,r0[0x0]
800027e6:	2d 4e       	sub	lr,-44
800027e8:	00 00       	add	r0,r0
800027ea:	00 44       	or	r4,r0
800027ec:	00 00       	add	r0,r0
800027ee:	05 a6       	ld.ub	r6,r2[0x2]
800027f0:	80 00       	ld.sh	r0,r0[0x0]
800027f2:	22 74       	sub	r4,39
800027f4:	00 00       	add	r0,r0
800027f6:	05 b8       	ld.ub	r8,r2[0x3]
800027f8:	80 00       	ld.sh	r0,r0[0x0]
800027fa:	23 bc       	sub	r12,59
800027fc:	80 00       	ld.sh	r0,r0[0x0]
800027fe:	23 30       	sub	r0,51
80002800:	00 00       	add	r0,r0
80002802:	05 a8       	ld.ub	r8,r2[0x2]
80002804:	80 00       	ld.sh	r0,r0[0x0]
80002806:	24 74       	sub	r4,71
80002808:	80 00       	ld.sh	r0,r0[0x0]
8000280a:	20 04       	sub	r4,0

8000280c <sd_mmc_spi_init>:
8000280c:	eb cd 40 10 	pushm	r4,lr
80002810:	fa c4 ff f8 	sub	r4,sp,-8
80002814:	48 88       	lddpc	r8,80002834 <sd_mmc_spi_init+0x28>
80002816:	91 0c       	st.w	r8[0x0],r12
80002818:	48 88       	lddpc	r8,80002838 <sd_mmc_spi_init+0x2c>
8000281a:	e8 ea 00 00 	ld.d	r10,r4[0]
8000281e:	f0 eb 00 00 	st.d	r8[0],r10
80002822:	e8 ea 00 08 	ld.d	r10,r4[8]
80002826:	f0 eb 00 08 	st.d	r8[8],r10
8000282a:	f0 1f 00 05 	mcall	8000283c <sd_mmc_spi_init+0x30>
8000282e:	e3 cd 80 10 	ldm	sp++,r4,pc
80002832:	00 00       	add	r0,r0
80002834:	00 00       	add	r0,r0
80002836:	00 40       	or	r0,r0
80002838:	00 00       	add	r0,r0
8000283a:	00 30       	cp.w	r0,r0
8000283c:	80 00       	ld.sh	r0,r0[0x0]
8000283e:	25 68       	sub	r8,86

80002840 <flashc_set_wait_state>:
80002840:	fe 68 14 00 	mov	r8,-125952
80002844:	70 09       	ld.w	r9,r8[0x0]
80002846:	f3 dc d0 c1 	bfins	r9,r12,0x6,0x1
8000284a:	91 09       	st.w	r8[0x0],r9
8000284c:	5e fc       	retal	r12

8000284e <gpio_enable_module_pin>:
8000284e:	f8 08 16 05 	lsr	r8,r12,0x5
80002852:	a9 68       	lsl	r8,0x8
80002854:	e0 28 f0 00 	sub	r8,61440
80002858:	58 1b       	cp.w	r11,1
8000285a:	c0 d0       	breq	80002874 <gpio_enable_module_pin+0x26>
8000285c:	c0 63       	brcs	80002868 <gpio_enable_module_pin+0x1a>
8000285e:	58 2b       	cp.w	r11,2
80002860:	c1 00       	breq	80002880 <gpio_enable_module_pin+0x32>
80002862:	58 3b       	cp.w	r11,3
80002864:	c1 40       	breq	8000288c <gpio_enable_module_pin+0x3e>
80002866:	5e ff       	retal	1
80002868:	30 19       	mov	r9,1
8000286a:	f2 0c 09 49 	lsl	r9,r9,r12
8000286e:	91 69       	st.w	r8[0x18],r9
80002870:	91 a9       	st.w	r8[0x28],r9
80002872:	c1 28       	rjmp	80002896 <gpio_enable_module_pin+0x48>
80002874:	30 19       	mov	r9,1
80002876:	f2 0c 09 49 	lsl	r9,r9,r12
8000287a:	91 59       	st.w	r8[0x14],r9
8000287c:	91 a9       	st.w	r8[0x28],r9
8000287e:	c0 c8       	rjmp	80002896 <gpio_enable_module_pin+0x48>
80002880:	30 19       	mov	r9,1
80002882:	f2 0c 09 49 	lsl	r9,r9,r12
80002886:	91 69       	st.w	r8[0x18],r9
80002888:	91 99       	st.w	r8[0x24],r9
8000288a:	c0 68       	rjmp	80002896 <gpio_enable_module_pin+0x48>
8000288c:	30 19       	mov	r9,1
8000288e:	f2 0c 09 49 	lsl	r9,r9,r12
80002892:	91 59       	st.w	r8[0x14],r9
80002894:	91 99       	st.w	r8[0x24],r9
80002896:	30 19       	mov	r9,1
80002898:	f2 0c 09 4c 	lsl	r12,r9,r12
8000289c:	91 2c       	st.w	r8[0x8],r12
8000289e:	5e fd       	retal	0

800028a0 <gpio_enable_module>:
800028a0:	d4 21       	pushm	r4-r7,lr
800028a2:	18 97       	mov	r7,r12
800028a4:	16 94       	mov	r4,r11
800028a6:	58 0b       	cp.w	r11,0
800028a8:	c0 31       	brne	800028ae <gpio_enable_module+0xe>
800028aa:	30 05       	mov	r5,0
800028ac:	c0 d8       	rjmp	800028c6 <gpio_enable_module+0x26>
800028ae:	30 06       	mov	r6,0
800028b0:	0c 95       	mov	r5,r6
800028b2:	6e 1b       	ld.w	r11,r7[0x4]
800028b4:	6e 0c       	ld.w	r12,r7[0x0]
800028b6:	f0 1f 00 06 	mcall	800028cc <gpio_enable_module+0x2c>
800028ba:	18 45       	or	r5,r12
800028bc:	2f 87       	sub	r7,-8
800028be:	2f f6       	sub	r6,-1
800028c0:	0c 34       	cp.w	r4,r6
800028c2:	fe 9b ff f8 	brhi	800028b2 <gpio_enable_module+0x12>
800028c6:	0a 9c       	mov	r12,r5
800028c8:	d8 22       	popm	r4-r7,pc
800028ca:	00 00       	add	r0,r0
800028cc:	80 00       	ld.sh	r0,r0[0x0]
800028ce:	28 4e       	sub	lr,-124

800028d0 <gpio_enable_pin_pull_up>:
800028d0:	f8 08 16 05 	lsr	r8,r12,0x5
800028d4:	a9 68       	lsl	r8,0x8
800028d6:	e0 28 f0 00 	sub	r8,61440
800028da:	30 19       	mov	r9,1
800028dc:	f2 0c 09 4c 	lsl	r12,r9,r12
800028e0:	f1 4c 00 74 	st.w	r8[116],r12
800028e4:	5e fc       	retal	r12

800028e6 <gpio_set_gpio_pin>:
800028e6:	f8 08 16 05 	lsr	r8,r12,0x5
800028ea:	a9 68       	lsl	r8,0x8
800028ec:	e0 28 f0 00 	sub	r8,61440
800028f0:	30 19       	mov	r9,1
800028f2:	f2 0c 09 4c 	lsl	r12,r9,r12
800028f6:	f1 4c 00 54 	st.w	r8[84],r12
800028fa:	f1 4c 00 44 	st.w	r8[68],r12
800028fe:	91 1c       	st.w	r8[0x4],r12
80002900:	5e fc       	retal	r12

80002902 <gpio_clr_gpio_pin>:
80002902:	f8 08 16 05 	lsr	r8,r12,0x5
80002906:	a9 68       	lsl	r8,0x8
80002908:	e0 28 f0 00 	sub	r8,61440
8000290c:	30 19       	mov	r9,1
8000290e:	f2 0c 09 4c 	lsl	r12,r9,r12
80002912:	f1 4c 00 58 	st.w	r8[88],r12
80002916:	f1 4c 00 44 	st.w	r8[68],r12
8000291a:	91 1c       	st.w	r8[0x4],r12
8000291c:	5e fc       	retal	r12

8000291e <gpio_enable_pin_glitch_filter>:
8000291e:	f8 08 16 05 	lsr	r8,r12,0x5
80002922:	a9 68       	lsl	r8,0x8
80002924:	e0 28 f0 00 	sub	r8,61440
80002928:	30 19       	mov	r9,1
8000292a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000292e:	f1 4c 00 c4 	st.w	r8[196],r12
80002932:	5e fc       	retal	r12

80002934 <gpio_enable_pin_interrupt>:
80002934:	f8 08 16 05 	lsr	r8,r12,0x5
80002938:	a9 68       	lsl	r8,0x8
8000293a:	e0 28 f0 00 	sub	r8,61440
8000293e:	30 19       	mov	r9,1
80002940:	f2 0c 09 4c 	lsl	r12,r9,r12
80002944:	f1 4c 00 c4 	st.w	r8[196],r12
80002948:	12 3b       	cp.w	r11,r9
8000294a:	c0 a0       	breq	8000295e <gpio_enable_pin_interrupt+0x2a>
8000294c:	c0 43       	brcs	80002954 <gpio_enable_pin_interrupt+0x20>
8000294e:	58 2b       	cp.w	r11,2
80002950:	c1 11       	brne	80002972 <gpio_enable_pin_interrupt+0x3e>
80002952:	c0 b8       	rjmp	80002968 <gpio_enable_pin_interrupt+0x34>
80002954:	f1 4c 00 a8 	st.w	r8[168],r12
80002958:	f1 4c 00 b8 	st.w	r8[184],r12
8000295c:	c0 c8       	rjmp	80002974 <gpio_enable_pin_interrupt+0x40>
8000295e:	f1 4c 00 a4 	st.w	r8[164],r12
80002962:	f1 4c 00 b8 	st.w	r8[184],r12
80002966:	c0 78       	rjmp	80002974 <gpio_enable_pin_interrupt+0x40>
80002968:	f1 4c 00 a8 	st.w	r8[168],r12
8000296c:	f1 4c 00 b4 	st.w	r8[180],r12
80002970:	c0 28       	rjmp	80002974 <gpio_enable_pin_interrupt+0x40>
80002972:	5e ff       	retal	1
80002974:	f1 4c 00 94 	st.w	r8[148],r12
80002978:	5e fd       	retal	0

8000297a <gpio_get_pin_interrupt_flag>:
8000297a:	f8 08 16 05 	lsr	r8,r12,0x5
8000297e:	a9 68       	lsl	r8,0x8
80002980:	e0 28 f0 00 	sub	r8,61440
80002984:	f0 f8 00 d0 	ld.w	r8,r8[208]
80002988:	f0 0c 0a 4c 	lsr	r12,r8,r12
8000298c:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80002990:	5e fc       	retal	r12

80002992 <_unhandled_interrupt>:
80002992:	c0 08       	rjmp	80002992 <_unhandled_interrupt>

80002994 <INTC_register_interrupt>:
80002994:	f6 08 16 05 	lsr	r8,r11,0x5
80002998:	49 99       	lddpc	r9,800029fc <INTC_register_interrupt+0x68>
8000299a:	f2 08 00 39 	add	r9,r9,r8<<0x3
8000299e:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
800029a2:	72 19       	ld.w	r9,r9[0x4]
800029a4:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
800029a8:	58 0a       	cp.w	r10,0
800029aa:	c0 91       	brne	800029bc <INTC_register_interrupt+0x28>
800029ac:	49 59       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029ae:	49 6a       	lddpc	r10,80002a04 <INTC_register_interrupt+0x70>
800029b0:	12 1a       	sub	r10,r9
800029b2:	fe 79 08 00 	mov	r9,-63488
800029b6:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029ba:	5e fc       	retal	r12
800029bc:	58 1a       	cp.w	r10,1
800029be:	c0 a1       	brne	800029d2 <INTC_register_interrupt+0x3e>
800029c0:	49 09       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029c2:	49 2a       	lddpc	r10,80002a08 <INTC_register_interrupt+0x74>
800029c4:	12 1a       	sub	r10,r9
800029c6:	bf aa       	sbr	r10,0x1e
800029c8:	fe 79 08 00 	mov	r9,-63488
800029cc:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029d0:	5e fc       	retal	r12
800029d2:	58 2a       	cp.w	r10,2
800029d4:	c0 a1       	brne	800029e8 <INTC_register_interrupt+0x54>
800029d6:	48 b9       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029d8:	48 da       	lddpc	r10,80002a0c <INTC_register_interrupt+0x78>
800029da:	12 1a       	sub	r10,r9
800029dc:	bf ba       	sbr	r10,0x1f
800029de:	fe 79 08 00 	mov	r9,-63488
800029e2:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029e6:	5e fc       	retal	r12
800029e8:	48 69       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029ea:	48 aa       	lddpc	r10,80002a10 <INTC_register_interrupt+0x7c>
800029ec:	12 1a       	sub	r10,r9
800029ee:	ea 1a c0 00 	orh	r10,0xc000
800029f2:	fe 79 08 00 	mov	r9,-63488
800029f6:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029fa:	5e fc       	retal	r12
800029fc:	80 00       	ld.sh	r0,r0[0x0]
800029fe:	4e 00       	lddpc	r0,80002b7c <pm_pll_setup+0x16>
80002a00:	80 00       	ld.sh	r0,r0[0x0]
80002a02:	4c 00       	lddpc	r0,80002b00 <pm_wait_for_clk0_ready+0x8>
80002a04:	80 00       	ld.sh	r0,r0[0x0]
80002a06:	4d 04       	lddpc	r4,80002b44 <pm_cksel+0x24>
80002a08:	80 00       	ld.sh	r0,r0[0x0]
80002a0a:	4d 12       	lddpc	r2,80002b4c <pm_cksel+0x2c>
80002a0c:	80 00       	ld.sh	r0,r0[0x0]
80002a0e:	4d 20       	lddpc	r0,80002b54 <pm_cksel+0x34>
80002a10:	80 00       	ld.sh	r0,r0[0x0]
80002a12:	4d 2e       	lddpc	lr,80002b58 <pm_cksel+0x38>

80002a14 <INTC_init_interrupts>:
80002a14:	d4 21       	pushm	r4-r7,lr
80002a16:	49 18       	lddpc	r8,80002a58 <INTC_init_interrupts+0x44>
80002a18:	e3 b8 00 01 	mtsr	0x4,r8
80002a1c:	49 0e       	lddpc	lr,80002a5c <INTC_init_interrupts+0x48>
80002a1e:	30 07       	mov	r7,0
80002a20:	0e 94       	mov	r4,r7
80002a22:	49 0c       	lddpc	r12,80002a60 <INTC_init_interrupts+0x4c>
80002a24:	49 05       	lddpc	r5,80002a64 <INTC_init_interrupts+0x50>
80002a26:	10 15       	sub	r5,r8
80002a28:	fe 76 08 00 	mov	r6,-63488
80002a2c:	c1 08       	rjmp	80002a4c <INTC_init_interrupts+0x38>
80002a2e:	08 98       	mov	r8,r4
80002a30:	7c 1b       	ld.w	r11,lr[0x4]
80002a32:	7c 0a       	ld.w	r10,lr[0x0]
80002a34:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
80002a38:	2f f8       	sub	r8,-1
80002a3a:	10 3a       	cp.w	r10,r8
80002a3c:	fe 9b ff fc 	brhi	80002a34 <INTC_init_interrupts+0x20>
80002a40:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
80002a44:	2f f7       	sub	r7,-1
80002a46:	2f 8e       	sub	lr,-8
80002a48:	59 47       	cp.w	r7,20
80002a4a:	c0 50       	breq	80002a54 <INTC_init_interrupts+0x40>
80002a4c:	7c 08       	ld.w	r8,lr[0x0]
80002a4e:	58 08       	cp.w	r8,0
80002a50:	ce f1       	brne	80002a2e <INTC_init_interrupts+0x1a>
80002a52:	cf 7b       	rjmp	80002a40 <INTC_init_interrupts+0x2c>
80002a54:	d8 22       	popm	r4-r7,pc
80002a56:	00 00       	add	r0,r0
80002a58:	80 00       	ld.sh	r0,r0[0x0]
80002a5a:	4c 00       	lddpc	r0,80002b58 <pm_cksel+0x38>
80002a5c:	80 00       	ld.sh	r0,r0[0x0]
80002a5e:	4e 00       	lddpc	r0,80002bdc <pm_switch_to_osc0+0x18>
80002a60:	80 00       	ld.sh	r0,r0[0x0]
80002a62:	29 92       	sub	r2,-103
80002a64:	80 00       	ld.sh	r0,r0[0x0]
80002a66:	4d 04       	lddpc	r4,80002ba4 <pm_pll_enable+0x2>

80002a68 <_get_interrupt_handler>:
80002a68:	fe 78 08 00 	mov	r8,-63488
80002a6c:	e0 69 00 83 	mov	r9,131
80002a70:	f2 0c 01 0c 	sub	r12,r9,r12
80002a74:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
80002a78:	f2 ca ff c0 	sub	r10,r9,-64
80002a7c:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
80002a80:	58 08       	cp.w	r8,0
80002a82:	c0 21       	brne	80002a86 <_get_interrupt_handler+0x1e>
80002a84:	5e fd       	retal	0
80002a86:	f0 08 12 00 	clz	r8,r8
80002a8a:	48 5a       	lddpc	r10,80002a9c <_get_interrupt_handler+0x34>
80002a8c:	f4 09 00 39 	add	r9,r10,r9<<0x3
80002a90:	f0 08 11 1f 	rsub	r8,r8,31
80002a94:	72 19       	ld.w	r9,r9[0x4]
80002a96:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
80002a9a:	5e fc       	retal	r12
80002a9c:	80 00       	ld.sh	r0,r0[0x0]
80002a9e:	4e 00       	lddpc	r0,80002c1c <pwm_channel_init+0x2c>

80002aa0 <pm_set_osc0_mode>:
80002aa0:	78 a8       	ld.w	r8,r12[0x28]
80002aa2:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
80002aa6:	99 a8       	st.w	r12[0x28],r8
80002aa8:	5e fc       	retal	r12
80002aaa:	d7 03       	nop

80002aac <pm_enable_osc0_crystal>:
80002aac:	d4 01       	pushm	lr
80002aae:	ec 5b bb 9f 	cp.w	r11,899999
80002ab2:	e0 8b 00 04 	brhi	80002aba <pm_enable_osc0_crystal+0xe>
80002ab6:	30 4b       	mov	r11,4
80002ab8:	c1 38       	rjmp	80002ade <pm_enable_osc0_crystal+0x32>
80002aba:	e0 68 c6 bf 	mov	r8,50879
80002abe:	ea 18 00 2d 	orh	r8,0x2d
80002ac2:	10 3b       	cp.w	r11,r8
80002ac4:	e0 8b 00 04 	brhi	80002acc <pm_enable_osc0_crystal+0x20>
80002ac8:	30 5b       	mov	r11,5
80002aca:	c0 a8       	rjmp	80002ade <pm_enable_osc0_crystal+0x32>
80002acc:	e0 68 12 00 	mov	r8,4608
80002ad0:	ea 18 00 7a 	orh	r8,0x7a
80002ad4:	10 3b       	cp.w	r11,r8
80002ad6:	f9 bb 03 06 	movlo	r11,6
80002ada:	f9 bb 02 07 	movhs	r11,7
80002ade:	f0 1f 00 02 	mcall	80002ae4 <pm_enable_osc0_crystal+0x38>
80002ae2:	d8 02       	popm	pc
80002ae4:	80 00       	ld.sh	r0,r0[0x0]
80002ae6:	2a a0       	sub	r0,-86

80002ae8 <pm_enable_clk0_no_wait>:
80002ae8:	78 a8       	ld.w	r8,r12[0x28]
80002aea:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
80002aee:	99 a8       	st.w	r12[0x28],r8
80002af0:	78 08       	ld.w	r8,r12[0x0]
80002af2:	a3 a8       	sbr	r8,0x2
80002af4:	99 08       	st.w	r12[0x0],r8
80002af6:	5e fc       	retal	r12

80002af8 <pm_wait_for_clk0_ready>:
80002af8:	79 58       	ld.w	r8,r12[0x54]
80002afa:	e2 18 00 80 	andl	r8,0x80,COH
80002afe:	cf d0       	breq	80002af8 <pm_wait_for_clk0_ready>
80002b00:	5e fc       	retal	r12
80002b02:	d7 03       	nop

80002b04 <pm_enable_clk0>:
80002b04:	eb cd 40 80 	pushm	r7,lr
80002b08:	18 97       	mov	r7,r12
80002b0a:	f0 1f 00 04 	mcall	80002b18 <pm_enable_clk0+0x14>
80002b0e:	0e 9c       	mov	r12,r7
80002b10:	f0 1f 00 03 	mcall	80002b1c <pm_enable_clk0+0x18>
80002b14:	e3 cd 80 80 	ldm	sp++,r7,pc
80002b18:	80 00       	ld.sh	r0,r0[0x0]
80002b1a:	2a e8       	sub	r8,-82
80002b1c:	80 00       	ld.sh	r0,r0[0x0]
80002b1e:	2a f8       	sub	r8,-81

80002b20 <pm_cksel>:
80002b20:	eb cd 40 d0 	pushm	r4,r6-r7,lr
80002b24:	fa c4 ff f0 	sub	r4,sp,-16
80002b28:	30 0e       	mov	lr,0
80002b2a:	09 f7       	ld.ub	r7,r4[0x7]
80002b2c:	ef d7 c0 03 	bfextu	r7,r7,0x0,0x3
80002b30:	fd d7 d0 03 	bfins	lr,r7,0x0,0x3
80002b34:	09 b4       	ld.ub	r4,r4[0x3]
80002b36:	08 96       	mov	r6,r4
80002b38:	e9 d4 c0 01 	bfextu	r4,r4,0x0,0x1
80002b3c:	fd d4 d0 e1 	bfins	lr,r4,0x7,0x1
80002b40:	fd d7 d1 03 	bfins	lr,r7,0x8,0x3
80002b44:	fd d4 d1 e1 	bfins	lr,r4,0xf,0x1
80002b48:	fd da d2 03 	bfins	lr,r10,0x10,0x3
80002b4c:	fd db d2 e1 	bfins	lr,r11,0x17,0x1
80002b50:	fd d8 d3 03 	bfins	lr,r8,0x18,0x3
80002b54:	fd d9 d3 e1 	bfins	lr,r9,0x1f,0x1
80002b58:	99 1e       	st.w	r12[0x4],lr
80002b5a:	79 58       	ld.w	r8,r12[0x54]
80002b5c:	e2 18 00 20 	andl	r8,0x20,COH
80002b60:	cf d0       	breq	80002b5a <pm_cksel+0x3a>
80002b62:	e3 cd 80 d0 	ldm	sp++,r4,r6-r7,pc

80002b66 <pm_pll_setup>:
80002b66:	eb cd 40 80 	pushm	r7,lr
80002b6a:	40 27       	lddsp	r7,sp[0x8]
80002b6c:	30 0e       	mov	lr,0
80002b6e:	fd d8 d0 21 	bfins	lr,r8,0x1,0x1
80002b72:	fd d9 d1 04 	bfins	lr,r9,0x8,0x4
80002b76:	fd da d2 04 	bfins	lr,r10,0x10,0x4
80002b7a:	fd d7 d3 06 	bfins	lr,r7,0x18,0x6
80002b7e:	2f 8b       	sub	r11,-8
80002b80:	f8 0b 09 2e 	st.w	r12[r11<<0x2],lr
80002b84:	e3 cd 80 80 	ldm	sp++,r7,pc

80002b88 <pm_pll_set_option>:
80002b88:	d4 01       	pushm	lr
80002b8a:	2f 8b       	sub	r11,-8
80002b8c:	f8 0b 03 2e 	ld.w	lr,r12[r11<<0x2]
80002b90:	f5 e9 10 19 	or	r9,r10,r9<<0x1
80002b94:	f3 e8 10 28 	or	r8,r9,r8<<0x2
80002b98:	fd d8 d0 43 	bfins	lr,r8,0x2,0x3
80002b9c:	f8 0b 09 2e 	st.w	r12[r11<<0x2],lr
80002ba0:	d8 02       	popm	pc

80002ba2 <pm_pll_enable>:
80002ba2:	2f 8b       	sub	r11,-8
80002ba4:	f8 0b 03 28 	ld.w	r8,r12[r11<<0x2]
80002ba8:	a1 a8       	sbr	r8,0x0
80002baa:	f8 0b 09 28 	st.w	r12[r11<<0x2],r8
80002bae:	5e fc       	retal	r12

80002bb0 <pm_wait_for_pll0_locked>:
80002bb0:	79 58       	ld.w	r8,r12[0x54]
80002bb2:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002bb6:	cf d0       	breq	80002bb0 <pm_wait_for_pll0_locked>
80002bb8:	5e fc       	retal	r12

80002bba <pm_switch_to_clock>:
80002bba:	78 08       	ld.w	r8,r12[0x0]
80002bbc:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
80002bc0:	99 08       	st.w	r12[0x0],r8
80002bc2:	5e fc       	retal	r12

80002bc4 <pm_switch_to_osc0>:
80002bc4:	eb cd 40 c0 	pushm	r6-r7,lr
80002bc8:	18 97       	mov	r7,r12
80002bca:	14 96       	mov	r6,r10
80002bcc:	f0 1f 00 06 	mcall	80002be4 <pm_switch_to_osc0+0x20>
80002bd0:	0c 9b       	mov	r11,r6
80002bd2:	0e 9c       	mov	r12,r7
80002bd4:	f0 1f 00 05 	mcall	80002be8 <pm_switch_to_osc0+0x24>
80002bd8:	30 1b       	mov	r11,1
80002bda:	0e 9c       	mov	r12,r7
80002bdc:	f0 1f 00 04 	mcall	80002bec <pm_switch_to_osc0+0x28>
80002be0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002be4:	80 00       	ld.sh	r0,r0[0x0]
80002be6:	2a ac       	sub	r12,-86
80002be8:	80 00       	ld.sh	r0,r0[0x0]
80002bea:	2b 04       	sub	r4,-80
80002bec:	80 00       	ld.sh	r0,r0[0x0]
80002bee:	2b ba       	sub	r10,-69

80002bf0 <pwm_channel_init>:
80002bf0:	58 0b       	cp.w	r11,0
80002bf2:	c1 90       	breq	80002c24 <pwm_channel_init+0x34>
80002bf4:	58 6c       	cp.w	r12,6
80002bf6:	e0 8b 00 17 	brhi	80002c24 <pwm_channel_init+0x34>
80002bfa:	76 0a       	ld.w	r10,r11[0x0]
80002bfc:	fe 78 30 00 	mov	r8,-53248
80002c00:	f8 c9 ff f0 	sub	r9,r12,-16
80002c04:	a5 79       	lsl	r9,0x5
80002c06:	f0 09 00 09 	add	r9,r8,r9
80002c0a:	93 0a       	st.w	r9[0x0],r10
80002c0c:	76 19       	ld.w	r9,r11[0x4]
80002c0e:	a5 7c       	lsl	r12,0x5
80002c10:	f0 0c 00 0c 	add	r12,r8,r12
80002c14:	f8 c8 fd fc 	sub	r8,r12,-516
80002c18:	91 09       	st.w	r8[0x0],r9
80002c1a:	76 28       	ld.w	r8,r11[0x8]
80002c1c:	f8 cc fd f8 	sub	r12,r12,-520
80002c20:	99 08       	st.w	r12[0x0],r8
80002c22:	5e fd       	retal	0
80002c24:	5e ff       	retal	1

80002c26 <pwm_start_channels>:
80002c26:	18 98       	mov	r8,r12
80002c28:	e0 18 ff 80 	andl	r8,0xff80
80002c2c:	c0 20       	breq	80002c30 <pwm_start_channels+0xa>
80002c2e:	5e ff       	retal	1
80002c30:	fe 78 30 00 	mov	r8,-53248
80002c34:	91 1c       	st.w	r8[0x4],r12
80002c36:	5e fd       	retal	0

80002c38 <pwm_init>:
80002c38:	e1 b8 00 00 	mfsr	r8,0x0
80002c3c:	58 0c       	cp.w	r12,0
80002c3e:	c0 21       	brne	80002c42 <pwm_init+0xa>
80002c40:	5e ff       	retal	1
80002c42:	e6 18 00 01 	andh	r8,0x1,COH
80002c46:	c0 91       	brne	80002c58 <pwm_init+0x20>
80002c48:	d3 03       	ssrf	0x10
80002c4a:	fe 78 30 00 	mov	r8,-53248
80002c4e:	37 f9       	mov	r9,127
80002c50:	91 59       	st.w	r8[0x14],r9
80002c52:	70 78       	ld.w	r8,r8[0x1c]
80002c54:	d5 03       	csrf	0x10
80002c56:	c0 68       	rjmp	80002c62 <pwm_init+0x2a>
80002c58:	fe 78 30 00 	mov	r8,-53248
80002c5c:	37 f9       	mov	r9,127
80002c5e:	91 59       	st.w	r8[0x14],r9
80002c60:	70 78       	ld.w	r8,r8[0x1c]
80002c62:	78 08       	ld.w	r8,r12[0x0]
80002c64:	78 39       	ld.w	r9,r12[0xc]
80002c66:	a9 69       	lsl	r9,0x8
80002c68:	f3 e8 11 09 	or	r9,r9,r8<<0x10
80002c6c:	78 18       	ld.w	r8,r12[0x4]
80002c6e:	10 49       	or	r9,r8
80002c70:	78 28       	ld.w	r8,r12[0x8]
80002c72:	f3 e8 11 89 	or	r9,r9,r8<<0x18
80002c76:	fe 78 30 00 	mov	r8,-53248
80002c7a:	91 09       	st.w	r8[0x0],r9
80002c7c:	5e fd       	retal	0

80002c7e <getBaudDiv>:
80002c7e:	f8 c8 00 01 	sub	r8,r12,1
80002c82:	f0 0b 00 0b 	add	r11,r8,r11
80002c86:	f6 0c 0d 0a 	divu	r10,r11,r12
80002c8a:	14 9c       	mov	r12,r10
80002c8c:	f4 c8 00 01 	sub	r8,r10,1
80002c90:	e0 48 00 fe 	cp.w	r8,254
80002c94:	e0 88 00 03 	brls	80002c9a <getBaudDiv+0x1c>
80002c98:	5e fe       	retal	-1
80002c9a:	5c 8c       	casts.h	r12
80002c9c:	5e fc       	retal	r12

80002c9e <spi_initMaster>:
80002c9e:	f7 39 00 0d 	ld.ub	r9,r11[13]
80002ca2:	30 18       	mov	r8,1
80002ca4:	f0 09 18 00 	cp.b	r9,r8
80002ca8:	e0 88 00 04 	brls	80002cb0 <spi_initMaster+0x12>
80002cac:	30 2c       	mov	r12,2
80002cae:	5e fc       	retal	r12
80002cb0:	e0 68 00 80 	mov	r8,128
80002cb4:	99 08       	st.w	r12[0x0],r8
80002cb6:	78 18       	ld.w	r8,r12[0x4]
80002cb8:	30 19       	mov	r9,1
80002cba:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80002cbe:	f7 39 00 0d 	ld.ub	r9,r11[13]
80002cc2:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
80002cc6:	30 09       	mov	r9,0
80002cc8:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
80002ccc:	30 fa       	mov	r10,15
80002cce:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
80002cd2:	99 18       	st.w	r12[0x4],r8
80002cd4:	5e f9       	retal	r9

80002cd6 <spi_selectionMode>:
80002cd6:	d4 01       	pushm	lr
80002cd8:	30 18       	mov	r8,1
80002cda:	f0 0b 18 00 	cp.b	r11,r8
80002cde:	5f be       	srhi	lr
80002ce0:	f0 0a 18 00 	cp.b	r10,r8
80002ce4:	5f b8       	srhi	r8
80002ce6:	fd e8 10 08 	or	r8,lr,r8
80002cea:	c0 30       	breq	80002cf0 <spi_selectionMode+0x1a>
80002cec:	30 2c       	mov	r12,2
80002cee:	d8 02       	popm	pc
80002cf0:	78 18       	ld.w	r8,r12[0x4]
80002cf2:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80002cf6:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
80002cfa:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80002cfe:	99 18       	st.w	r12[0x4],r8
80002d00:	d8 0a       	popm	pc,r12=0

80002d02 <spi_selectChip>:
80002d02:	78 18       	ld.w	r8,r12[0x4]
80002d04:	ea 18 00 0f 	orh	r8,0xf
80002d08:	99 18       	st.w	r12[0x4],r8
80002d0a:	78 18       	ld.w	r8,r12[0x4]
80002d0c:	e2 18 00 04 	andl	r8,0x4,COH
80002d10:	c0 f0       	breq	80002d2e <spi_selectChip+0x2c>
80002d12:	30 e8       	mov	r8,14
80002d14:	f0 0b 18 00 	cp.b	r11,r8
80002d18:	e0 8b 00 19 	brhi	80002d4a <spi_selectChip+0x48>
80002d1c:	78 18       	ld.w	r8,r12[0x4]
80002d1e:	b1 6b       	lsl	r11,0x10
80002d20:	ea 1b ff f0 	orh	r11,0xfff0
80002d24:	e8 1b ff ff 	orl	r11,0xffff
80002d28:	10 6b       	and	r11,r8
80002d2a:	99 1b       	st.w	r12[0x4],r11
80002d2c:	5e fd       	retal	0
80002d2e:	30 38       	mov	r8,3
80002d30:	f0 0b 18 00 	cp.b	r11,r8
80002d34:	e0 8b 00 0b 	brhi	80002d4a <spi_selectChip+0x48>
80002d38:	78 18       	ld.w	r8,r12[0x4]
80002d3a:	2f 0b       	sub	r11,-16
80002d3c:	30 19       	mov	r9,1
80002d3e:	f2 0b 09 4b 	lsl	r11,r9,r11
80002d42:	5c db       	com	r11
80002d44:	10 6b       	and	r11,r8
80002d46:	99 1b       	st.w	r12[0x4],r11
80002d48:	5e fd       	retal	0
80002d4a:	30 2c       	mov	r12,2
80002d4c:	5e fc       	retal	r12

80002d4e <spi_unselectChip>:
80002d4e:	e0 68 3a 98 	mov	r8,15000
80002d52:	c0 58       	rjmp	80002d5c <spi_unselectChip+0xe>
80002d54:	58 08       	cp.w	r8,0
80002d56:	c0 21       	brne	80002d5a <spi_unselectChip+0xc>
80002d58:	5e ff       	retal	1
80002d5a:	20 18       	sub	r8,1
80002d5c:	78 49       	ld.w	r9,r12[0x10]
80002d5e:	e2 19 02 00 	andl	r9,0x200,COH
80002d62:	cf 90       	breq	80002d54 <spi_unselectChip+0x6>
80002d64:	78 18       	ld.w	r8,r12[0x4]
80002d66:	ea 18 00 0f 	orh	r8,0xf
80002d6a:	99 18       	st.w	r12[0x4],r8
80002d6c:	fc 18 01 00 	movh	r8,0x100
80002d70:	99 08       	st.w	r12[0x0],r8
80002d72:	5e fd       	retal	0

80002d74 <spi_setupChipReg>:
80002d74:	eb cd 40 f8 	pushm	r3-r7,lr
80002d78:	18 95       	mov	r5,r12
80002d7a:	16 97       	mov	r7,r11
80002d7c:	f7 36 00 0c 	ld.ub	r6,r11[12]
80002d80:	30 38       	mov	r8,3
80002d82:	f0 06 18 00 	cp.b	r6,r8
80002d86:	e0 8b 00 4d 	brhi	80002e20 <spi_setupChipReg+0xac>
80002d8a:	f7 34 00 0b 	ld.ub	r4,r11[11]
80002d8e:	30 18       	mov	r8,1
80002d90:	f0 04 18 00 	cp.b	r4,r8
80002d94:	e0 8b 00 46 	brhi	80002e20 <spi_setupChipReg+0xac>
80002d98:	f7 33 00 08 	ld.ub	r3,r11[8]
80002d9c:	30 78       	mov	r8,7
80002d9e:	f0 03 18 00 	cp.b	r3,r8
80002da2:	e0 88 00 3f 	brls	80002e20 <spi_setupChipReg+0xac>
80002da6:	31 08       	mov	r8,16
80002da8:	f0 03 18 00 	cp.b	r3,r8
80002dac:	e0 8b 00 3a 	brhi	80002e20 <spi_setupChipReg+0xac>
80002db0:	14 9b       	mov	r11,r10
80002db2:	6e 1c       	ld.w	r12,r7[0x4]
80002db4:	f0 1f 00 1d 	mcall	80002e28 <spi_setupChipReg+0xb4>
80002db8:	c3 45       	brlt	80002e20 <spi_setupChipReg+0xac>
80002dba:	30 08       	mov	r8,0
80002dbc:	ec 09 16 01 	lsr	r9,r6,0x1
80002dc0:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80002dc4:	ec 16 00 01 	eorl	r6,0x1
80002dc8:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
80002dcc:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
80002dd0:	20 83       	sub	r3,8
80002dd2:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
80002dd6:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
80002dda:	ef 39 00 09 	ld.ub	r9,r7[9]
80002dde:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
80002de2:	ef 39 00 0a 	ld.ub	r9,r7[10]
80002de6:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80002dea:	0f 89       	ld.ub	r9,r7[0x0]
80002dec:	30 1a       	mov	r10,1
80002dee:	f4 09 18 00 	cp.b	r9,r10
80002df2:	c0 e0       	breq	80002e0e <spi_setupChipReg+0x9a>
80002df4:	c0 a3       	brcs	80002e08 <spi_setupChipReg+0x94>
80002df6:	30 2a       	mov	r10,2
80002df8:	f4 09 18 00 	cp.b	r9,r10
80002dfc:	c0 c0       	breq	80002e14 <spi_setupChipReg+0xa0>
80002dfe:	30 3a       	mov	r10,3
80002e00:	f4 09 18 00 	cp.b	r9,r10
80002e04:	c0 e1       	brne	80002e20 <spi_setupChipReg+0xac>
80002e06:	c0 a8       	rjmp	80002e1a <spi_setupChipReg+0xa6>
80002e08:	8b c8       	st.w	r5[0x30],r8
80002e0a:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e0e:	8b d8       	st.w	r5[0x34],r8
80002e10:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e14:	8b e8       	st.w	r5[0x38],r8
80002e16:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e1a:	8b f8       	st.w	r5[0x3c],r8
80002e1c:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e20:	30 2c       	mov	r12,2
80002e22:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002e26:	00 00       	add	r0,r0
80002e28:	80 00       	ld.sh	r0,r0[0x0]
80002e2a:	2c 7e       	sub	lr,-57

80002e2c <spi_enable>:
80002e2c:	30 18       	mov	r8,1
80002e2e:	99 08       	st.w	r12[0x0],r8
80002e30:	5e fc       	retal	r12

80002e32 <spi_write>:
80002e32:	e0 68 3a 98 	mov	r8,15000
80002e36:	c0 58       	rjmp	80002e40 <spi_write+0xe>
80002e38:	58 08       	cp.w	r8,0
80002e3a:	c0 21       	brne	80002e3e <spi_write+0xc>
80002e3c:	5e ff       	retal	1
80002e3e:	20 18       	sub	r8,1
80002e40:	78 49       	ld.w	r9,r12[0x10]
80002e42:	e2 19 00 02 	andl	r9,0x2,COH
80002e46:	cf 90       	breq	80002e38 <spi_write+0x6>
80002e48:	5c 7b       	castu.h	r11
80002e4a:	99 3b       	st.w	r12[0xc],r11
80002e4c:	5e fd       	retal	0

80002e4e <spi_read>:
80002e4e:	e0 68 3a 98 	mov	r8,15000
80002e52:	c0 58       	rjmp	80002e5c <spi_read+0xe>
80002e54:	58 08       	cp.w	r8,0
80002e56:	c0 21       	brne	80002e5a <spi_read+0xc>
80002e58:	5e ff       	retal	1
80002e5a:	20 18       	sub	r8,1
80002e5c:	78 49       	ld.w	r9,r12[0x10]
80002e5e:	e2 19 02 01 	andl	r9,0x201,COH
80002e62:	e0 49 02 01 	cp.w	r9,513
80002e66:	cf 71       	brne	80002e54 <spi_read+0x6>
80002e68:	78 28       	ld.w	r8,r12[0x8]
80002e6a:	b6 08       	st.h	r11[0x0],r8
80002e6c:	5e fd       	retal	0
80002e6e:	d7 03       	nop

80002e70 <_stext>:
80002e70:	e0 7d 00 00 	mov	sp,65536
80002e74:	fe c0 e2 74 	sub	r0,pc,-7564
80002e78:	e3 b0 00 01 	mtsr	0x4,r0
80002e7c:	d5 53       	csrf	0x15
80002e7e:	30 40       	mov	r0,4
80002e80:	33 01       	mov	r1,48
80002e82:	02 30       	cp.w	r0,r1
80002e84:	c0 72       	brcc	80002e92 <idata_load_loop_end>
80002e86:	fe c2 ac 0e 	sub	r2,pc,-21490

80002e8a <idata_load_loop>:
80002e8a:	a5 05       	ld.d	r4,r2++
80002e8c:	a1 24       	st.d	r0++,r4
80002e8e:	02 30       	cp.w	r0,r1
80002e90:	cf d3       	brcs	80002e8a <idata_load_loop>

80002e92 <idata_load_loop_end>:
80002e92:	33 00       	mov	r0,48
80002e94:	e0 61 12 68 	mov	r1,4712
80002e98:	02 30       	cp.w	r0,r1
80002e9a:	c0 62       	brcc	80002ea6 <udata_clear_loop_end>
80002e9c:	30 02       	mov	r2,0
80002e9e:	30 03       	mov	r3,0

80002ea0 <udata_clear_loop>:
80002ea0:	a1 22       	st.d	r0++,r2
80002ea2:	02 30       	cp.w	r0,r1
80002ea4:	cf e3       	brcs	80002ea0 <udata_clear_loop>

80002ea6 <udata_clear_loop_end>:
80002ea6:	fe cf e5 76 	sub	pc,pc,-6794
80002eaa:	d7 03       	nop

80002eac <gfx_BeginNewTerminal>:
			}
		}
	}
}

void gfx_BeginNewTerminal(Vector2 topLeft){
80002eac:	eb cd 00 10 	pushm	r4
80002eb0:	fa c4 ff fc 	sub	r4,sp,-4
80002eb4:	88 09       	ld.sh	r9,r4[0x0]
	newLinePosition = topLeft;
80002eb6:	48 48       	lddpc	r8,80002ec4 <gfx_BeginNewTerminal+0x18>
80002eb8:	09 aa       	ld.ub	r10,r4[0x2]
80002eba:	b0 aa       	st.b	r8[0x2],r10
80002ebc:	b0 09       	st.h	r8[0x0],r9
}
80002ebe:	e3 cd 00 10 	ldm	sp++,r4
80002ec2:	5e fc       	retal	r12
80002ec4:	00 00       	add	r0,r0
80002ec6:	01 24       	ld.uh	r4,r0++

80002ec8 <gfx_Label>:
void gfx_FillScreen(Color color){


}

void gfx_Label(Vector2 position, char *content, uint8_t contentSize,TextSize textSize, Color color){
80002ec8:	d4 31       	pushm	r0-r7,lr
80002eca:	20 cd       	sub	sp,48
80002ecc:	fa c1 ff ac 	sub	r1,sp,-84
80002ed0:	18 90       	mov	r0,r12
80002ed2:	50 7b       	stdsp	sp[0x1c],r11
80002ed4:	50 0a       	stdsp	sp[0x0],r10
	if(*content == '\0' || contentSize == 0)
80002ed6:	19 89       	ld.ub	r9,r12[0x0]
80002ed8:	30 08       	mov	r8,0
80002eda:	f0 09 18 00 	cp.b	r9,r8
80002ede:	5f 09       	sreq	r9
80002ee0:	f0 0b 18 00 	cp.b	r11,r8
80002ee4:	5f 0a       	sreq	r10
80002ee6:	f3 ea 10 0a 	or	r10,r9,r10
80002eea:	f0 0a 18 00 	cp.b	r10,r8
80002eee:	e0 81 00 a3 	brne	80003034 <gfx_Label+0x16c>
		return;
	Vector2 fontSize = {8,8};
	if(textSize == Medium){
80002ef2:	40 0a       	lddsp	r10,sp[0x0]
80002ef4:	58 1a       	cp.w	r10,1
80002ef6:	f9 b8 00 14 	moveq	r8,20
80002efa:	fb f8 0a 02 	st.weq	sp[0x8],r8
80002efe:	f9 b2 00 10 	moveq	r2,16
80002f02:	f9 b2 01 08 	movne	r2,8
80002f06:	58 12       	cp.w	r2,1
80002f08:	fb f2 1a 02 	st.wne	sp[0x8],r2
		fontSize.x = 20;
		fontSize.y = 16;
	}
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
80002f0c:	40 78       	lddsp	r8,sp[0x1c]
80002f0e:	58 08       	cp.w	r8,0
80002f10:	e0 80 00 92 	breq	80003034 <gfx_Label+0x16c>
		if(*content == '\0')
80002f14:	58 09       	cp.w	r9,0
80002f16:	e0 81 00 8f 	brne	80003034 <gfx_Label+0x16c>
80002f1a:	30 8a       	mov	r10,8
80002f1c:	50 5a       	stdsp	sp[0x14],r10
80002f1e:	31 09       	mov	r9,16
80002f20:	50 39       	stdsp	sp[0xc],r9
80002f22:	30 08       	mov	r8,0
80002f24:	50 68       	stdsp	sp[0x18],r8
80002f26:	c0 f8       	rjmp	80002f44 <gfx_Label+0x7c>
	if(textSize == Medium){
		fontSize.x = 20;
		fontSize.y = 16;
	}
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
80002f28:	2f f0       	sub	r0,-1
80002f2a:	40 38       	lddsp	r8,sp[0xc]
80002f2c:	2f 28       	sub	r8,-14
80002f2e:	5c 88       	casts.h	r8
80002f30:	50 38       	stdsp	sp[0xc],r8
80002f32:	40 58       	lddsp	r8,sp[0x14]
80002f34:	2f 68       	sub	r8,-10
80002f36:	5c 88       	casts.h	r8
80002f38:	50 58       	stdsp	sp[0x14],r8
		if(*content == '\0')
80002f3a:	01 89       	ld.ub	r9,r0[0x0]
80002f3c:	30 08       	mov	r8,0
80002f3e:	f0 09 18 00 	cp.b	r9,r8
80002f42:	c7 90       	breq	80003034 <gfx_Label+0x16c>
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
80002f44:	40 2a       	lddsp	r10,sp[0x8]
80002f46:	58 0a       	cp.w	r10,0
80002f48:	c6 d0       	breq	80003022 <gfx_Label+0x15a>
80002f4a:	30 03       	mov	r3,0
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
80002f4c:	40 59       	lddsp	r9,sp[0x14]
80002f4e:	5c 89       	casts.h	r9
80002f50:	50 49       	stdsp	sp[0x10],r9
80002f52:	c5 a8       	rjmp	80003006 <gfx_Label+0x13e>
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
				}else{
					if(FONT8x8[*content - 31][x] & (1<<y))
						screen_SetPixel(vector2_Add(position,(Vector2){n * 10 + 8 - y, 8 - x}), color);
				}
				mask <<= 1;
80002f54:	a1 74       	lsl	r4,0x1
80002f56:	5c 84       	casts.h	r4
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
				if(textSize == Medium){
80002f58:	40 08       	lddsp	r8,sp[0x0]
80002f5a:	58 18       	cp.w	r8,1
80002f5c:	c2 61       	brne	80002fa8 <gfx_Label+0xe0>
					if(FONT16x12[*content - 31][x] & mask)
80002f5e:	01 88       	ld.ub	r8,r0[0x0]
80002f60:	f0 08 00 28 	add	r8,r8,r8<<0x2
80002f64:	e6 08 00 28 	add	r8,r3,r8<<0x2
80002f68:	f0 c8 02 6c 	sub	r8,r8,620
80002f6c:	4b 3a       	lddpc	r10,80003038 <gfx_Label+0x170>
80002f6e:	f4 08 04 18 	ld.sh	r8,r10[r8<<0x1]
80002f72:	e9 e8 00 08 	and	r8,r4,r8
80002f76:	30 09       	mov	r9,0
80002f78:	f2 08 19 00 	cp.h	r8,r9
80002f7c:	c3 60       	breq	80002fe8 <gfx_Label+0x120>
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
80002f7e:	fb 55 00 20 	st.h	sp[32],r5
80002f82:	1b f8       	ld.ub	r8,sp[0x7]
80002f84:	fb 68 00 22 	st.b	sp[34],r8
80002f88:	40 88       	lddsp	r8,sp[0x20]
80002f8a:	1a d8       	st.w	--sp,r8
80002f8c:	62 08       	ld.w	r8,r1[0x0]
80002f8e:	1a d8       	st.w	--sp,r8
80002f90:	fa cc ff d4 	sub	r12,sp,-44
80002f94:	f0 1f 00 2a 	mcall	8000303c <gfx_Label+0x174>
80002f98:	62 18       	ld.w	r8,r1[0x4]
80002f9a:	1a d8       	st.w	--sp,r8
80002f9c:	40 c8       	lddsp	r8,sp[0x30]
80002f9e:	1a d8       	st.w	--sp,r8
80002fa0:	f0 1f 00 28 	mcall	80003040 <gfx_Label+0x178>
80002fa4:	2f cd       	sub	sp,-16
80002fa6:	c2 18       	rjmp	80002fe8 <gfx_Label+0x120>
				}else{
					if(FONT8x8[*content - 31][x] & (1<<y))
80002fa8:	01 88       	ld.ub	r8,r0[0x0]
80002faa:	21 f8       	sub	r8,31
80002fac:	e6 08 00 38 	add	r8,r3,r8<<0x3
80002fb0:	4a 5a       	lddpc	r10,80003044 <gfx_Label+0x17c>
80002fb2:	f4 08 07 08 	ld.ub	r8,r10[r8]
80002fb6:	f0 07 08 48 	asr	r8,r8,r7
80002fba:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002fbe:	c1 50       	breq	80002fe8 <gfx_Label+0x120>
						screen_SetPixel(vector2_Add(position,(Vector2){n * 10 + 8 - y, 8 - x}), color);
80002fc0:	fb 56 00 28 	st.h	sp[40],r6
80002fc4:	1b e9       	ld.ub	r9,sp[0x6]
80002fc6:	fb 69 00 2a 	st.b	sp[42],r9
80002fca:	40 a8       	lddsp	r8,sp[0x28]
80002fcc:	1a d8       	st.w	--sp,r8
80002fce:	62 08       	ld.w	r8,r1[0x0]
80002fd0:	1a d8       	st.w	--sp,r8
80002fd2:	fa cc ff cc 	sub	r12,sp,-52
80002fd6:	f0 1f 00 1a 	mcall	8000303c <gfx_Label+0x174>
80002fda:	62 18       	ld.w	r8,r1[0x4]
80002fdc:	1a d8       	st.w	--sp,r8
80002fde:	40 e8       	lddsp	r8,sp[0x38]
80002fe0:	1a d8       	st.w	--sp,r8
80002fe2:	f0 1f 00 18 	mcall	80003040 <gfx_Label+0x178>
80002fe6:	2f cd       	sub	sp,-16
80002fe8:	2f f7       	sub	r7,-1
80002fea:	20 15       	sub	r5,1
80002fec:	5c 85       	casts.h	r5
80002fee:	20 16       	sub	r6,1
80002ff0:	5c 86       	casts.h	r6
		if(*content == '\0')
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
80002ff2:	ee 02 18 00 	cp.b	r2,r7
80002ff6:	fe 9b ff af 	brhi	80002f54 <gfx_Label+0x8c>
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
		if(*content == '\0')
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
80002ffa:	2f f3       	sub	r3,-1
80002ffc:	5c 53       	castu.b	r3
80002ffe:	40 2a       	lddsp	r10,sp[0x8]
80003000:	f4 03 19 00 	cp.h	r3,r10
80003004:	c0 f2       	brcc	80003022 <gfx_Label+0x15a>
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
80003006:	58 02       	cp.w	r2,0
80003008:	cf 90       	breq	80002ffa <gfx_Label+0x132>
8000300a:	40 46       	lddsp	r6,sp[0x10]
8000300c:	40 35       	lddsp	r5,sp[0xc]
8000300e:	5c 85       	casts.h	r5
80003010:	30 07       	mov	r7,0
80003012:	30 14       	mov	r4,1
				if(textSize == Medium){
					if(FONT16x12[*content - 31][x] & mask)
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
				}else{
					if(FONT8x8[*content - 31][x] & (1<<y))
						screen_SetPixel(vector2_Add(position,(Vector2){n * 10 + 8 - y, 8 - x}), color);
80003014:	e6 09 11 08 	rsub	r9,r3,8
80003018:	ba e9       	st.b	sp[0x6],r9
		for(uint8_t x = 0; x < fontSize.x; x++){
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
				if(textSize == Medium){
					if(FONT16x12[*content - 31][x] & mask)
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
8000301a:	e6 08 11 0c 	rsub	r8,r3,12
8000301e:	ba f8       	st.b	sp[0x7],r8
80003020:	c9 cb       	rjmp	80002f58 <gfx_Label+0x90>
	if(textSize == Medium){
		fontSize.x = 20;
		fontSize.y = 16;
	}
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
80003022:	40 68       	lddsp	r8,sp[0x18]
80003024:	2f f8       	sub	r8,-1
80003026:	5c 58       	castu.b	r8
80003028:	50 68       	stdsp	sp[0x18],r8
8000302a:	40 7a       	lddsp	r10,sp[0x1c]
8000302c:	f0 0a 18 00 	cp.b	r10,r8
80003030:	fe 9b ff 7c 	brhi	80002f28 <gfx_Label+0x60>
				}
				mask <<= 1;
			}
		}
	}
}
80003034:	2f 4d       	sub	sp,-48
80003036:	d8 32       	popm	r0-r7,pc
80003038:	80 00       	ld.sh	r0,r0[0x0]
8000303a:	51 a8       	stdsp	sp[0x68],r8
8000303c:	80 00       	ld.sh	r0,r0[0x0]
8000303e:	41 c4       	lddsp	r4,sp[0x70]
80003040:	80 00       	ld.sh	r0,r0[0x0]
80003042:	3d ac       	mov	r12,-38
80003044:	80 00       	ld.sh	r0,r0[0x0]
80003046:	4e a0       	lddpc	r0,800031ec <gfx_AddOptionToTerminal+0x64>

80003048 <gfx_cmdLine>:
	gfx_Label(position,shortcut, 1, Small, (Color){BLACK});
	position.x += 10;
	gfx_Label(position,description, 7, Small, color);
}

void gfx_cmdLine(char *content, uint8_t contentSize, Color color, bool firstDraw){
80003048:	d4 21       	pushm	r4-r7,lr
8000304a:	20 5d       	sub	sp,20
8000304c:	fa c4 ff d8 	sub	r4,sp,-40
80003050:	18 96       	mov	r6,r12
80003052:	16 97       	mov	r7,r11
	static uint32_t counter = 0;
	counter ++;
80003054:	4a 69       	lddpc	r9,800030ec <gfx_cmdLine+0xa4>
80003056:	72 08       	ld.w	r8,r9[0x0]
80003058:	2f f8       	sub	r8,-1
8000305a:	93 08       	st.w	r9[0x0],r8
	
	if(firstDraw){
8000305c:	58 0a       	cp.w	r10,0
8000305e:	c1 30       	breq	80003084 <gfx_cmdLine+0x3c>
		counter = 0;
80003060:	30 05       	mov	r5,0
80003062:	93 05       	st.w	r9[0x0],r5
		gfx_Label((Vector2){20,40}, content, contentSize, Small, color);
80003064:	30 4a       	mov	r10,4
80003066:	4a 3b       	lddpc	r11,800030f0 <gfx_cmdLine+0xa8>
80003068:	1a 9c       	mov	r12,sp
8000306a:	f0 1f 00 23 	mcall	800030f4 <gfx_cmdLine+0xac>
8000306e:	68 08       	ld.w	r8,r4[0x0]
80003070:	1a d8       	st.w	--sp,r8
80003072:	40 18       	lddsp	r8,sp[0x4]
80003074:	1a d8       	st.w	--sp,r8
80003076:	0a 9a       	mov	r10,r5
80003078:	0e 9b       	mov	r11,r7
8000307a:	0c 9c       	mov	r12,r6
8000307c:	f0 1f 00 1f 	mcall	800030f8 <gfx_cmdLine+0xb0>
80003080:	2f ed       	sub	sp,-8
80003082:	c3 38       	rjmp	800030e8 <gfx_cmdLine+0xa0>
	}
	else if(counter == 128000){
80003084:	e0 58 f4 00 	cp.w	r8,128000
80003088:	c1 21       	brne	800030ac <gfx_cmdLine+0x64>
		gfx_Label((Vector2){20 + contentSize * 10, 40}, "|", 2, Small, color);
8000308a:	f6 07 10 0a 	mul	r7,r11,10
8000308e:	2e c7       	sub	r7,-20
80003090:	ba 27       	st.h	sp[0x4],r7
80003092:	32 88       	mov	r8,40
80003094:	ba e8       	st.b	sp[0x6],r8
80003096:	68 08       	ld.w	r8,r4[0x0]
80003098:	1a d8       	st.w	--sp,r8
8000309a:	40 28       	lddsp	r8,sp[0x8]
8000309c:	1a d8       	st.w	--sp,r8
8000309e:	30 0a       	mov	r10,0
800030a0:	30 2b       	mov	r11,2
800030a2:	49 7c       	lddpc	r12,800030fc <gfx_cmdLine+0xb4>
800030a4:	f0 1f 00 15 	mcall	800030f8 <gfx_cmdLine+0xb0>
800030a8:	2f ed       	sub	sp,-8
800030aa:	c1 f8       	rjmp	800030e8 <gfx_cmdLine+0xa0>
	}
	else if (counter == 256000){
800030ac:	e2 58 e8 00 	cp.w	r8,256000
800030b0:	c1 c1       	brne	800030e8 <gfx_cmdLine+0xa0>
		screen_SetPixels(Rect((contentSize) * 10 + 20,40,(contentSize + 2) * 10 + 20,50),(Color){BLACK});
800030b2:	30 06       	mov	r6,0
800030b4:	50 26       	stdsp	sp[0x8],r6
800030b6:	f6 0b 10 0a 	mul	r11,r11,10
800030ba:	f6 c9 ff d8 	sub	r9,r11,-40
800030be:	2e cb       	sub	r11,-20
800030c0:	33 28       	mov	r8,50
800030c2:	e2 19 ff fe 	andl	r9,0xfffe,COH
800030c6:	32 8a       	mov	r10,40
800030c8:	e2 1b ff fe 	andl	r11,0xfffe,COH
800030cc:	fa cc ff f4 	sub	r12,sp,-12
800030d0:	f0 1f 00 0c 	mcall	80003100 <gfx_cmdLine+0xb8>
800030d4:	40 28       	lddsp	r8,sp[0x8]
800030d6:	1a d8       	st.w	--sp,r8
800030d8:	fa e8 00 10 	ld.d	r8,sp[16]
800030dc:	bb 29       	st.d	--sp,r8
800030de:	f0 1f 00 0a 	mcall	80003104 <gfx_cmdLine+0xbc>
			counter = 0;
800030e2:	48 38       	lddpc	r8,800030ec <gfx_cmdLine+0xa4>
800030e4:	91 06       	st.w	r8[0x0],r6
800030e6:	2f dd       	sub	sp,-12
	}
800030e8:	2f bd       	sub	sp,-20
800030ea:	d8 22       	popm	r4-r7,pc
800030ec:	00 00       	add	r0,r0
800030ee:	01 20       	ld.uh	r0,r0++
800030f0:	80 00       	ld.sh	r0,r0[0x0]
800030f2:	80 8e       	ld.uh	lr,r0[0x0]
800030f4:	80 00       	ld.sh	r0,r0[0x0]
800030f6:	49 3c       	lddpc	r12,80003140 <gfx_DrawTerminalButton+0x38>
800030f8:	80 00       	ld.sh	r0,r0[0x0]
800030fa:	2e c8       	sub	r8,-20
800030fc:	80 00       	ld.sh	r0,r0[0x0]
800030fe:	80 88       	ld.uh	r8,r0[0x0]
80003100:	80 00       	ld.sh	r0,r0[0x0]
80003102:	3b 98       	mov	r8,-71
80003104:	80 00       	ld.sh	r0,r0[0x0]
80003106:	3d 0c       	mov	r12,-48

80003108 <gfx_DrawTerminalButton>:
		//for animations purpose only
		cpu_delay_ms(100,BOARD_OSC0_HZ);
	}
}

void gfx_DrawTerminalButton(Vector2 position, char* shortcut, char *description, uint8_t size, Color color){
80003108:	eb cd 40 fc 	pushm	r2-r7,lr
8000310c:	20 3d       	sub	sp,12
8000310e:	fa c4 ff d8 	sub	r4,sp,-40
80003112:	18 93       	mov	r3,r12
80003114:	16 92       	mov	r2,r11
80003116:	09 a7       	ld.ub	r7,r4[0x2]
80003118:	88 06       	ld.sh	r6,r4[0x0]
	
	screen_SetPixels(Rect(position.x,position.y-2,position.x+8,position.y+10),color);
8000311a:	0e 98       	mov	r8,r7
8000311c:	2f 68       	sub	r8,-10
8000311e:	ec c9 ff f8 	sub	r9,r6,-8
80003122:	0e 9a       	mov	r10,r7
80003124:	20 2a       	sub	r10,2
80003126:	5c 58       	castu.b	r8
80003128:	5c 79       	castu.h	r9
8000312a:	5c 5a       	castu.b	r10
8000312c:	f7 d6 c0 10 	bfextu	r11,r6,0x0,0x10
80003130:	1a 9c       	mov	r12,sp
80003132:	f0 1f 00 13 	mcall	8000317c <gfx_DrawTerminalButton+0x74>
80003136:	68 18       	ld.w	r8,r4[0x4]
80003138:	1a d8       	st.w	--sp,r8
8000313a:	fa e8 00 04 	ld.d	r8,sp[4]
8000313e:	bb 29       	st.d	--sp,r8
80003140:	f0 1f 00 10 	mcall	80003180 <gfx_DrawTerminalButton+0x78>
	gfx_Label(position,shortcut, 1, Small, (Color){BLACK});
80003144:	30 05       	mov	r5,0
80003146:	50 55       	stdsp	sp[0x14],r5
80003148:	a8 a7       	st.b	r4[0x2],r7
8000314a:	a8 06       	st.h	r4[0x0],r6
8000314c:	1a d5       	st.w	--sp,r5
8000314e:	68 08       	ld.w	r8,r4[0x0]
80003150:	1a d8       	st.w	--sp,r8
80003152:	0a 9a       	mov	r10,r5
80003154:	30 1b       	mov	r11,1
80003156:	06 9c       	mov	r12,r3
80003158:	f0 1f 00 0b 	mcall	80003184 <gfx_DrawTerminalButton+0x7c>
	position.x += 10;
	gfx_Label(position,description, 7, Small, color);
8000315c:	a8 a7       	st.b	r4[0x2],r7
8000315e:	2f 66       	sub	r6,-10
80003160:	a8 06       	st.h	r4[0x0],r6
80003162:	68 18       	ld.w	r8,r4[0x4]
80003164:	1a d8       	st.w	--sp,r8
80003166:	68 08       	ld.w	r8,r4[0x0]
80003168:	1a d8       	st.w	--sp,r8
8000316a:	0a 9a       	mov	r10,r5
8000316c:	30 7b       	mov	r11,7
8000316e:	04 9c       	mov	r12,r2
80003170:	f0 1f 00 05 	mcall	80003184 <gfx_DrawTerminalButton+0x7c>
80003174:	2f 9d       	sub	sp,-28
}
80003176:	2f dd       	sub	sp,-12
80003178:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
8000317c:	80 00       	ld.sh	r0,r0[0x0]
8000317e:	3b 98       	mov	r8,-71
80003180:	80 00       	ld.sh	r0,r0[0x0]
80003182:	3d 0c       	mov	r12,-48
80003184:	80 00       	ld.sh	r0,r0[0x0]
80003186:	2e c8       	sub	r8,-20

80003188 <gfx_AddOptionToTerminal>:
		//for animations purpose only
		cpu_delay_ms(100,BOARD_OSC0_HZ);
	}
}

void gfx_AddOptionToTerminal(char *content, uint8_t contentSize, Color color, bool isSelected, bool firstDraw, bool isDelayed){
80003188:	eb cd 40 f8 	pushm	r3-r7,lr
8000318c:	20 3d       	sub	sp,12
8000318e:	fa c4 ff dc 	sub	r4,sp,-36
80003192:	18 93       	mov	r3,r12
80003194:	16 95       	mov	r5,r11
80003196:	12 97       	mov	r7,r9
80003198:	10 96       	mov	r6,r8
	if(isSelected){
8000319a:	58 0a       	cp.w	r10,0
8000319c:	c1 00       	breq	800031bc <gfx_AddOptionToTerminal+0x34>
		gfx_Label(newLinePosition, ">", 1, Small, color);
8000319e:	68 08       	ld.w	r8,r4[0x0]
800031a0:	1a d8       	st.w	--sp,r8
800031a2:	20 1d       	sub	sp,4
800031a4:	30 4a       	mov	r10,4
800031a6:	4a eb       	lddpc	r11,8000325c <gfx_AddOptionToTerminal+0xd4>
800031a8:	1a 9c       	mov	r12,sp
800031aa:	f0 1f 00 2e 	mcall	80003260 <gfx_AddOptionToTerminal+0xd8>
800031ae:	30 0a       	mov	r10,0
800031b0:	30 1b       	mov	r11,1
800031b2:	4a dc       	lddpc	r12,80003264 <gfx_AddOptionToTerminal+0xdc>
800031b4:	f0 1f 00 2d 	mcall	80003268 <gfx_AddOptionToTerminal+0xe0>
800031b8:	2f ed       	sub	sp,-8
800031ba:	c1 98       	rjmp	800031ec <gfx_AddOptionToTerminal+0x64>
	}
	else{
		screen_SetPixels(Rect(newLinePosition.x,newLinePosition.y, newLinePosition.x + 8, newLinePosition.y + 8), (Color){BLACK});
800031bc:	30 08       	mov	r8,0
800031be:	50 08       	stdsp	sp[0x0],r8
800031c0:	4a 78       	lddpc	r8,8000325c <gfx_AddOptionToTerminal+0xd4>
800031c2:	11 aa       	ld.ub	r10,r8[0x2]
800031c4:	90 0b       	ld.sh	r11,r8[0x0]
800031c6:	f4 c8 ff f8 	sub	r8,r10,-8
800031ca:	f6 c9 ff f8 	sub	r9,r11,-8
800031ce:	5c 58       	castu.b	r8
800031d0:	5c 79       	castu.h	r9
800031d2:	5c 7b       	castu.h	r11
800031d4:	fa cc ff fc 	sub	r12,sp,-4
800031d8:	f0 1f 00 25 	mcall	8000326c <gfx_AddOptionToTerminal+0xe4>
800031dc:	40 08       	lddsp	r8,sp[0x0]
800031de:	1a d8       	st.w	--sp,r8
800031e0:	fa e8 00 08 	ld.d	r8,sp[8]
800031e4:	bb 29       	st.d	--sp,r8
800031e6:	f0 1f 00 23 	mcall	80003270 <gfx_AddOptionToTerminal+0xe8>
800031ea:	2f dd       	sub	sp,-12
	}
	
	if(firstDraw){
800031ec:	58 07       	cp.w	r7,0
800031ee:	c1 60       	breq	8000321a <gfx_AddOptionToTerminal+0x92>
		newLinePosition.x += 20;
800031f0:	49 b7       	lddpc	r7,8000325c <gfx_AddOptionToTerminal+0xd4>
800031f2:	8e 08       	ld.sh	r8,r7[0x0]
800031f4:	2e c8       	sub	r8,-20
800031f6:	ae 08       	st.h	r7[0x0],r8
		gfx_Label(newLinePosition, content, contentSize, Small, color);
800031f8:	68 08       	ld.w	r8,r4[0x0]
800031fa:	1a d8       	st.w	--sp,r8
800031fc:	20 1d       	sub	sp,4
800031fe:	30 4a       	mov	r10,4
80003200:	0e 9b       	mov	r11,r7
80003202:	1a 9c       	mov	r12,sp
80003204:	f0 1f 00 17 	mcall	80003260 <gfx_AddOptionToTerminal+0xd8>
80003208:	30 0a       	mov	r10,0
8000320a:	0a 9b       	mov	r11,r5
8000320c:	06 9c       	mov	r12,r3
8000320e:	f0 1f 00 17 	mcall	80003268 <gfx_AddOptionToTerminal+0xe0>
		newLinePosition.x -= 20;
80003212:	8e 08       	ld.sh	r8,r7[0x0]
80003214:	21 48       	sub	r8,20
80003216:	ae 08       	st.h	r7[0x0],r8
80003218:	2f ed       	sub	sp,-8
	}
	
	newLinePosition.y -= 20;
8000321a:	49 18       	lddpc	r8,8000325c <gfx_AddOptionToTerminal+0xd4>
8000321c:	11 a9       	ld.ub	r9,r8[0x2]
8000321e:	21 49       	sub	r9,20
80003220:	b0 a9       	st.b	r8[0x2],r9
	if(isDelayed){
80003222:	58 06       	cp.w	r6,0
80003224:	c1 90       	breq	80003256 <gfx_AddOptionToTerminal+0xce>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
80003226:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
8000322a:	e0 6a a8 00 	mov	r10,43008
8000322e:	ea 1a 00 61 	orh	r10,0x61
80003232:	f0 0a 00 0a 	add	r10,r8,r10
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003236:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
8000323a:	14 38       	cp.w	r8,r10
8000323c:	e0 88 00 08 	brls	8000324c <gfx_AddOptionToTerminal+0xc4>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
80003240:	12 38       	cp.w	r8,r9
80003242:	fe 98 ff fa 	brls	80003236 <gfx_AddOptionToTerminal+0xae>
80003246:	12 3a       	cp.w	r10,r9
80003248:	c0 73       	brcs	80003256 <gfx_AddOptionToTerminal+0xce>
8000324a:	cf 6b       	rjmp	80003236 <gfx_AddOptionToTerminal+0xae>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
8000324c:	12 38       	cp.w	r8,r9
8000324e:	e0 8b 00 04 	brhi	80003256 <gfx_AddOptionToTerminal+0xce>
80003252:	12 3a       	cp.w	r10,r9
80003254:	cf 12       	brcc	80003236 <gfx_AddOptionToTerminal+0xae>
		//for animations purpose only
		cpu_delay_ms(100,BOARD_OSC0_HZ);
	}
}
80003256:	2f dd       	sub	sp,-12
80003258:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
8000325c:	00 00       	add	r0,r0
8000325e:	01 24       	ld.uh	r4,r0++
80003260:	80 00       	ld.sh	r0,r0[0x0]
80003262:	49 3c       	lddpc	r12,800032ac <gfx_AddLineToTerminal+0x38>
80003264:	80 00       	ld.sh	r0,r0[0x0]
80003266:	80 8c       	ld.uh	r12,r0[0x0]
80003268:	80 00       	ld.sh	r0,r0[0x0]
8000326a:	2e c8       	sub	r8,-20
8000326c:	80 00       	ld.sh	r0,r0[0x0]
8000326e:	3b 98       	mov	r8,-71
80003270:	80 00       	ld.sh	r0,r0[0x0]
80003272:	3d 0c       	mov	r12,-48

80003274 <gfx_AddLineToTerminal>:

void gfx_BeginNewTerminal(Vector2 topLeft){
	newLinePosition = topLeft;
}

void gfx_AddLineToTerminal(char *content, uint8_t contentSize, Color color, bool isDelayed){
80003274:	d4 21       	pushm	r4-r7,lr
80003276:	18 95       	mov	r5,r12
80003278:	16 96       	mov	r6,r11
8000327a:	14 94       	mov	r4,r10
	gfx_Label(newLinePosition, content, contentSize, Small, color);
8000327c:	40 58       	lddsp	r8,sp[0x14]
8000327e:	1a d8       	st.w	--sp,r8
80003280:	49 67       	lddpc	r7,800032d8 <gfx_AddLineToTerminal+0x64>
80003282:	20 1d       	sub	sp,4
80003284:	30 4a       	mov	r10,4
80003286:	0e 9b       	mov	r11,r7
80003288:	1a 9c       	mov	r12,sp
8000328a:	f0 1f 00 15 	mcall	800032dc <gfx_AddLineToTerminal+0x68>
8000328e:	30 0a       	mov	r10,0
80003290:	0c 9b       	mov	r11,r6
80003292:	0a 9c       	mov	r12,r5
80003294:	f0 1f 00 13 	mcall	800032e0 <gfx_AddLineToTerminal+0x6c>
	newLinePosition.y -= 20;
80003298:	0f a8       	ld.ub	r8,r7[0x2]
8000329a:	21 48       	sub	r8,20
8000329c:	ae a8       	st.b	r7[0x2],r8
	if(isDelayed){
8000329e:	2f ed       	sub	sp,-8
800032a0:	58 04       	cp.w	r4,0
800032a2:	c1 90       	breq	800032d4 <gfx_AddLineToTerminal+0x60>
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800032a4:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800032a8:	e0 6a a8 00 	mov	r10,43008
800032ac:	ea 1a 00 61 	orh	r10,0x61
800032b0:	f0 0a 00 0a 	add	r10,r8,r10
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
800032b4:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
800032b8:	14 38       	cp.w	r8,r10
800032ba:	e0 88 00 08 	brls	800032ca <gfx_AddLineToTerminal+0x56>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
800032be:	12 38       	cp.w	r8,r9
800032c0:	fe 98 ff fa 	brls	800032b4 <gfx_AddLineToTerminal+0x40>
800032c4:	12 3a       	cp.w	r10,r9
800032c6:	c0 73       	brcs	800032d4 <gfx_AddLineToTerminal+0x60>
800032c8:	cf 6b       	rjmp	800032b4 <gfx_AddLineToTerminal+0x40>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
800032ca:	12 38       	cp.w	r8,r9
800032cc:	e0 8b 00 04 	brhi	800032d4 <gfx_AddLineToTerminal+0x60>
800032d0:	12 3a       	cp.w	r10,r9
800032d2:	cf 12       	brcc	800032b4 <gfx_AddLineToTerminal+0x40>
800032d4:	d8 22       	popm	r4-r7,pc
800032d6:	00 00       	add	r0,r0
800032d8:	00 00       	add	r0,r0
800032da:	01 24       	ld.uh	r4,r0++
800032dc:	80 00       	ld.sh	r0,r0[0x0]
800032de:	49 3c       	lddpc	r12,80003328 <switchISR+0x44>
800032e0:	80 00       	ld.sh	r0,r0[0x0]
800032e2:	2e c8       	sub	r8,-20

800032e4 <switchISR>:
		(selectedOption &(1<<3))?(selectedOption = (1<<0)):(selectedOption<<=1);
		switchState = 0;
	}
}

__attribute__((__interrupt__)) void switchISR(void){
800032e4:	d4 01       	pushm	lr
	if 	(gpio_get_pin_interrupt_flag(PIN_SWITCH0))	{
800032e6:	33 8c       	mov	r12,56
800032e8:	f0 1f 00 13 	mcall	80003334 <switchISR+0x50>
800032ec:	c0 50       	breq	800032f6 <switchISR+0x12>
		switchState = 1;
800032ee:	30 19       	mov	r9,1
800032f0:	49 28       	lddpc	r8,80003338 <switchISR+0x54>
800032f2:	b0 89       	st.b	r8[0x0],r9
800032f4:	c1 88       	rjmp	80003324 <switchISR+0x40>
	}
	else if (gpio_get_pin_interrupt_flag(PIN_SWITCH1)){
800032f6:	33 9c       	mov	r12,57
800032f8:	f0 1f 00 0f 	mcall	80003334 <switchISR+0x50>
800032fc:	c0 50       	breq	80003306 <switchISR+0x22>
		switchState = 2;
800032fe:	30 29       	mov	r9,2
80003300:	48 e8       	lddpc	r8,80003338 <switchISR+0x54>
80003302:	b0 89       	st.b	r8[0x0],r9
80003304:	c1 08       	rjmp	80003324 <switchISR+0x40>
	}
	else if (gpio_get_pin_interrupt_flag(PIN_SWITCH2)){
80003306:	33 ac       	mov	r12,58
80003308:	f0 1f 00 0b 	mcall	80003334 <switchISR+0x50>
8000330c:	c0 50       	breq	80003316 <switchISR+0x32>
		switchState = 3;
8000330e:	30 39       	mov	r9,3
80003310:	48 a8       	lddpc	r8,80003338 <switchISR+0x54>
80003312:	b0 89       	st.b	r8[0x0],r9
80003314:	c0 88       	rjmp	80003324 <switchISR+0x40>
	}
	else if (gpio_get_pin_interrupt_flag(PIN_SWITCH3)){
80003316:	33 bc       	mov	r12,59
80003318:	f0 1f 00 07 	mcall	80003334 <switchISR+0x50>
8000331c:	c0 40       	breq	80003324 <switchISR+0x40>
		switchState = 4;
8000331e:	30 49       	mov	r9,4
80003320:	48 68       	lddpc	r8,80003338 <switchISR+0x54>
80003322:	b0 89       	st.b	r8[0x0],r9
	}
	AVR32_GPIO.port[1].ifrc = 0xFF000000;
80003324:	fc 19 ff 00 	movh	r9,0xff00
80003328:	fe 78 10 00 	mov	r8,-61440
8000332c:	f1 49 01 d8 	st.w	r8[472],r9
80003330:	d4 02       	popm	lr
80003332:	d6 03       	rete
80003334:	80 00       	ld.sh	r0,r0[0x0]
80003336:	29 7a       	sub	r10,-105
80003338:	00 00       	add	r0,r0
8000333a:	01 2a       	ld.uh	r10,r0++

8000333c <_drawButton>:
	gfx_DrawLine((Vector2){99,99}, (Vector2){150, 186}, (Color){WHITE}, 15);
	char text[] = "LogoRetro.pixel";
	gfx_Label((Vector2){40,40}, text, sizeof(text)/sizeof(*text), Small, (Color){WHITE});
}

void _drawButton(void){
8000333c:	eb cd 40 c0 	pushm	r6-r7,lr
80003340:	20 4d       	sub	sp,16
	gfx_DrawTerminalButton((Vector2){4,4},"<","Back",4,textColor);
80003342:	30 47       	mov	r7,4
80003344:	0e 9a       	mov	r10,r7
80003346:	4a 8b       	lddpc	r11,800033e4 <_drawButton+0xa8>
80003348:	1a 9c       	mov	r12,sp
8000334a:	f0 1f 00 28 	mcall	800033e8 <_drawButton+0xac>
8000334e:	4a 86       	lddpc	r6,800033ec <_drawButton+0xb0>
80003350:	20 1d       	sub	sp,4
80003352:	0e 9a       	mov	r10,r7
80003354:	0c 9b       	mov	r11,r6
80003356:	1a 9c       	mov	r12,sp
80003358:	f0 1f 00 24 	mcall	800033e8 <_drawButton+0xac>
8000335c:	40 18       	lddsp	r8,sp[0x4]
8000335e:	1a d8       	st.w	--sp,r8
80003360:	0e 9a       	mov	r10,r7
80003362:	4a 4b       	lddpc	r11,800033f0 <_drawButton+0xb4>
80003364:	4a 4c       	lddpc	r12,800033f4 <_drawButton+0xb8>
80003366:	f0 1f 00 25 	mcall	800033f8 <_drawButton+0xbc>
	gfx_DrawTerminalButton((Vector2){82,4},"^","Up",4,textColor);
8000336a:	0e 9a       	mov	r10,r7
8000336c:	4a 4b       	lddpc	r11,800033fc <_drawButton+0xc0>
8000336e:	fa cc ff f4 	sub	r12,sp,-12
80003372:	f0 1f 00 1e 	mcall	800033e8 <_drawButton+0xac>
80003376:	20 1d       	sub	sp,4
80003378:	0e 9a       	mov	r10,r7
8000337a:	0c 9b       	mov	r11,r6
8000337c:	1a 9c       	mov	r12,sp
8000337e:	f0 1f 00 1b 	mcall	800033e8 <_drawButton+0xac>
80003382:	40 48       	lddsp	r8,sp[0x10]
80003384:	1a d8       	st.w	--sp,r8
80003386:	0e 9a       	mov	r10,r7
80003388:	49 eb       	lddpc	r11,80003400 <_drawButton+0xc4>
8000338a:	49 fc       	lddpc	r12,80003404 <_drawButton+0xc8>
8000338c:	f0 1f 00 1b 	mcall	800033f8 <_drawButton+0xbc>
	gfx_DrawTerminalButton((Vector2){160,4},"v","Down",4,textColor);
80003390:	0e 9a       	mov	r10,r7
80003392:	49 eb       	lddpc	r11,80003408 <_drawButton+0xcc>
80003394:	fa cc ff e8 	sub	r12,sp,-24
80003398:	f0 1f 00 14 	mcall	800033e8 <_drawButton+0xac>
8000339c:	20 1d       	sub	sp,4
8000339e:	0e 9a       	mov	r10,r7
800033a0:	0c 9b       	mov	r11,r6
800033a2:	1a 9c       	mov	r12,sp
800033a4:	f0 1f 00 11 	mcall	800033e8 <_drawButton+0xac>
800033a8:	40 78       	lddsp	r8,sp[0x1c]
800033aa:	1a d8       	st.w	--sp,r8
800033ac:	0e 9a       	mov	r10,r7
800033ae:	49 8b       	lddpc	r11,8000340c <_drawButton+0xd0>
800033b0:	49 8c       	lddpc	r12,80003410 <_drawButton+0xd4>
800033b2:	f0 1f 00 12 	mcall	800033f8 <_drawButton+0xbc>
	gfx_DrawTerminalButton((Vector2){238,4},">","Ok",4,textColor);
800033b6:	0e 9a       	mov	r10,r7
800033b8:	49 7b       	lddpc	r11,80003414 <_drawButton+0xd8>
800033ba:	fa cc ff dc 	sub	r12,sp,-36
800033be:	f0 1f 00 0b 	mcall	800033e8 <_drawButton+0xac>
800033c2:	20 1d       	sub	sp,4
800033c4:	0e 9a       	mov	r10,r7
800033c6:	0c 9b       	mov	r11,r6
800033c8:	1a 9c       	mov	r12,sp
800033ca:	f0 1f 00 08 	mcall	800033e8 <_drawButton+0xac>
800033ce:	40 a8       	lddsp	r8,sp[0x28]
800033d0:	1a d8       	st.w	--sp,r8
800033d2:	0e 9a       	mov	r10,r7
800033d4:	49 1b       	lddpc	r11,80003418 <_drawButton+0xdc>
800033d6:	49 2c       	lddpc	r12,8000341c <_drawButton+0xe0>
800033d8:	f0 1f 00 08 	mcall	800033f8 <_drawButton+0xbc>
800033dc:	2f 8d       	sub	sp,-32
}
800033de:	2f cd       	sub	sp,-16
800033e0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800033e4:	80 00       	ld.sh	r0,r0[0x0]
800033e6:	80 9e       	ld.uh	lr,r0[0x2]
800033e8:	80 00       	ld.sh	r0,r0[0x0]
800033ea:	49 3c       	lddpc	r12,80003434 <_alarmMenu+0x14>
800033ec:	00 00       	add	r0,r0
800033ee:	00 1a       	sub	r10,r0
800033f0:	80 00       	ld.sh	r0,r0[0x0]
800033f2:	80 b0       	ld.uh	r0,r0[0x6]
800033f4:	80 00       	ld.sh	r0,r0[0x0]
800033f6:	80 b8       	ld.uh	r8,r0[0x6]
800033f8:	80 00       	ld.sh	r0,r0[0x0]
800033fa:	31 08       	mov	r8,16
800033fc:	80 00       	ld.sh	r0,r0[0x0]
800033fe:	80 92       	ld.uh	r2,r0[0x2]
80003400:	80 00       	ld.sh	r0,r0[0x0]
80003402:	80 bc       	ld.uh	r12,r0[0x6]
80003404:	80 00       	ld.sh	r0,r0[0x0]
80003406:	80 c0       	ld.uh	r0,r0[0x8]
80003408:	80 00       	ld.sh	r0,r0[0x0]
8000340a:	82 1c       	ld.sh	r12,r1[0x2]
8000340c:	80 00       	ld.sh	r0,r0[0x0]
8000340e:	80 c4       	ld.uh	r4,r0[0x8]
80003410:	80 00       	ld.sh	r0,r0[0x0]
80003412:	80 cc       	ld.uh	r12,r0[0x8]
80003414:	80 00       	ld.sh	r0,r0[0x0]
80003416:	82 24       	ld.sh	r4,r1[0x4]
80003418:	80 00       	ld.sh	r0,r0[0x0]
8000341a:	80 d0       	ld.uh	r0,r0[0xa]
8000341c:	80 00       	ld.sh	r0,r0[0x0]
8000341e:	80 8c       	ld.uh	r12,r0[0x0]

80003420 <_alarmMenu>:
		commandChanged = true;
		switchState = 0;
	}
}

void _alarmMenu(bool firstDraw){
80003420:	eb cd 40 f8 	pushm	r3-r7,lr
80003424:	20 5d       	sub	sp,20
80003426:	18 97       	mov	r7,r12
	if(firstDraw){
80003428:	58 0c       	cp.w	r12,0
8000342a:	c2 f0       	breq	80003488 <_alarmMenu+0x68>
		screen_SetPixels(Rect(0,0,320,240),(Color){BLACK});
8000342c:	30 06       	mov	r6,0
8000342e:	50 06       	stdsp	sp[0x0],r6
80003430:	e0 68 00 f0 	mov	r8,240
80003434:	e0 69 01 40 	mov	r9,320
80003438:	0c 9a       	mov	r10,r6
8000343a:	0c 9b       	mov	r11,r6
8000343c:	fa cc ff fc 	sub	r12,sp,-4
80003440:	f0 1f 00 57 	mcall	8000359c <_alarmMenu+0x17c>
80003444:	40 08       	lddsp	r8,sp[0x0]
80003446:	1a d8       	st.w	--sp,r8
80003448:	fa e8 00 08 	ld.d	r8,sp[8]
8000344c:	bb 29       	st.d	--sp,r8
8000344e:	f0 1f 00 55 	mcall	800035a0 <_alarmMenu+0x180>
		
		_drawButton();
80003452:	f0 1f 00 55 	mcall	800035a4 <_alarmMenu+0x184>
		menuChanged = false;
80003456:	4d 58       	lddpc	r8,800035a8 <_alarmMenu+0x188>
80003458:	b0 86       	st.b	r8[0x0],r6
		
		gfx_BeginNewTerminal((Vector2){20,220});
8000345a:	30 46       	mov	r6,4
8000345c:	0c 9a       	mov	r10,r6
8000345e:	4d 4b       	lddpc	r11,800035ac <_alarmMenu+0x18c>
80003460:	fa cc ff e8 	sub	r12,sp,-24
80003464:	f0 1f 00 53 	mcall	800035b0 <_alarmMenu+0x190>
80003468:	40 68       	lddsp	r8,sp[0x18]
8000346a:	1a d8       	st.w	--sp,r8
8000346c:	f0 1f 00 52 	mcall	800035b4 <_alarmMenu+0x194>
		gfx_AddLineToTerminal("alarme -info", 12, textColor, firstDraw);
80003470:	20 1d       	sub	sp,4
80003472:	0c 9a       	mov	r10,r6
80003474:	4d 1b       	lddpc	r11,800035b8 <_alarmMenu+0x198>
80003476:	1a 9c       	mov	r12,sp
80003478:	f0 1f 00 4e 	mcall	800035b0 <_alarmMenu+0x190>
8000347c:	30 1a       	mov	r10,1
8000347e:	30 cb       	mov	r11,12
80003480:	4c fc       	lddpc	r12,800035bc <_alarmMenu+0x19c>
80003482:	f0 1f 00 50 	mcall	800035c0 <_alarmMenu+0x1a0>
80003486:	2f bd       	sub	sp,-20
		
	}

	gfx_BeginNewTerminal((Vector2){20,200});
80003488:	30 45       	mov	r5,4
8000348a:	0a 9a       	mov	r10,r5
8000348c:	4c eb       	lddpc	r11,800035c4 <_alarmMenu+0x1a4>
8000348e:	fa cc ff f0 	sub	r12,sp,-16
80003492:	f0 1f 00 48 	mcall	800035b0 <_alarmMenu+0x190>
80003496:	40 48       	lddsp	r8,sp[0x10]
80003498:	1a d8       	st.w	--sp,r8
8000349a:	f0 1f 00 47 	mcall	800035b4 <_alarmMenu+0x194>
	gfx_AddOptionToTerminal("Alarme 1 : 18h 00m", 18,textColor, selectedOption & (1<<0), firstDraw, firstDraw);
8000349e:	4c b4       	lddpc	r4,800035c8 <_alarmMenu+0x1a8>
800034a0:	09 86       	ld.ub	r6,r4[0x0]
800034a2:	ed d6 c0 01 	bfextu	r6,r6,0x0,0x1
800034a6:	4c 53       	lddpc	r3,800035b8 <_alarmMenu+0x198>
800034a8:	20 1d       	sub	sp,4
800034aa:	0a 9a       	mov	r10,r5
800034ac:	06 9b       	mov	r11,r3
800034ae:	1a 9c       	mov	r12,sp
800034b0:	f0 1f 00 40 	mcall	800035b0 <_alarmMenu+0x190>
800034b4:	0e 98       	mov	r8,r7
800034b6:	0e 99       	mov	r9,r7
800034b8:	0c 9a       	mov	r10,r6
800034ba:	31 2b       	mov	r11,18
800034bc:	4c 4c       	lddpc	r12,800035cc <_alarmMenu+0x1ac>
800034be:	f0 1f 00 45 	mcall	800035d0 <_alarmMenu+0x1b0>
	gfx_AddOptionToTerminal("Alarme 2 : 09h 35m", 18,textColor, selectedOption & (1<<1), firstDraw, firstDraw);
800034c2:	09 86       	ld.ub	r6,r4[0x0]
800034c4:	ed d6 c0 21 	bfextu	r6,r6,0x1,0x1
800034c8:	20 1d       	sub	sp,4
800034ca:	0a 9a       	mov	r10,r5
800034cc:	06 9b       	mov	r11,r3
800034ce:	1a 9c       	mov	r12,sp
800034d0:	f0 1f 00 38 	mcall	800035b0 <_alarmMenu+0x190>
800034d4:	0e 98       	mov	r8,r7
800034d6:	0e 99       	mov	r9,r7
800034d8:	0c 9a       	mov	r10,r6
800034da:	31 2b       	mov	r11,18
800034dc:	4b ec       	lddpc	r12,800035d4 <_alarmMenu+0x1b4>
800034de:	f0 1f 00 3d 	mcall	800035d0 <_alarmMenu+0x1b0>
	gfx_AddOptionToTerminal("Alarme 3 : 12h 00m", 18,textColor, selectedOption & (1<<2), firstDraw, firstDraw);
800034e2:	09 86       	ld.ub	r6,r4[0x0]
800034e4:	ed d6 c0 41 	bfextu	r6,r6,0x2,0x1
800034e8:	20 1d       	sub	sp,4
800034ea:	0a 9a       	mov	r10,r5
800034ec:	06 9b       	mov	r11,r3
800034ee:	1a 9c       	mov	r12,sp
800034f0:	f0 1f 00 30 	mcall	800035b0 <_alarmMenu+0x190>
800034f4:	0e 98       	mov	r8,r7
800034f6:	0e 99       	mov	r9,r7
800034f8:	0c 9a       	mov	r10,r6
800034fa:	31 2b       	mov	r11,18
800034fc:	4b 7c       	lddpc	r12,800035d8 <_alarmMenu+0x1b8>
800034fe:	f0 1f 00 35 	mcall	800035d0 <_alarmMenu+0x1b0>
	gfx_AddOptionToTerminal("Alarme 4 : 06h 18m", 18,textColor, selectedOption & (1<<3), firstDraw, firstDraw);
80003502:	09 86       	ld.ub	r6,r4[0x0]
80003504:	ed d6 c0 61 	bfextu	r6,r6,0x3,0x1
80003508:	20 1d       	sub	sp,4
8000350a:	0a 9a       	mov	r10,r5
8000350c:	06 9b       	mov	r11,r3
8000350e:	1a 9c       	mov	r12,sp
80003510:	f0 1f 00 28 	mcall	800035b0 <_alarmMenu+0x190>
80003514:	0e 98       	mov	r8,r7
80003516:	0e 99       	mov	r9,r7
80003518:	0c 9a       	mov	r10,r6
8000351a:	31 2b       	mov	r11,18
8000351c:	4b 0c       	lddpc	r12,800035dc <_alarmMenu+0x1bc>
8000351e:	f0 1f 00 2d 	mcall	800035d0 <_alarmMenu+0x1b0>
	
	if(switchState == 1){
80003522:	4b 08       	lddpc	r8,800035e0 <_alarmMenu+0x1c0>
80003524:	11 88       	ld.ub	r8,r8[0x0]
80003526:	2f bd       	sub	sp,-20
80003528:	30 19       	mov	r9,1
8000352a:	f2 08 18 00 	cp.b	r8,r9
8000352e:	c0 c1       	brne	80003546 <_alarmMenu+0x126>
		currentMenuId = MAIN;
80003530:	30 08       	mov	r8,0
80003532:	4a d9       	lddpc	r9,800035e4 <_alarmMenu+0x1c4>
80003534:	b2 88       	st.b	r9[0x0],r8
		menuChanged = true;
80003536:	30 19       	mov	r9,1
80003538:	49 ca       	lddpc	r10,800035a8 <_alarmMenu+0x188>
8000353a:	b4 89       	st.b	r10[0x0],r9
		commandChanged = true;
8000353c:	4a ba       	lddpc	r10,800035e8 <_alarmMenu+0x1c8>
8000353e:	b4 89       	st.b	r10[0x0],r9
		switchState = 0;
80003540:	4a 89       	lddpc	r9,800035e0 <_alarmMenu+0x1c0>
80003542:	b2 88       	st.b	r9[0x0],r8
80003544:	c2 98       	rjmp	80003596 <_alarmMenu+0x176>
	}
	else if(switchState == 2){
80003546:	30 29       	mov	r9,2
80003548:	f2 08 18 00 	cp.b	r8,r9
8000354c:	c1 11       	brne	8000356e <_alarmMenu+0x14e>
		(selectedOption &(1<<0))?(selectedOption = (1<<3)):(selectedOption>>=1);
8000354e:	49 f8       	lddpc	r8,800035c8 <_alarmMenu+0x1a8>
80003550:	11 88       	ld.ub	r8,r8[0x0]
80003552:	f3 d8 c0 01 	bfextu	r9,r8,0x0,0x1
80003556:	c0 50       	breq	80003560 <_alarmMenu+0x140>
80003558:	30 89       	mov	r9,8
8000355a:	49 c8       	lddpc	r8,800035c8 <_alarmMenu+0x1a8>
8000355c:	b0 89       	st.b	r8[0x0],r9
8000355e:	c0 48       	rjmp	80003566 <_alarmMenu+0x146>
80003560:	a1 98       	lsr	r8,0x1
80003562:	49 a9       	lddpc	r9,800035c8 <_alarmMenu+0x1a8>
80003564:	b2 88       	st.b	r9[0x0],r8
		switchState = 0;
80003566:	30 09       	mov	r9,0
80003568:	49 e8       	lddpc	r8,800035e0 <_alarmMenu+0x1c0>
8000356a:	b0 89       	st.b	r8[0x0],r9
8000356c:	c1 58       	rjmp	80003596 <_alarmMenu+0x176>
	}
	else if (switchState == 3){
8000356e:	30 39       	mov	r9,3
80003570:	f2 08 18 00 	cp.b	r8,r9
80003574:	c1 11       	brne	80003596 <_alarmMenu+0x176>
		(selectedOption &(1<<3))?(selectedOption = (1<<0)):(selectedOption<<=1);
80003576:	49 58       	lddpc	r8,800035c8 <_alarmMenu+0x1a8>
80003578:	11 88       	ld.ub	r8,r8[0x0]
8000357a:	10 99       	mov	r9,r8
8000357c:	e2 19 00 08 	andl	r9,0x8,COH
80003580:	c0 50       	breq	8000358a <_alarmMenu+0x16a>
80003582:	30 19       	mov	r9,1
80003584:	49 18       	lddpc	r8,800035c8 <_alarmMenu+0x1a8>
80003586:	b0 89       	st.b	r8[0x0],r9
80003588:	c0 48       	rjmp	80003590 <_alarmMenu+0x170>
8000358a:	a1 78       	lsl	r8,0x1
8000358c:	48 f9       	lddpc	r9,800035c8 <_alarmMenu+0x1a8>
8000358e:	b2 88       	st.b	r9[0x0],r8
		switchState = 0;
80003590:	30 09       	mov	r9,0
80003592:	49 48       	lddpc	r8,800035e0 <_alarmMenu+0x1c0>
80003594:	b0 89       	st.b	r8[0x0],r9
	}
}
80003596:	2f bd       	sub	sp,-20
80003598:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
8000359c:	80 00       	ld.sh	r0,r0[0x0]
8000359e:	3b 98       	mov	r8,-71
800035a0:	80 00       	ld.sh	r0,r0[0x0]
800035a2:	3d 0c       	mov	r12,-48
800035a4:	80 00       	ld.sh	r0,r0[0x0]
800035a6:	33 3c       	mov	r12,51
800035a8:	00 00       	add	r0,r0
800035aa:	01 28       	ld.uh	r8,r0++
800035ac:	80 00       	ld.sh	r0,r0[0x0]
800035ae:	80 aa       	ld.uh	r10,r0[0x4]
800035b0:	80 00       	ld.sh	r0,r0[0x0]
800035b2:	49 3c       	lddpc	r12,800035fc <_settingsMenu+0x10>
800035b4:	80 00       	ld.sh	r0,r0[0x0]
800035b6:	2e ac       	sub	r12,-22
800035b8:	00 00       	add	r0,r0
800035ba:	00 1a       	sub	r10,r0
800035bc:	80 00       	ld.sh	r0,r0[0x0]
800035be:	80 d4       	ld.uh	r4,r0[0xa]
800035c0:	80 00       	ld.sh	r0,r0[0x0]
800035c2:	32 74       	mov	r4,39
800035c4:	80 00       	ld.sh	r0,r0[0x0]
800035c6:	82 20       	ld.sh	r0,r1[0x4]
800035c8:	00 00       	add	r0,r0
800035ca:	00 04       	add	r4,r0
800035cc:	80 00       	ld.sh	r0,r0[0x0]
800035ce:	80 e4       	ld.uh	r4,r0[0xc]
800035d0:	80 00       	ld.sh	r0,r0[0x0]
800035d2:	31 88       	mov	r8,24
800035d4:	80 00       	ld.sh	r0,r0[0x0]
800035d6:	80 f8       	ld.uh	r8,r0[0xe]
800035d8:	80 00       	ld.sh	r0,r0[0x0]
800035da:	81 0c       	st.w	r0[0x0],r12
800035dc:	80 00       	ld.sh	r0,r0[0x0]
800035de:	81 20       	st.w	r0[0x8],r0
800035e0:	00 00       	add	r0,r0
800035e2:	01 2a       	ld.uh	r10,r0++
800035e4:	00 00       	add	r0,r0
800035e6:	01 2b       	ld.uh	r11,r0++
800035e8:	00 00       	add	r0,r0
800035ea:	00 18       	sub	r8,r0

800035ec <_settingsMenu>:
		commandChanged = true;
		switchState = 0;
	}
}

void _settingsMenu(bool firstDraw){
800035ec:	eb cd 40 c0 	pushm	r6-r7,lr
800035f0:	20 4d       	sub	sp,16
	if(firstDraw){
800035f2:	58 0c       	cp.w	r12,0
800035f4:	c5 10       	breq	80003696 <_settingsMenu+0xaa>
		screen_SetPixels(Rect(0,0,320,240),(Color){BLACK});
800035f6:	30 07       	mov	r7,0
800035f8:	50 07       	stdsp	sp[0x0],r7
800035fa:	e0 68 00 f0 	mov	r8,240
800035fe:	e0 69 01 40 	mov	r9,320
80003602:	0e 9a       	mov	r10,r7
80003604:	0e 9b       	mov	r11,r7
80003606:	fa cc ff fc 	sub	r12,sp,-4
8000360a:	f0 1f 00 2d 	mcall	800036bc <_settingsMenu+0xd0>
8000360e:	40 08       	lddsp	r8,sp[0x0]
80003610:	1a d8       	st.w	--sp,r8
80003612:	fa e8 00 08 	ld.d	r8,sp[8]
80003616:	bb 29       	st.d	--sp,r8
80003618:	f0 1f 00 2a 	mcall	800036c0 <_settingsMenu+0xd4>
		
		_drawButton();
8000361c:	f0 1f 00 2a 	mcall	800036c4 <_settingsMenu+0xd8>
		menuChanged = false;
80003620:	4a a8       	lddpc	r8,800036c8 <_settingsMenu+0xdc>
80003622:	b0 87       	st.b	r8[0x0],r7
		
		gfx_BeginNewTerminal((Vector2){20,220});
80003624:	30 47       	mov	r7,4
80003626:	0e 9a       	mov	r10,r7
80003628:	4a 9b       	lddpc	r11,800036cc <_settingsMenu+0xe0>
8000362a:	fa cc ff e8 	sub	r12,sp,-24
8000362e:	f0 1f 00 29 	mcall	800036d0 <_settingsMenu+0xe4>
80003632:	40 68       	lddsp	r8,sp[0x18]
80003634:	1a d8       	st.w	--sp,r8
80003636:	f0 1f 00 28 	mcall	800036d4 <_settingsMenu+0xe8>
		gfx_AddLineToTerminal("sudo settings -h", 16, textColor, firstDraw);
8000363a:	4a 86       	lddpc	r6,800036d8 <_settingsMenu+0xec>
8000363c:	20 1d       	sub	sp,4
8000363e:	0e 9a       	mov	r10,r7
80003640:	0c 9b       	mov	r11,r6
80003642:	1a 9c       	mov	r12,sp
80003644:	f0 1f 00 23 	mcall	800036d0 <_settingsMenu+0xe4>
80003648:	30 1a       	mov	r10,1
8000364a:	31 0b       	mov	r11,16
8000364c:	4a 4c       	lddpc	r12,800036dc <_settingsMenu+0xf0>
8000364e:	f0 1f 00 25 	mcall	800036e0 <_settingsMenu+0xf4>
		gfx_AddLineToTerminal("> textColor = Green", 20, textColor, firstDraw);
80003652:	20 1d       	sub	sp,4
80003654:	0e 9a       	mov	r10,r7
80003656:	0c 9b       	mov	r11,r6
80003658:	1a 9c       	mov	r12,sp
8000365a:	f0 1f 00 1e 	mcall	800036d0 <_settingsMenu+0xe4>
8000365e:	30 1a       	mov	r10,1
80003660:	31 4b       	mov	r11,20
80003662:	4a 1c       	lddpc	r12,800036e4 <_settingsMenu+0xf8>
80003664:	f0 1f 00 1f 	mcall	800036e0 <_settingsMenu+0xf4>
		gfx_AddLineToTerminal("> Heure : 10h 30m", 18, textColor, firstDraw);
80003668:	20 1d       	sub	sp,4
8000366a:	0e 9a       	mov	r10,r7
8000366c:	0c 9b       	mov	r11,r6
8000366e:	1a 9c       	mov	r12,sp
80003670:	f0 1f 00 18 	mcall	800036d0 <_settingsMenu+0xe4>
80003674:	30 1a       	mov	r10,1
80003676:	31 2b       	mov	r11,18
80003678:	49 cc       	lddpc	r12,800036e8 <_settingsMenu+0xfc>
8000367a:	f0 1f 00 1a 	mcall	800036e0 <_settingsMenu+0xf4>
		gfx_AddLineToTerminal("> Date : 09h 35m", 17, textColor, firstDraw);
8000367e:	20 1d       	sub	sp,4
80003680:	0e 9a       	mov	r10,r7
80003682:	0c 9b       	mov	r11,r6
80003684:	1a 9c       	mov	r12,sp
80003686:	f0 1f 00 13 	mcall	800036d0 <_settingsMenu+0xe4>
8000368a:	30 1a       	mov	r10,1
8000368c:	31 1b       	mov	r11,17
8000368e:	49 8c       	lddpc	r12,800036ec <_settingsMenu+0x100>
80003690:	f0 1f 00 14 	mcall	800036e0 <_settingsMenu+0xf4>
80003694:	2f 8d       	sub	sp,-32
	}
	
	if(switchState == 1){
80003696:	49 78       	lddpc	r8,800036f0 <_settingsMenu+0x104>
80003698:	11 89       	ld.ub	r9,r8[0x0]
8000369a:	30 18       	mov	r8,1
8000369c:	f0 09 18 00 	cp.b	r9,r8
800036a0:	c0 b1       	brne	800036b6 <_settingsMenu+0xca>
		currentMenuId = MAIN;
800036a2:	30 08       	mov	r8,0
800036a4:	49 49       	lddpc	r9,800036f4 <_settingsMenu+0x108>
800036a6:	b2 88       	st.b	r9[0x0],r8
		menuChanged = true;
800036a8:	30 19       	mov	r9,1
800036aa:	48 8a       	lddpc	r10,800036c8 <_settingsMenu+0xdc>
800036ac:	b4 89       	st.b	r10[0x0],r9
		commandChanged = true;
800036ae:	49 3a       	lddpc	r10,800036f8 <_settingsMenu+0x10c>
800036b0:	b4 89       	st.b	r10[0x0],r9
		switchState = 0;
800036b2:	49 09       	lddpc	r9,800036f0 <_settingsMenu+0x104>
800036b4:	b2 88       	st.b	r9[0x0],r8
	}
}
800036b6:	2f cd       	sub	sp,-16
800036b8:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800036bc:	80 00       	ld.sh	r0,r0[0x0]
800036be:	3b 98       	mov	r8,-71
800036c0:	80 00       	ld.sh	r0,r0[0x0]
800036c2:	3d 0c       	mov	r12,-48
800036c4:	80 00       	ld.sh	r0,r0[0x0]
800036c6:	33 3c       	mov	r12,51
800036c8:	00 00       	add	r0,r0
800036ca:	01 28       	ld.uh	r8,r0++
800036cc:	80 00       	ld.sh	r0,r0[0x0]
800036ce:	80 9a       	ld.uh	r10,r0[0x2]
800036d0:	80 00       	ld.sh	r0,r0[0x0]
800036d2:	49 3c       	lddpc	r12,8000371c <_musicMenu+0x20>
800036d4:	80 00       	ld.sh	r0,r0[0x0]
800036d6:	2e ac       	sub	r12,-22
800036d8:	00 00       	add	r0,r0
800036da:	00 1a       	sub	r10,r0
800036dc:	80 00       	ld.sh	r0,r0[0x0]
800036de:	81 34       	st.w	r0[0xc],r4
800036e0:	80 00       	ld.sh	r0,r0[0x0]
800036e2:	32 74       	mov	r4,39
800036e4:	80 00       	ld.sh	r0,r0[0x0]
800036e6:	81 48       	st.w	r0[0x10],r8
800036e8:	80 00       	ld.sh	r0,r0[0x0]
800036ea:	81 5c       	st.w	r0[0x14],r12
800036ec:	80 00       	ld.sh	r0,r0[0x0]
800036ee:	81 70       	st.w	r0[0x1c],r0
800036f0:	00 00       	add	r0,r0
800036f2:	01 2a       	ld.uh	r10,r0++
800036f4:	00 00       	add	r0,r0
800036f6:	01 2b       	ld.uh	r11,r0++
800036f8:	00 00       	add	r0,r0
800036fa:	00 18       	sub	r8,r0

800036fc <_musicMenu>:
 * otherwise only dynamic part are drawn
 *
 * Created 13.11.17 QVT
 * Last modified 13.11.17 QVT
 */
void _musicMenu(bool firstDraw){
800036fc:	eb cd 40 c0 	pushm	r6-r7,lr
80003700:	20 5d       	sub	sp,20
80003702:	18 97       	mov	r7,r12
	if(firstDraw){
80003704:	58 0c       	cp.w	r12,0
80003706:	c1 90       	breq	80003738 <_musicMenu+0x3c>
		screen_SetPixels(Rect(0,0,320,240),(Color){BLACK});
80003708:	30 06       	mov	r6,0
8000370a:	50 06       	stdsp	sp[0x0],r6
8000370c:	e0 68 00 f0 	mov	r8,240
80003710:	e0 69 01 40 	mov	r9,320
80003714:	0c 9a       	mov	r10,r6
80003716:	0c 9b       	mov	r11,r6
80003718:	fa cc ff fc 	sub	r12,sp,-4
8000371c:	f0 1f 00 2c 	mcall	800037cc <_musicMenu+0xd0>
80003720:	40 08       	lddsp	r8,sp[0x0]
80003722:	1a d8       	st.w	--sp,r8
80003724:	fa e8 00 08 	ld.d	r8,sp[8]
80003728:	bb 29       	st.d	--sp,r8
8000372a:	f0 1f 00 2a 	mcall	800037d0 <_musicMenu+0xd4>
	
		_drawButton();
8000372e:	f0 1f 00 2a 	mcall	800037d4 <_musicMenu+0xd8>
		menuChanged = false;
80003732:	4a a8       	lddpc	r8,800037d8 <_musicMenu+0xdc>
80003734:	b0 86       	st.b	r8[0x0],r6
80003736:	2f dd       	sub	sp,-12
	}
	
	gfx_BeginNewTerminal((Vector2){20,220});
80003738:	30 46       	mov	r6,4
8000373a:	0c 9a       	mov	r10,r6
8000373c:	4a 8b       	lddpc	r11,800037dc <_musicMenu+0xe0>
8000373e:	fa cc ff f4 	sub	r12,sp,-12
80003742:	f0 1f 00 28 	mcall	800037e0 <_musicMenu+0xe4>
80003746:	40 38       	lddsp	r8,sp[0xc]
80003748:	1a d8       	st.w	--sp,r8
8000374a:	f0 1f 00 27 	mcall	800037e4 <_musicMenu+0xe8>
		
	gfx_AddLineToTerminal("ls | grep .wave", 15, textColor, firstDraw);
8000374e:	20 1d       	sub	sp,4
80003750:	0c 9a       	mov	r10,r6
80003752:	4a 6b       	lddpc	r11,800037e8 <_musicMenu+0xec>
80003754:	1a 9c       	mov	r12,sp
80003756:	f0 1f 00 23 	mcall	800037e0 <_musicMenu+0xe4>
8000375a:	0e 9a       	mov	r10,r7
8000375c:	30 fb       	mov	r11,15
8000375e:	4a 4c       	lddpc	r12,800037ec <_musicMenu+0xf0>
80003760:	f0 1f 00 24 	mcall	800037f0 <_musicMenu+0xf4>
	
	if(sdcard_CheckPresence()){
80003764:	f0 1f 00 24 	mcall	800037f4 <_musicMenu+0xf8>
80003768:	2f ed       	sub	sp,-8
8000376a:	58 0c       	cp.w	r12,0
8000376c:	c0 f0       	breq	8000378a <_musicMenu+0x8e>
		gfx_AddLineToTerminal((char*)(file_menu[0].name),25,textColor, firstDraw);
8000376e:	20 1d       	sub	sp,4
80003770:	0c 9a       	mov	r10,r6
80003772:	49 eb       	lddpc	r11,800037e8 <_musicMenu+0xec>
80003774:	1a 9c       	mov	r12,sp
80003776:	f0 1f 00 1b 	mcall	800037e0 <_musicMenu+0xe4>
8000377a:	0e 9a       	mov	r10,r7
8000377c:	31 9b       	mov	r11,25
8000377e:	49 fc       	lddpc	r12,800037f8 <_musicMenu+0xfc>
80003780:	2f 9c       	sub	r12,-7
80003782:	f0 1f 00 1c 	mcall	800037f0 <_musicMenu+0xf4>
80003786:	0c 0d       	add	sp,r6
80003788:	c0 e8       	rjmp	800037a4 <_musicMenu+0xa8>
	}
	else{
		gfx_AddLineToTerminal("> No results",12,(Color){RED}, firstDraw);
8000378a:	30 08       	mov	r8,0
8000378c:	50 48       	stdsp	sp[0x10],r8
8000378e:	31 f8       	mov	r8,31
80003790:	fb 58 00 10 	st.h	sp[16],r8
80003794:	40 48       	lddsp	r8,sp[0x10]
80003796:	1a d8       	st.w	--sp,r8
80003798:	0e 9a       	mov	r10,r7
8000379a:	30 cb       	mov	r11,12
8000379c:	49 8c       	lddpc	r12,800037fc <_musicMenu+0x100>
8000379e:	f0 1f 00 15 	mcall	800037f0 <_musicMenu+0xf4>
800037a2:	2f fd       	sub	sp,-4
	}
	
	if(switchState == 1){
800037a4:	49 78       	lddpc	r8,80003800 <_musicMenu+0x104>
800037a6:	11 89       	ld.ub	r9,r8[0x0]
800037a8:	30 18       	mov	r8,1
800037aa:	f0 09 18 00 	cp.b	r9,r8
800037ae:	c0 b1       	brne	800037c4 <_musicMenu+0xc8>
		currentMenuId = MAIN;
800037b0:	30 08       	mov	r8,0
800037b2:	49 59       	lddpc	r9,80003804 <_musicMenu+0x108>
800037b4:	b2 88       	st.b	r9[0x0],r8
		menuChanged = true;
800037b6:	30 19       	mov	r9,1
800037b8:	48 8a       	lddpc	r10,800037d8 <_musicMenu+0xdc>
800037ba:	b4 89       	st.b	r10[0x0],r9
		commandChanged = true;
800037bc:	49 3a       	lddpc	r10,80003808 <_musicMenu+0x10c>
800037be:	b4 89       	st.b	r10[0x0],r9
		switchState = 0;
800037c0:	49 09       	lddpc	r9,80003800 <_musicMenu+0x104>
800037c2:	b2 88       	st.b	r9[0x0],r8
	}
}
800037c4:	2f bd       	sub	sp,-20
800037c6:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800037ca:	00 00       	add	r0,r0
800037cc:	80 00       	ld.sh	r0,r0[0x0]
800037ce:	3b 98       	mov	r8,-71
800037d0:	80 00       	ld.sh	r0,r0[0x0]
800037d2:	3d 0c       	mov	r12,-48
800037d4:	80 00       	ld.sh	r0,r0[0x0]
800037d6:	33 3c       	mov	r12,51
800037d8:	00 00       	add	r0,r0
800037da:	01 28       	ld.uh	r8,r0++
800037dc:	80 00       	ld.sh	r0,r0[0x0]
800037de:	80 a6       	ld.uh	r6,r0[0x4]
800037e0:	80 00       	ld.sh	r0,r0[0x0]
800037e2:	49 3c       	lddpc	r12,8000382c <_mainMenu+0x20>
800037e4:	80 00       	ld.sh	r0,r0[0x0]
800037e6:	2e ac       	sub	r12,-22
800037e8:	00 00       	add	r0,r0
800037ea:	00 1a       	sub	r10,r0
800037ec:	80 00       	ld.sh	r0,r0[0x0]
800037ee:	81 84       	st.w	r0[0x20],r4
800037f0:	80 00       	ld.sh	r0,r0[0x0]
800037f2:	32 74       	mov	r4,39
800037f4:	80 00       	ld.sh	r0,r0[0x0]
800037f6:	43 70       	lddsp	r0,sp[0xdc]
800037f8:	00 00       	add	r0,r0
800037fa:	05 bc       	ld.ub	r12,r2[0x3]
800037fc:	80 00       	ld.sh	r0,r0[0x0]
800037fe:	81 94       	st.w	r0[0x24],r4
80003800:	00 00       	add	r0,r0
80003802:	01 2a       	ld.uh	r10,r0++
80003804:	00 00       	add	r0,r0
80003806:	01 2b       	ld.uh	r11,r0++
80003808:	00 00       	add	r0,r0
8000380a:	00 18       	sub	r8,r0

8000380c <_mainMenu>:
 * otherwise only dynamic part are drawn
 *
 * Created 10.11.17 QVT
 * Last modified 10.11.17 QVT
 */
void _mainMenu(bool firstDraw){
8000380c:	eb cd 40 e0 	pushm	r5-r7,lr
80003810:	20 bd       	sub	sp,44
80003812:	18 97       	mov	r7,r12
	if(firstDraw){
80003814:	58 0c       	cp.w	r12,0
80003816:	c3 30       	breq	8000387c <_mainMenu+0x70>
		screen_SetPixels(Rect(0,0,320,240),(Color){BLACK});
80003818:	30 06       	mov	r6,0
8000381a:	50 06       	stdsp	sp[0x0],r6
8000381c:	e0 68 00 f0 	mov	r8,240
80003820:	e0 69 01 40 	mov	r9,320
80003824:	0c 9a       	mov	r10,r6
80003826:	0c 9b       	mov	r11,r6
80003828:	fa cc ff fc 	sub	r12,sp,-4
8000382c:	f0 1f 00 90 	mcall	80003a6c <_mainMenu+0x260>
80003830:	40 08       	lddsp	r8,sp[0x0]
80003832:	1a d8       	st.w	--sp,r8
80003834:	fa e8 00 08 	ld.d	r8,sp[8]
80003838:	bb 29       	st.d	--sp,r8
8000383a:	f0 1f 00 8e 	mcall	80003a70 <_mainMenu+0x264>
	
		_drawButton();
8000383e:	f0 1f 00 8e 	mcall	80003a74 <_mainMenu+0x268>
		menuChanged = false;
80003842:	fe f8 02 36 	ld.w	r8,pc[566]
80003846:	b0 86       	st.b	r8[0x0],r6
		
		gfx_BeginNewTerminal((Vector2){20,220});
80003848:	30 46       	mov	r6,4
8000384a:	0c 9a       	mov	r10,r6
8000384c:	fe fb 02 30 	ld.w	r11,pc[560]
80003850:	fa cc ff e8 	sub	r12,sp,-24
80003854:	f0 1f 00 8b 	mcall	80003a80 <_mainMenu+0x274>
80003858:	40 68       	lddsp	r8,sp[0x18]
8000385a:	1a d8       	st.w	--sp,r8
8000385c:	f0 1f 00 8a 	mcall	80003a84 <_mainMenu+0x278>
		
		gfx_AddLineToTerminal("status --complete", 17, textColor, firstDraw);
80003860:	20 1d       	sub	sp,4
80003862:	0c 9a       	mov	r10,r6
80003864:	fe fb 02 24 	ld.w	r11,pc[548]
80003868:	1a 9c       	mov	r12,sp
8000386a:	f0 1f 00 86 	mcall	80003a80 <_mainMenu+0x274>
8000386e:	30 1a       	mov	r10,1
80003870:	31 1b       	mov	r11,17
80003872:	fe fc 02 1a 	ld.w	r12,pc[538]
80003876:	f0 1f 00 87 	mcall	80003a90 <_mainMenu+0x284>
8000387a:	2f bd       	sub	sp,-20
	}
	
	gfx_BeginNewTerminal((Vector2){20,200});
8000387c:	30 46       	mov	r6,4
8000387e:	0c 9a       	mov	r10,r6
80003880:	fe fb 02 14 	ld.w	r11,pc[532]
80003884:	fa cc ff f0 	sub	r12,sp,-16
80003888:	f0 1f 00 7e 	mcall	80003a80 <_mainMenu+0x274>
8000388c:	40 48       	lddsp	r8,sp[0x10]
8000388e:	1a d8       	st.w	--sp,r8
80003890:	f0 1f 00 7d 	mcall	80003a84 <_mainMenu+0x278>
	gfx_AddOptionToTerminal("Vendredi",8,textColor,false,firstDraw,firstDraw);
80003894:	4f d5       	lddpc	r5,80003a88 <_mainMenu+0x27c>
80003896:	20 1d       	sub	sp,4
80003898:	0c 9a       	mov	r10,r6
8000389a:	0a 9b       	mov	r11,r5
8000389c:	1a 9c       	mov	r12,sp
8000389e:	f0 1f 00 79 	mcall	80003a80 <_mainMenu+0x274>
800038a2:	0e 98       	mov	r8,r7
800038a4:	0e 99       	mov	r9,r7
800038a6:	30 0a       	mov	r10,0
800038a8:	30 8b       	mov	r11,8
800038aa:	4f cc       	lddpc	r12,80003a98 <_mainMenu+0x28c>
800038ac:	f0 1f 00 7c 	mcall	80003a9c <_mainMenu+0x290>
	gfx_AddOptionToTerminal("10/11/17", 8, textColor,false,firstDraw, firstDraw);
800038b0:	20 1d       	sub	sp,4
800038b2:	0c 9a       	mov	r10,r6
800038b4:	0a 9b       	mov	r11,r5
800038b6:	1a 9c       	mov	r12,sp
800038b8:	f0 1f 00 72 	mcall	80003a80 <_mainMenu+0x274>
800038bc:	0e 98       	mov	r8,r7
800038be:	0e 99       	mov	r9,r7
800038c0:	30 0a       	mov	r10,0
800038c2:	30 8b       	mov	r11,8
800038c4:	4f 7c       	lddpc	r12,80003aa0 <_mainMenu+0x294>
800038c6:	f0 1f 00 76 	mcall	80003a9c <_mainMenu+0x290>
	gfx_AddOptionToTerminal("15h 30m" ,  7, textColor,false,firstDraw, firstDraw);
800038ca:	20 1d       	sub	sp,4
800038cc:	0c 9a       	mov	r10,r6
800038ce:	0a 9b       	mov	r11,r5
800038d0:	1a 9c       	mov	r12,sp
800038d2:	f0 1f 00 6c 	mcall	80003a80 <_mainMenu+0x274>
800038d6:	0e 98       	mov	r8,r7
800038d8:	0e 99       	mov	r9,r7
800038da:	30 0a       	mov	r10,0
800038dc:	30 7b       	mov	r11,7
800038de:	4f 2c       	lddpc	r12,80003aa4 <_mainMenu+0x298>
800038e0:	f0 1f 00 6f 	mcall	80003a9c <_mainMenu+0x290>
	gfx_AddOptionToTerminal("Alarme 1 disabled" ,  26, textColor,false,firstDraw, firstDraw);
800038e4:	20 1d       	sub	sp,4
800038e6:	0c 9a       	mov	r10,r6
800038e8:	0a 9b       	mov	r11,r5
800038ea:	1a 9c       	mov	r12,sp
800038ec:	f0 1f 00 65 	mcall	80003a80 <_mainMenu+0x274>
800038f0:	0e 98       	mov	r8,r7
800038f2:	0e 99       	mov	r9,r7
800038f4:	30 0a       	mov	r10,0
800038f6:	31 ab       	mov	r11,26
800038f8:	4e cc       	lddpc	r12,80003aa8 <_mainMenu+0x29c>
800038fa:	f0 1f 00 69 	mcall	80003a9c <_mainMenu+0x290>
	gfx_AddOptionToTerminal("Alarme 2 enabled" ,  25, textColor,false,firstDraw, firstDraw);
800038fe:	20 1d       	sub	sp,4
80003900:	0c 9a       	mov	r10,r6
80003902:	0a 9b       	mov	r11,r5
80003904:	1a 9c       	mov	r12,sp
80003906:	f0 1f 00 5f 	mcall	80003a80 <_mainMenu+0x274>
8000390a:	0e 98       	mov	r8,r7
8000390c:	0e 99       	mov	r9,r7
8000390e:	30 0a       	mov	r10,0
80003910:	31 9b       	mov	r11,25
80003912:	4e 7c       	lddpc	r12,80003aac <_mainMenu+0x2a0>
80003914:	f0 1f 00 62 	mcall	80003a9c <_mainMenu+0x290>
	
	if(selectedCommand == 0){
80003918:	4e 68       	lddpc	r8,80003ab0 <_mainMenu+0x2a4>
8000391a:	11 88       	ld.ub	r8,r8[0x0]
8000391c:	2f ad       	sub	sp,-24
8000391e:	58 08       	cp.w	r8,0
80003920:	c1 21       	brne	80003944 <_mainMenu+0x138>
		gfx_cmdLine("ls | grep .wave", 15, textColor,commandChanged);
80003922:	4e 57       	lddpc	r7,80003ab4 <_mainMenu+0x2a8>
80003924:	0f 86       	ld.ub	r6,r7[0x0]
80003926:	20 1d       	sub	sp,4
80003928:	30 4a       	mov	r10,4
8000392a:	0a 9b       	mov	r11,r5
8000392c:	1a 9c       	mov	r12,sp
8000392e:	f0 1f 00 55 	mcall	80003a80 <_mainMenu+0x274>
80003932:	0c 9a       	mov	r10,r6
80003934:	30 fb       	mov	r11,15
80003936:	4e 1c       	lddpc	r12,80003ab8 <_mainMenu+0x2ac>
80003938:	f0 1f 00 61 	mcall	80003abc <_mainMenu+0x2b0>
		commandChanged = false;
8000393c:	30 08       	mov	r8,0
8000393e:	ae 88       	st.b	r7[0x0],r8
80003940:	2f fd       	sub	sp,-4
80003942:	c2 68       	rjmp	8000398e <_mainMenu+0x182>
	}
	else if(selectedCommand == 1){
80003944:	30 19       	mov	r9,1
80003946:	f2 08 18 00 	cp.b	r8,r9
8000394a:	c1 21       	brne	8000396e <_mainMenu+0x162>
		gfx_cmdLine("sudo settings -h", 16, textColor,commandChanged);
8000394c:	4d a7       	lddpc	r7,80003ab4 <_mainMenu+0x2a8>
8000394e:	0f 86       	ld.ub	r6,r7[0x0]
80003950:	20 1d       	sub	sp,4
80003952:	30 4a       	mov	r10,4
80003954:	4c db       	lddpc	r11,80003a88 <_mainMenu+0x27c>
80003956:	1a 9c       	mov	r12,sp
80003958:	f0 1f 00 4a 	mcall	80003a80 <_mainMenu+0x274>
8000395c:	0c 9a       	mov	r10,r6
8000395e:	31 0b       	mov	r11,16
80003960:	4d 8c       	lddpc	r12,80003ac0 <_mainMenu+0x2b4>
80003962:	f0 1f 00 57 	mcall	80003abc <_mainMenu+0x2b0>
		commandChanged = false;
80003966:	30 08       	mov	r8,0
80003968:	ae 88       	st.b	r7[0x0],r8
8000396a:	2f fd       	sub	sp,-4
8000396c:	c1 18       	rjmp	8000398e <_mainMenu+0x182>
	}
	else {
		gfx_cmdLine("alarm -info", 11, textColor,commandChanged);
8000396e:	4d 27       	lddpc	r7,80003ab4 <_mainMenu+0x2a8>
80003970:	0f 86       	ld.ub	r6,r7[0x0]
80003972:	20 1d       	sub	sp,4
80003974:	30 4a       	mov	r10,4
80003976:	4c 5b       	lddpc	r11,80003a88 <_mainMenu+0x27c>
80003978:	1a 9c       	mov	r12,sp
8000397a:	f0 1f 00 42 	mcall	80003a80 <_mainMenu+0x274>
8000397e:	0c 9a       	mov	r10,r6
80003980:	30 bb       	mov	r11,11
80003982:	4d 1c       	lddpc	r12,80003ac4 <_mainMenu+0x2b8>
80003984:	f0 1f 00 4e 	mcall	80003abc <_mainMenu+0x2b0>
		commandChanged = false;
80003988:	30 08       	mov	r8,0
8000398a:	ae 88       	st.b	r7[0x0],r8
8000398c:	2f fd       	sub	sp,-4
	}
	
	if(switchState == 4){
8000398e:	4c f8       	lddpc	r8,80003ac8 <_mainMenu+0x2bc>
80003990:	11 88       	ld.ub	r8,r8[0x0]
80003992:	30 49       	mov	r9,4
80003994:	f2 08 18 00 	cp.b	r8,r9
80003998:	c1 b1       	brne	800039ce <_mainMenu+0x1c2>
		if(selectedCommand == 0)
8000399a:	4c 68       	lddpc	r8,80003ab0 <_mainMenu+0x2a4>
8000399c:	11 88       	ld.ub	r8,r8[0x0]
8000399e:	58 08       	cp.w	r8,0
800039a0:	c0 51       	brne	800039aa <_mainMenu+0x19e>
			currentMenuId = MUSIC;
800039a2:	30 19       	mov	r9,1
800039a4:	4c a8       	lddpc	r8,80003acc <_mainMenu+0x2c0>
800039a6:	b0 89       	st.b	r8[0x0],r9
800039a8:	c0 c8       	rjmp	800039c0 <_mainMenu+0x1b4>
		else if(selectedCommand == 1)
800039aa:	30 19       	mov	r9,1
800039ac:	f2 08 18 00 	cp.b	r8,r9
800039b0:	c0 51       	brne	800039ba <_mainMenu+0x1ae>
			currentMenuId = SETTINGS;
800039b2:	30 29       	mov	r9,2
800039b4:	4c 68       	lddpc	r8,80003acc <_mainMenu+0x2c0>
800039b6:	b0 89       	st.b	r8[0x0],r9
800039b8:	c0 48       	rjmp	800039c0 <_mainMenu+0x1b4>
		else
			currentMenuId = ALARM;
800039ba:	30 39       	mov	r9,3
800039bc:	4c 48       	lddpc	r8,80003acc <_mainMenu+0x2c0>
800039be:	b0 89       	st.b	r8[0x0],r9
			
		menuChanged = true;
800039c0:	30 19       	mov	r9,1
800039c2:	4a e8       	lddpc	r8,80003a78 <_mainMenu+0x26c>
800039c4:	b0 89       	st.b	r8[0x0],r9
		switchState = 0;
800039c6:	30 09       	mov	r9,0
800039c8:	4c 08       	lddpc	r8,80003ac8 <_mainMenu+0x2bc>
800039ca:	b0 89       	st.b	r8[0x0],r9
800039cc:	c4 d8       	rjmp	80003a66 <_mainMenu+0x25a>
	}
	else if(switchState == 2){
800039ce:	30 29       	mov	r9,2
800039d0:	f2 08 18 00 	cp.b	r8,r9
800039d4:	c2 41       	brne	80003a1c <_mainMenu+0x210>
		selectedCommand = (selectedCommand == NBR_OF_MENU - 1)?(0):(selectedCommand+1);
800039d6:	4b 78       	lddpc	r8,80003ab0 <_mainMenu+0x2a4>
800039d8:	11 88       	ld.ub	r8,r8[0x0]
800039da:	f2 08 18 00 	cp.b	r8,r9
800039de:	c0 31       	brne	800039e4 <_mainMenu+0x1d8>
800039e0:	30 08       	mov	r8,0
800039e2:	c0 28       	rjmp	800039e6 <_mainMenu+0x1da>
800039e4:	2f f8       	sub	r8,-1
800039e6:	4b 39       	lddpc	r9,80003ab0 <_mainMenu+0x2a4>
800039e8:	b2 88       	st.b	r9[0x0],r8
		commandChanged = true;
800039ea:	30 19       	mov	r9,1
800039ec:	4b 28       	lddpc	r8,80003ab4 <_mainMenu+0x2a8>
800039ee:	b0 89       	st.b	r8[0x0],r9
		screen_SetPixels(Rect(0,40,320,50),(Color){BLACK});
800039f0:	30 07       	mov	r7,0
800039f2:	50 57       	stdsp	sp[0x14],r7
800039f4:	33 28       	mov	r8,50
800039f6:	e0 69 01 40 	mov	r9,320
800039fa:	32 8a       	mov	r10,40
800039fc:	0e 9b       	mov	r11,r7
800039fe:	fa cc ff e8 	sub	r12,sp,-24
80003a02:	f0 1f 00 1b 	mcall	80003a6c <_mainMenu+0x260>
80003a06:	40 58       	lddsp	r8,sp[0x14]
80003a08:	1a d8       	st.w	--sp,r8
80003a0a:	fa e8 00 1c 	ld.d	r8,sp[28]
80003a0e:	bb 29       	st.d	--sp,r8
80003a10:	f0 1f 00 18 	mcall	80003a70 <_mainMenu+0x264>
		switchState = 0;
80003a14:	4a d8       	lddpc	r8,80003ac8 <_mainMenu+0x2bc>
80003a16:	b0 87       	st.b	r8[0x0],r7
80003a18:	2f dd       	sub	sp,-12
80003a1a:	c2 68       	rjmp	80003a66 <_mainMenu+0x25a>
	}
	else if(switchState == 3){
80003a1c:	30 39       	mov	r9,3
80003a1e:	f2 08 18 00 	cp.b	r8,r9
80003a22:	c2 21       	brne	80003a66 <_mainMenu+0x25a>
		selectedCommand = (selectedCommand == 0)?(NBR_OF_MENU - 1):(selectedCommand-1);
80003a24:	4a 38       	lddpc	r8,80003ab0 <_mainMenu+0x2a4>
80003a26:	11 88       	ld.ub	r8,r8[0x0]
80003a28:	58 08       	cp.w	r8,0
80003a2a:	c0 31       	brne	80003a30 <_mainMenu+0x224>
80003a2c:	30 28       	mov	r8,2
80003a2e:	c0 28       	rjmp	80003a32 <_mainMenu+0x226>
80003a30:	20 18       	sub	r8,1
80003a32:	4a 09       	lddpc	r9,80003ab0 <_mainMenu+0x2a4>
80003a34:	b2 88       	st.b	r9[0x0],r8
		commandChanged = true;
80003a36:	30 19       	mov	r9,1
80003a38:	49 f8       	lddpc	r8,80003ab4 <_mainMenu+0x2a8>
80003a3a:	b0 89       	st.b	r8[0x0],r9
		screen_SetPixels(Rect(0,40,320,50),(Color){BLACK});
80003a3c:	30 07       	mov	r7,0
80003a3e:	50 87       	stdsp	sp[0x20],r7
80003a40:	33 28       	mov	r8,50
80003a42:	e0 69 01 40 	mov	r9,320
80003a46:	32 8a       	mov	r10,40
80003a48:	0e 9b       	mov	r11,r7
80003a4a:	fa cc ff dc 	sub	r12,sp,-36
80003a4e:	f0 1f 00 08 	mcall	80003a6c <_mainMenu+0x260>
80003a52:	40 88       	lddsp	r8,sp[0x20]
80003a54:	1a d8       	st.w	--sp,r8
80003a56:	fa e8 00 28 	ld.d	r8,sp[40]
80003a5a:	bb 29       	st.d	--sp,r8
80003a5c:	f0 1f 00 05 	mcall	80003a70 <_mainMenu+0x264>
		switchState = 0;
80003a60:	49 a8       	lddpc	r8,80003ac8 <_mainMenu+0x2bc>
80003a62:	b0 87       	st.b	r8[0x0],r7
80003a64:	2f dd       	sub	sp,-12
	}
}
80003a66:	2f 5d       	sub	sp,-44
80003a68:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003a6c:	80 00       	ld.sh	r0,r0[0x0]
80003a6e:	3b 98       	mov	r8,-71
80003a70:	80 00       	ld.sh	r0,r0[0x0]
80003a72:	3d 0c       	mov	r12,-48
80003a74:	80 00       	ld.sh	r0,r0[0x0]
80003a76:	33 3c       	mov	r12,51
80003a78:	00 00       	add	r0,r0
80003a7a:	01 28       	ld.uh	r8,r0++
80003a7c:	80 00       	ld.sh	r0,r0[0x0]
80003a7e:	80 96       	ld.uh	r6,r0[0x2]
80003a80:	80 00       	ld.sh	r0,r0[0x0]
80003a82:	49 3c       	lddpc	r12,80003acc <_mainMenu+0x2c0>
80003a84:	80 00       	ld.sh	r0,r0[0x0]
80003a86:	2e ac       	sub	r12,-22
80003a88:	00 00       	add	r0,r0
80003a8a:	00 1a       	sub	r10,r0
80003a8c:	80 00       	ld.sh	r0,r0[0x0]
80003a8e:	81 a4       	st.w	r0[0x28],r4
80003a90:	80 00       	ld.sh	r0,r0[0x0]
80003a92:	32 74       	mov	r4,39
80003a94:	80 00       	ld.sh	r0,r0[0x0]
80003a96:	80 a2       	ld.uh	r2,r0[0x4]
80003a98:	80 00       	ld.sh	r0,r0[0x0]
80003a9a:	81 b8       	st.w	r0[0x2c],r8
80003a9c:	80 00       	ld.sh	r0,r0[0x0]
80003a9e:	31 88       	mov	r8,24
80003aa0:	80 00       	ld.sh	r0,r0[0x0]
80003aa2:	81 c4       	st.w	r0[0x30],r4
80003aa4:	80 00       	ld.sh	r0,r0[0x0]
80003aa6:	81 d0       	st.w	r0[0x34],r0
80003aa8:	80 00       	ld.sh	r0,r0[0x0]
80003aaa:	81 d8       	st.w	r0[0x34],r8
80003aac:	80 00       	ld.sh	r0,r0[0x0]
80003aae:	81 ec       	st.w	r0[0x38],r12
80003ab0:	00 00       	add	r0,r0
80003ab2:	01 29       	ld.uh	r9,r0++
80003ab4:	00 00       	add	r0,r0
80003ab6:	00 18       	sub	r8,r0
80003ab8:	80 00       	ld.sh	r0,r0[0x0]
80003aba:	81 84       	st.w	r0[0x20],r4
80003abc:	80 00       	ld.sh	r0,r0[0x0]
80003abe:	30 48       	mov	r8,4
80003ac0:	80 00       	ld.sh	r0,r0[0x0]
80003ac2:	81 34       	st.w	r0[0xc],r4
80003ac4:	80 00       	ld.sh	r0,r0[0x0]
80003ac6:	82 00       	ld.sh	r0,r1[0x0]
80003ac8:	00 00       	add	r0,r0
80003aca:	01 2a       	ld.uh	r10,r0++
80003acc:	00 00       	add	r0,r0
80003ace:	01 2b       	ld.uh	r11,r0++

80003ad0 <gui_Init>:

/************************************************************************/
/* FUNCTIONS                                                            */
/************************************************************************/

void gui_Init(void){
80003ad0:	d4 01       	pushm	lr
	gpio_enable_pin_glitch_filter(PIN_SWITCH0);
80003ad2:	33 8c       	mov	r12,56
80003ad4:	f0 1f 00 17 	mcall	80003b30 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH0);
80003ad8:	33 8c       	mov	r12,56
80003ada:	f0 1f 00 17 	mcall	80003b34 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH0, GPIO_RISING_EDGE);
80003ade:	30 1b       	mov	r11,1
80003ae0:	33 8c       	mov	r12,56
80003ae2:	f0 1f 00 16 	mcall	80003b38 <gui_Init+0x68>

	gpio_enable_pin_glitch_filter(PIN_SWITCH1);
80003ae6:	33 9c       	mov	r12,57
80003ae8:	f0 1f 00 12 	mcall	80003b30 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH1);
80003aec:	33 9c       	mov	r12,57
80003aee:	f0 1f 00 12 	mcall	80003b34 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH1, GPIO_RISING_EDGE);
80003af2:	30 1b       	mov	r11,1
80003af4:	33 9c       	mov	r12,57
80003af6:	f0 1f 00 11 	mcall	80003b38 <gui_Init+0x68>

	gpio_enable_pin_glitch_filter(PIN_SWITCH2);
80003afa:	33 ac       	mov	r12,58
80003afc:	f0 1f 00 0d 	mcall	80003b30 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH2);
80003b00:	33 ac       	mov	r12,58
80003b02:	f0 1f 00 0d 	mcall	80003b34 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH2, GPIO_RISING_EDGE);
80003b06:	30 1b       	mov	r11,1
80003b08:	33 ac       	mov	r12,58
80003b0a:	f0 1f 00 0c 	mcall	80003b38 <gui_Init+0x68>

	gpio_enable_pin_glitch_filter(PIN_SWITCH3);
80003b0e:	33 bc       	mov	r12,59
80003b10:	f0 1f 00 08 	mcall	80003b30 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH3);
80003b14:	33 bc       	mov	r12,59
80003b16:	f0 1f 00 08 	mcall	80003b34 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH3, GPIO_RISING_EDGE);
80003b1a:	30 1b       	mov	r11,1
80003b1c:	33 bc       	mov	r12,59
80003b1e:	f0 1f 00 07 	mcall	80003b38 <gui_Init+0x68>
	
	INTC_register_interrupt(&switchISR, AVR32_GPIO_IRQ7, AVR32_INTC_INT0);
80003b22:	30 0a       	mov	r10,0
80003b24:	34 7b       	mov	r11,71
80003b26:	48 6c       	lddpc	r12,80003b3c <gui_Init+0x6c>
80003b28:	f0 1f 00 06 	mcall	80003b40 <gui_Init+0x70>
}
80003b2c:	d8 02       	popm	pc
80003b2e:	00 00       	add	r0,r0
80003b30:	80 00       	ld.sh	r0,r0[0x0]
80003b32:	29 1e       	sub	lr,-111
80003b34:	80 00       	ld.sh	r0,r0[0x0]
80003b36:	28 d0       	sub	r0,-115
80003b38:	80 00       	ld.sh	r0,r0[0x0]
80003b3a:	29 34       	sub	r4,-109
80003b3c:	80 00       	ld.sh	r0,r0[0x0]
80003b3e:	32 e4       	mov	r4,46
80003b40:	80 00       	ld.sh	r0,r0[0x0]
80003b42:	29 94       	sub	r4,-103

80003b44 <rectangle_GetArea>:
80003b44:	eb cd 00 10 	pushm	r4
80003b48:	20 1d       	sub	sp,4
80003b4a:	fa c4 ff f8 	sub	r4,sp,-8
80003b4e:	09 e9       	ld.ub	r9,r4[0x6]
80003b50:	2f f9       	sub	r9,-1
80003b52:	09 aa       	ld.ub	r10,r4[0x2]
80003b54:	14 19       	sub	r9,r10
80003b56:	88 a8       	ld.uh	r8,r4[0x4]
80003b58:	2f f8       	sub	r8,-1
80003b5a:	88 8a       	ld.uh	r10,r4[0x0]
80003b5c:	14 18       	sub	r8,r10
80003b5e:	f2 08 02 48 	mul	r8,r9,r8
80003b62:	50 08       	stdsp	sp[0x0],r8
80003b64:	40 0c       	lddsp	r12,sp[0x0]
80003b66:	2f fd       	sub	sp,-4
80003b68:	e3 cd 00 10 	ldm	sp++,r4
80003b6c:	5e fc       	retal	r12

80003b6e <rectangle_VerifySize>:
80003b6e:	98 08       	ld.sh	r8,r12[0x0]
80003b70:	f6 08 19 00 	cp.h	r8,r11
80003b74:	f9 fb bc 00 	st.hhi	r12[0x0],r11
80003b78:	98 28       	ld.sh	r8,r12[0x4]
80003b7a:	f6 08 19 00 	cp.h	r8,r11
80003b7e:	f9 fb bc 02 	st.hhi	r12[0x4],r11
80003b82:	19 a8       	ld.ub	r8,r12[0x2]
80003b84:	f4 08 18 00 	cp.b	r8,r10
80003b88:	f9 fa be 02 	st.bhi	r12[0x2],r10
80003b8c:	19 e8       	ld.ub	r8,r12[0x6]
80003b8e:	f4 08 18 00 	cp.b	r8,r10
80003b92:	f9 fa be 06 	st.bhi	r12[0x6],r10
80003b96:	5e fc       	retal	r12

80003b98 <Rect>:
80003b98:	d4 01       	pushm	lr
80003b9a:	18 9e       	mov	lr,r12
80003b9c:	b8 0b       	st.h	r12[0x0],r11
80003b9e:	b8 aa       	st.b	r12[0x2],r10
80003ba0:	b8 29       	st.h	r12[0x4],r9
80003ba2:	b8 e8       	st.b	r12[0x6],r8
80003ba4:	d8 02       	popm	pc
80003ba6:	d7 03       	nop

80003ba8 <_writeRegister>:
80003ba8:	eb cd 40 c0 	pushm	r6-r7,lr
80003bac:	18 96       	mov	r6,r12
80003bae:	16 97       	mov	r7,r11
80003bb0:	30 0b       	mov	r11,0
80003bb2:	fe 7c 24 00 	mov	r12,-56320
80003bb6:	f0 1f 00 1a 	mcall	80003c1c <_writeRegister+0x74>
80003bba:	37 0b       	mov	r11,112
80003bbc:	fe 7c 24 00 	mov	r12,-56320
80003bc0:	f0 1f 00 18 	mcall	80003c20 <_writeRegister+0x78>
80003bc4:	30 0b       	mov	r11,0
80003bc6:	fe 7c 24 00 	mov	r12,-56320
80003bca:	f0 1f 00 16 	mcall	80003c20 <_writeRegister+0x78>
80003bce:	0c 9b       	mov	r11,r6
80003bd0:	fe 7c 24 00 	mov	r12,-56320
80003bd4:	f0 1f 00 13 	mcall	80003c20 <_writeRegister+0x78>
80003bd8:	30 0b       	mov	r11,0
80003bda:	fe 7c 24 00 	mov	r12,-56320
80003bde:	f0 1f 00 12 	mcall	80003c24 <_writeRegister+0x7c>
80003be2:	30 0b       	mov	r11,0
80003be4:	fe 7c 24 00 	mov	r12,-56320
80003be8:	f0 1f 00 0d 	mcall	80003c1c <_writeRegister+0x74>
80003bec:	37 2b       	mov	r11,114
80003bee:	fe 7c 24 00 	mov	r12,-56320
80003bf2:	f0 1f 00 0c 	mcall	80003c20 <_writeRegister+0x78>
80003bf6:	f7 d7 c1 08 	bfextu	r11,r7,0x8,0x8
80003bfa:	fe 7c 24 00 	mov	r12,-56320
80003bfe:	f0 1f 00 09 	mcall	80003c20 <_writeRegister+0x78>
80003c02:	0e 9b       	mov	r11,r7
80003c04:	5c 5b       	castu.b	r11
80003c06:	fe 7c 24 00 	mov	r12,-56320
80003c0a:	f0 1f 00 06 	mcall	80003c20 <_writeRegister+0x78>
80003c0e:	30 0b       	mov	r11,0
80003c10:	fe 7c 24 00 	mov	r12,-56320
80003c14:	f0 1f 00 04 	mcall	80003c24 <_writeRegister+0x7c>
80003c18:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80003c1c:	80 00       	ld.sh	r0,r0[0x0]
80003c1e:	2d 02       	sub	r2,-48
80003c20:	80 00       	ld.sh	r0,r0[0x0]
80003c22:	2e 32       	sub	r2,-29
80003c24:	80 00       	ld.sh	r0,r0[0x0]
80003c26:	2d 4e       	sub	lr,-44

80003c28 <_setStart>:
80003c28:	eb cd 40 10 	pushm	r4,lr
80003c2c:	fa c4 ff f8 	sub	r4,sp,-8
80003c30:	09 ab       	ld.ub	r11,r4[0x2]
80003c32:	32 0c       	mov	r12,32
80003c34:	f0 1f 00 04 	mcall	80003c44 <_setStart+0x1c>
80003c38:	88 8b       	ld.uh	r11,r4[0x0]
80003c3a:	32 1c       	mov	r12,33
80003c3c:	f0 1f 00 02 	mcall	80003c44 <_setStart+0x1c>
80003c40:	e3 cd 80 10 	ldm	sp++,r4,pc
80003c44:	80 00       	ld.sh	r0,r0[0x0]
80003c46:	3b a8       	mov	r8,-70

80003c48 <_setLimits>:
80003c48:	eb cd 40 10 	pushm	r4,lr
80003c4c:	fa c4 ff f8 	sub	r4,sp,-8
80003c50:	09 ab       	ld.ub	r11,r4[0x2]
80003c52:	35 0c       	mov	r12,80
80003c54:	f0 1f 00 08 	mcall	80003c74 <_setLimits+0x2c>
80003c58:	09 eb       	ld.ub	r11,r4[0x6]
80003c5a:	35 1c       	mov	r12,81
80003c5c:	f0 1f 00 06 	mcall	80003c74 <_setLimits+0x2c>
80003c60:	88 8b       	ld.uh	r11,r4[0x0]
80003c62:	35 2c       	mov	r12,82
80003c64:	f0 1f 00 04 	mcall	80003c74 <_setLimits+0x2c>
80003c68:	88 ab       	ld.uh	r11,r4[0x4]
80003c6a:	35 2c       	mov	r12,82
80003c6c:	f0 1f 00 02 	mcall	80003c74 <_setLimits+0x2c>
80003c70:	e3 cd 80 10 	ldm	sp++,r4,pc
80003c74:	80 00       	ld.sh	r0,r0[0x0]
80003c76:	3b a8       	mov	r8,-70

80003c78 <_selectRegister>:
80003c78:	eb cd 40 80 	pushm	r7,lr
80003c7c:	18 97       	mov	r7,r12
80003c7e:	30 0b       	mov	r11,0
80003c80:	fe 7c 24 00 	mov	r12,-56320
80003c84:	f0 1f 00 0c 	mcall	80003cb4 <_selectRegister+0x3c>
80003c88:	37 0b       	mov	r11,112
80003c8a:	fe 7c 24 00 	mov	r12,-56320
80003c8e:	f0 1f 00 0b 	mcall	80003cb8 <_selectRegister+0x40>
80003c92:	30 0b       	mov	r11,0
80003c94:	fe 7c 24 00 	mov	r12,-56320
80003c98:	f0 1f 00 08 	mcall	80003cb8 <_selectRegister+0x40>
80003c9c:	0e 9b       	mov	r11,r7
80003c9e:	fe 7c 24 00 	mov	r12,-56320
80003ca2:	f0 1f 00 06 	mcall	80003cb8 <_selectRegister+0x40>
80003ca6:	30 0b       	mov	r11,0
80003ca8:	fe 7c 24 00 	mov	r12,-56320
80003cac:	f0 1f 00 04 	mcall	80003cbc <_selectRegister+0x44>
80003cb0:	e3 cd 80 80 	ldm	sp++,r7,pc
80003cb4:	80 00       	ld.sh	r0,r0[0x0]
80003cb6:	2d 02       	sub	r2,-48
80003cb8:	80 00       	ld.sh	r0,r0[0x0]
80003cba:	2e 32       	sub	r2,-29
80003cbc:	80 00       	ld.sh	r0,r0[0x0]
80003cbe:	2d 4e       	sub	lr,-44

80003cc0 <_writeRAM>:
80003cc0:	eb cd 40 80 	pushm	r7,lr
80003cc4:	18 97       	mov	r7,r12
80003cc6:	30 0b       	mov	r11,0
80003cc8:	fe 7c 24 00 	mov	r12,-56320
80003ccc:	f0 1f 00 0d 	mcall	80003d00 <_writeRAM+0x40>
80003cd0:	37 2b       	mov	r11,114
80003cd2:	fe 7c 24 00 	mov	r12,-56320
80003cd6:	f0 1f 00 0c 	mcall	80003d04 <_writeRAM+0x44>
80003cda:	f7 d7 c1 08 	bfextu	r11,r7,0x8,0x8
80003cde:	fe 7c 24 00 	mov	r12,-56320
80003ce2:	f0 1f 00 09 	mcall	80003d04 <_writeRAM+0x44>
80003ce6:	0e 9b       	mov	r11,r7
80003ce8:	5c 5b       	castu.b	r11
80003cea:	fe 7c 24 00 	mov	r12,-56320
80003cee:	f0 1f 00 06 	mcall	80003d04 <_writeRAM+0x44>
80003cf2:	30 0b       	mov	r11,0
80003cf4:	fe 7c 24 00 	mov	r12,-56320
80003cf8:	f0 1f 00 04 	mcall	80003d08 <_writeRAM+0x48>
80003cfc:	e3 cd 80 80 	ldm	sp++,r7,pc
80003d00:	80 00       	ld.sh	r0,r0[0x0]
80003d02:	2d 02       	sub	r2,-48
80003d04:	80 00       	ld.sh	r0,r0[0x0]
80003d06:	2e 32       	sub	r2,-29
80003d08:	80 00       	ld.sh	r0,r0[0x0]
80003d0a:	2d 4e       	sub	lr,-44

80003d0c <screen_SetPixels>:
80003d0c:	eb cd 40 d0 	pushm	r4,r6-r7,lr
80003d10:	20 3d       	sub	sp,12
80003d12:	fa c4 ff e4 	sub	r4,sp,-28
80003d16:	e0 6a 00 f0 	mov	r10,240
80003d1a:	e0 6b 01 40 	mov	r11,320
80003d1e:	08 9c       	mov	r12,r4
80003d20:	f0 1f 00 1b 	mcall	80003d8c <screen_SetPixels+0x80>
80003d24:	e8 e8 00 00 	ld.d	r8,r4[0]
80003d28:	bb 29       	st.d	--sp,r8
80003d2a:	f0 1f 00 1a 	mcall	80003d90 <screen_SetPixels+0x84>
80003d2e:	68 08       	ld.w	r8,r4[0x0]
80003d30:	1a d8       	st.w	--sp,r8
80003d32:	f0 1f 00 19 	mcall	80003d94 <screen_SetPixels+0x88>
80003d36:	32 2c       	mov	r12,34
80003d38:	f0 1f 00 18 	mcall	80003d98 <screen_SetPixels+0x8c>
80003d3c:	e8 e8 00 00 	ld.d	r8,r4[0]
80003d40:	bb 29       	st.d	--sp,r8
80003d42:	f0 1f 00 17 	mcall	80003d9c <screen_SetPixels+0x90>
80003d46:	50 5c       	stdsp	sp[0x14],r12
80003d48:	40 57       	lddsp	r7,sp[0x14]
80003d4a:	2f bd       	sub	sp,-20
80003d4c:	58 07       	cp.w	r7,0
80003d4e:	c0 70       	breq	80003d5c <screen_SetPixels+0x50>
80003d50:	88 c6       	ld.uh	r6,r4[0x8]
80003d52:	0c 9c       	mov	r12,r6
80003d54:	f0 1f 00 13 	mcall	80003da0 <screen_SetPixels+0x94>
80003d58:	20 17       	sub	r7,1
80003d5a:	cf c1       	brne	80003d52 <screen_SetPixels+0x46>
80003d5c:	30 0b       	mov	r11,0
80003d5e:	fe 7c 24 00 	mov	r12,-56320
80003d62:	f0 1f 00 11 	mcall	80003da4 <screen_SetPixels+0x98>
80003d66:	e0 68 00 f0 	mov	r8,240
80003d6a:	e0 69 01 40 	mov	r9,320
80003d6e:	30 0a       	mov	r10,0
80003d70:	14 9b       	mov	r11,r10
80003d72:	fa cc ff fc 	sub	r12,sp,-4
80003d76:	f0 1f 00 0d 	mcall	80003da8 <screen_SetPixels+0x9c>
80003d7a:	fa e8 00 04 	ld.d	r8,sp[4]
80003d7e:	bb 29       	st.d	--sp,r8
80003d80:	f0 1f 00 04 	mcall	80003d90 <screen_SetPixels+0x84>
80003d84:	2f ed       	sub	sp,-8
80003d86:	2f dd       	sub	sp,-12
80003d88:	e3 cd 80 d0 	ldm	sp++,r4,r6-r7,pc
80003d8c:	80 00       	ld.sh	r0,r0[0x0]
80003d8e:	3b 6e       	mov	lr,-74
80003d90:	80 00       	ld.sh	r0,r0[0x0]
80003d92:	3c 48       	mov	r8,-60
80003d94:	80 00       	ld.sh	r0,r0[0x0]
80003d96:	3c 28       	mov	r8,-62
80003d98:	80 00       	ld.sh	r0,r0[0x0]
80003d9a:	3c 78       	mov	r8,-57
80003d9c:	80 00       	ld.sh	r0,r0[0x0]
80003d9e:	3b 44       	mov	r4,-76
80003da0:	80 00       	ld.sh	r0,r0[0x0]
80003da2:	3c c0       	mov	r0,-52
80003da4:	80 00       	ld.sh	r0,r0[0x0]
80003da6:	2d 4e       	sub	lr,-44
80003da8:	80 00       	ld.sh	r0,r0[0x0]
80003daa:	3b 98       	mov	r8,-71

80003dac <screen_SetPixel>:
80003dac:	eb cd 40 10 	pushm	r4,lr
80003db0:	fa c4 ff f8 	sub	r4,sp,-8
80003db4:	68 08       	ld.w	r8,r4[0x0]
80003db6:	1a d8       	st.w	--sp,r8
80003db8:	f0 1f 00 08 	mcall	80003dd8 <screen_SetPixel+0x2c>
80003dbc:	32 2c       	mov	r12,34
80003dbe:	f0 1f 00 08 	mcall	80003ddc <screen_SetPixel+0x30>
80003dc2:	88 ac       	ld.uh	r12,r4[0x4]
80003dc4:	f0 1f 00 07 	mcall	80003de0 <screen_SetPixel+0x34>
80003dc8:	30 0b       	mov	r11,0
80003dca:	fe 7c 24 00 	mov	r12,-56320
80003dce:	f0 1f 00 06 	mcall	80003de4 <screen_SetPixel+0x38>
80003dd2:	2f fd       	sub	sp,-4
80003dd4:	e3 cd 80 10 	ldm	sp++,r4,pc
80003dd8:	80 00       	ld.sh	r0,r0[0x0]
80003dda:	3c 28       	mov	r8,-62
80003ddc:	80 00       	ld.sh	r0,r0[0x0]
80003dde:	3c 78       	mov	r8,-57
80003de0:	80 00       	ld.sh	r0,r0[0x0]
80003de2:	3c c0       	mov	r0,-52
80003de4:	80 00       	ld.sh	r0,r0[0x0]
80003de6:	2d 4e       	sub	lr,-44

80003de8 <screen_Init>:
80003de8:	eb cd 40 80 	pushm	r7,lr
80003dec:	21 8d       	sub	sp,96
80003dee:	fe f8 03 a2 	ld.w	r8,pc[930]
80003df2:	fa cc ff c0 	sub	r12,sp,-64
80003df6:	f0 ea 00 00 	ld.d	r10,r8[0]
80003dfa:	f8 eb 00 00 	st.d	r12[0],r10
80003dfe:	f0 ea 00 08 	ld.d	r10,r8[8]
80003e02:	f8 eb 00 08 	st.d	r12[8],r10
80003e06:	f0 ea 00 10 	ld.d	r10,r8[16]
80003e0a:	f8 eb 00 10 	st.d	r12[16],r10
80003e0e:	f0 e8 00 18 	ld.d	r8,r8[24]
80003e12:	f8 e9 00 18 	st.d	r12[24],r8
80003e16:	fe f8 03 7e 	ld.w	r8,pc[894]
80003e1a:	fa c7 ff d0 	sub	r7,sp,-48
80003e1e:	f0 ea 00 00 	ld.d	r10,r8[0]
80003e22:	ee eb 00 00 	st.d	r7[0],r10
80003e26:	f0 e8 00 08 	ld.d	r8,r8[8]
80003e2a:	ee e9 00 08 	st.d	r7[8],r8
80003e2e:	30 4b       	mov	r11,4
80003e30:	f0 1f 00 da 	mcall	80004198 <screen_Init+0x3b0>
80003e34:	0e 9b       	mov	r11,r7
80003e36:	fe 7c 24 00 	mov	r12,-56320
80003e3a:	f0 1f 00 d9 	mcall	8000419c <screen_Init+0x3b4>
80003e3e:	fe 7c 24 00 	mov	r12,-56320
80003e42:	f0 1f 00 d8 	mcall	800041a0 <screen_Init+0x3b8>
80003e46:	e0 6a 90 00 	mov	r10,36864
80003e4a:	ea 1a 03 d0 	orh	r10,0x3d0
80003e4e:	0e 9b       	mov	r11,r7
80003e50:	fe 7c 24 00 	mov	r12,-56320
80003e54:	f0 1f 00 d4 	mcall	800041a4 <screen_Init+0x3bc>
80003e58:	30 ec       	mov	r12,14
80003e5a:	f0 1f 00 d4 	mcall	800041a8 <screen_Init+0x3c0>
80003e5e:	e1 b8 00 42 	mfsr	r8,0x108
80003e62:	e0 6a a8 00 	mov	r10,43008
80003e66:	ea 1a 00 61 	orh	r10,0x61
80003e6a:	f0 0a 00 0a 	add	r10,r8,r10
80003e6e:	e1 b9 00 42 	mfsr	r9,0x108
80003e72:	14 38       	cp.w	r8,r10
80003e74:	e0 88 00 08 	brls	80003e84 <screen_Init+0x9c>
80003e78:	12 38       	cp.w	r8,r9
80003e7a:	fe 98 ff fa 	brls	80003e6e <screen_Init+0x86>
80003e7e:	12 3a       	cp.w	r10,r9
80003e80:	c4 e3       	brcs	80003f1c <screen_Init+0x134>
80003e82:	cf 6b       	rjmp	80003e6e <screen_Init+0x86>
80003e84:	12 38       	cp.w	r8,r9
80003e86:	e0 8b 00 4b 	brhi	80003f1c <screen_Init+0x134>
80003e8a:	12 3a       	cp.w	r10,r9
80003e8c:	c4 83       	brcs	80003f1c <screen_Init+0x134>
80003e8e:	cf 0b       	rjmp	80003e6e <screen_Init+0x86>
80003e90:	e1 b9 00 42 	mfsr	r9,0x108
80003e94:	14 38       	cp.w	r8,r10
80003e96:	e0 88 00 08 	brls	80003ea6 <screen_Init+0xbe>
80003e9a:	12 38       	cp.w	r8,r9
80003e9c:	fe 98 ff fa 	brls	80003e90 <screen_Init+0xa8>
80003ea0:	12 3a       	cp.w	r10,r9
80003ea2:	c4 73       	brcs	80003f30 <screen_Init+0x148>
80003ea4:	cf 6b       	rjmp	80003e90 <screen_Init+0xa8>
80003ea6:	12 38       	cp.w	r8,r9
80003ea8:	e0 8b 00 44 	brhi	80003f30 <screen_Init+0x148>
80003eac:	12 3a       	cp.w	r10,r9
80003eae:	c4 13       	brcs	80003f30 <screen_Init+0x148>
80003eb0:	cf 0b       	rjmp	80003e90 <screen_Init+0xa8>
80003eb2:	e1 b9 00 42 	mfsr	r9,0x108
80003eb6:	14 38       	cp.w	r8,r10
80003eb8:	e0 88 00 08 	brls	80003ec8 <screen_Init+0xe0>
80003ebc:	12 38       	cp.w	r8,r9
80003ebe:	fe 98 ff fa 	brls	80003eb2 <screen_Init+0xca>
80003ec2:	12 3a       	cp.w	r10,r9
80003ec4:	c4 73       	brcs	80003f52 <screen_Init+0x16a>
80003ec6:	cf 6b       	rjmp	80003eb2 <screen_Init+0xca>
80003ec8:	12 38       	cp.w	r8,r9
80003eca:	e0 8b 00 44 	brhi	80003f52 <screen_Init+0x16a>
80003ece:	12 3a       	cp.w	r10,r9
80003ed0:	c4 13       	brcs	80003f52 <screen_Init+0x16a>
80003ed2:	cf 0b       	rjmp	80003eb2 <screen_Init+0xca>
80003ed4:	e1 b9 00 42 	mfsr	r9,0x108
80003ed8:	14 38       	cp.w	r8,r10
80003eda:	e0 88 00 08 	brls	80003eea <screen_Init+0x102>
80003ede:	12 38       	cp.w	r8,r9
80003ee0:	fe 98 ff fa 	brls	80003ed4 <screen_Init+0xec>
80003ee4:	12 3a       	cp.w	r10,r9
80003ee6:	c5 43       	brcs	80003f8e <screen_Init+0x1a6>
80003ee8:	cf 6b       	rjmp	80003ed4 <screen_Init+0xec>
80003eea:	12 38       	cp.w	r8,r9
80003eec:	e0 8b 00 51 	brhi	80003f8e <screen_Init+0x1a6>
80003ef0:	12 3a       	cp.w	r10,r9
80003ef2:	c4 e3       	brcs	80003f8e <screen_Init+0x1a6>
80003ef4:	cf 0b       	rjmp	80003ed4 <screen_Init+0xec>
80003ef6:	e1 b9 00 42 	mfsr	r9,0x108
80003efa:	14 38       	cp.w	r8,r10
80003efc:	e0 88 00 09 	brls	80003f0e <screen_Init+0x126>
80003f00:	12 38       	cp.w	r8,r9
80003f02:	fe 98 ff fa 	brls	80003ef6 <screen_Init+0x10e>
80003f06:	12 3a       	cp.w	r10,r9
80003f08:	e0 83 00 a0 	brlo	80004048 <screen_Init+0x260>
80003f0c:	cf 5b       	rjmp	80003ef6 <screen_Init+0x10e>
80003f0e:	12 38       	cp.w	r8,r9
80003f10:	e0 8b 00 9c 	brhi	80004048 <screen_Init+0x260>
80003f14:	12 3a       	cp.w	r10,r9
80003f16:	e0 83 00 99 	brlo	80004048 <screen_Init+0x260>
80003f1a:	ce eb       	rjmp	80003ef6 <screen_Init+0x10e>
80003f1c:	30 ec       	mov	r12,14
80003f1e:	f0 1f 00 a4 	mcall	800041ac <screen_Init+0x3c4>
80003f22:	e1 b8 00 42 	mfsr	r8,0x108
80003f26:	e4 69 e2 00 	mov	r9,320000
80003f2a:	f0 09 00 0a 	add	r10,r8,r9
80003f2e:	cb 1b       	rjmp	80003e90 <screen_Init+0xa8>
80003f30:	30 0b       	mov	r11,0
80003f32:	16 9c       	mov	r12,r11
80003f34:	f0 1f 00 9f 	mcall	800041b0 <screen_Init+0x3c8>
80003f38:	30 0b       	mov	r11,0
80003f3a:	16 9c       	mov	r12,r11
80003f3c:	f0 1f 00 9d 	mcall	800041b0 <screen_Init+0x3c8>
80003f40:	e1 b8 00 42 	mfsr	r8,0x108
80003f44:	e0 6a a8 00 	mov	r10,43008
80003f48:	ea 1a 00 61 	orh	r10,0x61
80003f4c:	f0 0a 00 0a 	add	r10,r8,r10
80003f50:	cb 1b       	rjmp	80003eb2 <screen_Init+0xca>
80003f52:	30 0b       	mov	r11,0
80003f54:	16 9c       	mov	r12,r11
80003f56:	f0 1f 00 97 	mcall	800041b0 <screen_Init+0x3c8>
80003f5a:	30 0b       	mov	r11,0
80003f5c:	16 9c       	mov	r12,r11
80003f5e:	f0 1f 00 95 	mcall	800041b0 <screen_Init+0x3c8>
80003f62:	30 0b       	mov	r11,0
80003f64:	16 9c       	mov	r12,r11
80003f66:	f0 1f 00 93 	mcall	800041b0 <screen_Init+0x3c8>
80003f6a:	30 0b       	mov	r11,0
80003f6c:	16 9c       	mov	r12,r11
80003f6e:	f0 1f 00 91 	mcall	800041b0 <screen_Init+0x3c8>
80003f72:	30 1b       	mov	r11,1
80003f74:	e0 6c 00 a4 	mov	r12,164
80003f78:	f0 1f 00 8e 	mcall	800041b0 <screen_Init+0x3c8>
80003f7c:	e1 b8 00 42 	mfsr	r8,0x108
80003f80:	e0 6a a8 00 	mov	r10,43008
80003f84:	ea 1a 00 61 	orh	r10,0x61
80003f88:	f0 0a 00 0a 	add	r10,r8,r10
80003f8c:	ca 4b       	rjmp	80003ed4 <screen_Init+0xec>
80003f8e:	e0 6b a7 00 	mov	r11,42752
80003f92:	36 0c       	mov	r12,96
80003f94:	f0 1f 00 87 	mcall	800041b0 <screen_Init+0x3c8>
80003f98:	e0 6b 08 08 	mov	r11,2056
80003f9c:	30 8c       	mov	r12,8
80003f9e:	f0 1f 00 85 	mcall	800041b0 <screen_Init+0x3c8>
80003fa2:	e0 6b 02 03 	mov	r11,515
80003fa6:	33 0c       	mov	r12,48
80003fa8:	f0 1f 00 82 	mcall	800041b0 <screen_Init+0x3c8>
80003fac:	e0 6b 08 0f 	mov	r11,2063
80003fb0:	33 1c       	mov	r12,49
80003fb2:	f0 1f 00 80 	mcall	800041b0 <screen_Init+0x3c8>
80003fb6:	e0 6b 04 01 	mov	r11,1025
80003fba:	33 2c       	mov	r12,50
80003fbc:	f0 1f 00 7d 	mcall	800041b0 <screen_Init+0x3c8>
80003fc0:	e0 6b 05 0b 	mov	r11,1291
80003fc4:	33 3c       	mov	r12,51
80003fc6:	f0 1f 00 7b 	mcall	800041b0 <screen_Init+0x3c8>
80003fca:	e0 6b 33 30 	mov	r11,13104
80003fce:	33 4c       	mov	r12,52
80003fd0:	f0 1f 00 78 	mcall	800041b0 <screen_Init+0x3c8>
80003fd4:	e0 6b 0b 05 	mov	r11,2821
80003fd8:	33 5c       	mov	r12,53
80003fda:	f0 1f 00 76 	mcall	800041b0 <screen_Init+0x3c8>
80003fde:	30 5b       	mov	r11,5
80003fe0:	33 6c       	mov	r12,54
80003fe2:	f0 1f 00 74 	mcall	800041b0 <screen_Init+0x3c8>
80003fe6:	e0 6b 0f 08 	mov	r11,3848
80003fea:	33 7c       	mov	r12,55
80003fec:	f0 1f 00 71 	mcall	800041b0 <screen_Init+0x3c8>
80003ff0:	e0 6b 03 02 	mov	r11,770
80003ff4:	33 8c       	mov	r12,56
80003ff6:	f0 1f 00 6f 	mcall	800041b0 <screen_Init+0x3c8>
80003ffa:	e0 6b 30 33 	mov	r11,12339
80003ffe:	33 9c       	mov	r12,57
80004000:	f0 1f 00 6c 	mcall	800041b0 <screen_Init+0x3c8>
80004004:	31 8b       	mov	r11,24
80004006:	e0 6c 00 90 	mov	r12,144
8000400a:	f0 1f 00 6a 	mcall	800041b0 <screen_Init+0x3c8>
8000400e:	e0 6b 05 30 	mov	r11,1328
80004012:	31 0c       	mov	r12,16
80004014:	f0 1f 00 67 	mcall	800041b0 <screen_Init+0x3c8>
80004018:	e0 6b 02 37 	mov	r11,567
8000401c:	31 1c       	mov	r12,17
8000401e:	f0 1f 00 65 	mcall	800041b0 <screen_Init+0x3c8>
80004022:	e0 6b 01 bf 	mov	r11,447
80004026:	31 2c       	mov	r12,18
80004028:	f0 1f 00 62 	mcall	800041b0 <screen_Init+0x3c8>
8000402c:	e0 6b 10 00 	mov	r11,4096
80004030:	31 3c       	mov	r12,19
80004032:	f0 1f 00 60 	mcall	800041b0 <screen_Init+0x3c8>
80004036:	e1 b8 00 42 	mfsr	r8,0x108
8000403a:	e0 6a 50 00 	mov	r10,20480
8000403e:	ea 1a 00 c3 	orh	r10,0xc3
80004042:	f0 0a 00 0a 	add	r10,r8,r10
80004046:	c5 8b       	rjmp	80003ef6 <screen_Init+0x10e>
80004048:	e0 6b 01 00 	mov	r11,256
8000404c:	30 1c       	mov	r12,1
8000404e:	f0 1f 00 59 	mcall	800041b0 <screen_Init+0x3c8>
80004052:	e0 6b 02 00 	mov	r11,512
80004056:	30 2c       	mov	r12,2
80004058:	f0 1f 00 56 	mcall	800041b0 <screen_Init+0x3c8>
8000405c:	33 0b       	mov	r11,48
8000405e:	30 3c       	mov	r12,3
80004060:	f0 1f 00 54 	mcall	800041b0 <screen_Init+0x3c8>
80004064:	30 1b       	mov	r11,1
80004066:	30 9c       	mov	r12,9
80004068:	f0 1f 00 52 	mcall	800041b0 <screen_Init+0x3c8>
8000406c:	30 8b       	mov	r11,8
8000406e:	30 ac       	mov	r12,10
80004070:	f0 1f 00 50 	mcall	800041b0 <screen_Init+0x3c8>
80004074:	30 0b       	mov	r11,0
80004076:	30 cc       	mov	r12,12
80004078:	f0 1f 00 4e 	mcall	800041b0 <screen_Init+0x3c8>
8000407c:	e0 6b d0 00 	mov	r11,53248
80004080:	30 dc       	mov	r12,13
80004082:	f0 1f 00 4c 	mcall	800041b0 <screen_Init+0x3c8>
80004086:	33 0b       	mov	r11,48
80004088:	30 ec       	mov	r12,14
8000408a:	f0 1f 00 4a 	mcall	800041b0 <screen_Init+0x3c8>
8000408e:	30 0b       	mov	r11,0
80004090:	30 fc       	mov	r12,15
80004092:	f0 1f 00 48 	mcall	800041b0 <screen_Init+0x3c8>
80004096:	30 0b       	mov	r11,0
80004098:	32 0c       	mov	r12,32
8000409a:	f0 1f 00 46 	mcall	800041b0 <screen_Init+0x3c8>
8000409e:	30 0b       	mov	r11,0
800040a0:	32 1c       	mov	r12,33
800040a2:	f0 1f 00 44 	mcall	800041b0 <screen_Init+0x3c8>
800040a6:	32 eb       	mov	r11,46
800040a8:	32 9c       	mov	r12,41
800040aa:	f0 1f 00 42 	mcall	800041b0 <screen_Init+0x3c8>
800040ae:	30 0b       	mov	r11,0
800040b0:	35 0c       	mov	r12,80
800040b2:	f0 1f 00 40 	mcall	800041b0 <screen_Init+0x3c8>
800040b6:	e0 6b 00 f0 	mov	r11,240
800040ba:	35 1c       	mov	r12,81
800040bc:	f0 1f 00 3d 	mcall	800041b0 <screen_Init+0x3c8>
800040c0:	30 0b       	mov	r11,0
800040c2:	35 2c       	mov	r12,82
800040c4:	f0 1f 00 3b 	mcall	800041b0 <screen_Init+0x3c8>
800040c8:	e0 6b 01 40 	mov	r11,320
800040cc:	35 2c       	mov	r12,82
800040ce:	f0 1f 00 39 	mcall	800041b0 <screen_Init+0x3c8>
800040d2:	30 1b       	mov	r11,1
800040d4:	36 1c       	mov	r12,97
800040d6:	f0 1f 00 37 	mcall	800041b0 <screen_Init+0x3c8>
800040da:	30 0b       	mov	r11,0
800040dc:	36 ac       	mov	r12,106
800040de:	f0 1f 00 35 	mcall	800041b0 <screen_Init+0x3c8>
800040e2:	30 0b       	mov	r11,0
800040e4:	e0 6c 00 80 	mov	r12,128
800040e8:	f0 1f 00 32 	mcall	800041b0 <screen_Init+0x3c8>
800040ec:	30 0b       	mov	r11,0
800040ee:	e0 6c 00 81 	mov	r12,129
800040f2:	f0 1f 00 30 	mcall	800041b0 <screen_Init+0x3c8>
800040f6:	35 fb       	mov	r11,95
800040f8:	e0 6c 00 82 	mov	r12,130
800040fc:	f0 1f 00 2d 	mcall	800041b0 <screen_Init+0x3c8>
80004100:	e0 6b 07 01 	mov	r11,1793
80004104:	e0 6c 00 93 	mov	r12,147
80004108:	f0 1f 00 2a 	mcall	800041b0 <screen_Init+0x3c8>
8000410c:	e0 6b 01 00 	mov	r11,256
80004110:	30 7c       	mov	r12,7
80004112:	f0 1f 00 28 	mcall	800041b0 <screen_Init+0x3c8>
80004116:	30 08       	mov	r8,0
80004118:	50 88       	stdsp	sp[0x20],r8
8000411a:	50 98       	stdsp	sp[0x24],r8
8000411c:	50 a8       	stdsp	sp[0x28],r8
8000411e:	50 b8       	stdsp	sp[0x2c],r8
80004120:	30 0a       	mov	r10,0
80004122:	30 0b       	mov	r11,0
80004124:	fa eb 00 00 	st.d	sp[0],r10
80004128:	fa c9 ff f8 	sub	r9,sp,-8
8000412c:	f2 eb 00 00 	st.d	r9[0],r10
80004130:	fa c9 ff f0 	sub	r9,sp,-16
80004134:	f2 eb 00 00 	st.d	r9[0],r10
80004138:	fa c9 ff e8 	sub	r9,sp,-24
8000413c:	f2 eb 00 00 	st.d	r9[0],r10
80004140:	30 1b       	mov	r11,1
80004142:	50 1b       	stdsp	sp[0x4],r11
80004144:	31 49       	mov	r9,20
80004146:	50 29       	stdsp	sp[0x8],r9
80004148:	50 48       	stdsp	sp[0x10],r8
8000414a:	40 09       	lddsp	r9,sp[0x0]
8000414c:	f3 d8 d1 01 	bfins	r9,r8,0x8,0x1
80004150:	50 09       	stdsp	sp[0x0],r9
80004152:	40 09       	lddsp	r9,sp[0x0]
80004154:	f3 d8 d1 21 	bfins	r9,r8,0x9,0x1
80004158:	50 09       	stdsp	sp[0x0],r9
8000415a:	40 09       	lddsp	r9,sp[0x0]
8000415c:	f3 d8 d1 41 	bfins	r9,r8,0xa,0x1
80004160:	50 09       	stdsp	sp[0x0],r9
80004162:	40 08       	lddsp	r8,sp[0x0]
80004164:	30 57       	mov	r7,5
80004166:	f1 d7 d0 04 	bfins	r8,r7,0x0,0x4
8000416a:	50 08       	stdsp	sp[0x0],r8
8000416c:	33 cc       	mov	r12,60
8000416e:	f0 1f 00 12 	mcall	800041b4 <screen_Init+0x3cc>
80004172:	fa cc ff e0 	sub	r12,sp,-32
80004176:	f0 1f 00 11 	mcall	800041b8 <screen_Init+0x3d0>
8000417a:	1a 9b       	mov	r11,sp
8000417c:	0e 9c       	mov	r12,r7
8000417e:	f0 1f 00 10 	mcall	800041bc <screen_Init+0x3d4>
80004182:	32 0c       	mov	r12,32
80004184:	f0 1f 00 0f 	mcall	800041c0 <screen_Init+0x3d8>
80004188:	2e 8d       	sub	sp,-96
8000418a:	e3 cd 80 80 	ldm	sp++,r7,pc
8000418e:	00 00       	add	r0,r0
80004190:	80 00       	ld.sh	r0,r0[0x0]
80004192:	82 28       	ld.sh	r8,r1[0x4]
80004194:	80 00       	ld.sh	r0,r0[0x0]
80004196:	82 48       	ld.sh	r8,r1[0x8]
80004198:	80 00       	ld.sh	r0,r0[0x0]
8000419a:	28 a0       	sub	r0,-118
8000419c:	80 00       	ld.sh	r0,r0[0x0]
8000419e:	2c 9e       	sub	lr,-55
800041a0:	80 00       	ld.sh	r0,r0[0x0]
800041a2:	2e 2c       	sub	r12,-30
800041a4:	80 00       	ld.sh	r0,r0[0x0]
800041a6:	2d 74       	sub	r4,-41
800041a8:	80 00       	ld.sh	r0,r0[0x0]
800041aa:	29 02       	sub	r2,-112
800041ac:	80 00       	ld.sh	r0,r0[0x0]
800041ae:	28 e6       	sub	r6,-114
800041b0:	80 00       	ld.sh	r0,r0[0x0]
800041b2:	3b a8       	mov	r8,-70
800041b4:	80 00       	ld.sh	r0,r0[0x0]
800041b6:	28 4e       	sub	lr,-124
800041b8:	80 00       	ld.sh	r0,r0[0x0]
800041ba:	2c 38       	sub	r8,-61
800041bc:	80 00       	ld.sh	r0,r0[0x0]
800041be:	2b f0       	sub	r0,-65
800041c0:	80 00       	ld.sh	r0,r0[0x0]
800041c2:	2c 26       	sub	r6,-62

800041c4 <vector2_Add>:
800041c4:	eb cd 00 10 	pushm	r4
800041c8:	fa c4 ff fc 	sub	r4,sp,-4
800041cc:	09 ea       	ld.ub	r10,r4[0x6]
800041ce:	09 a9       	ld.ub	r9,r4[0x2]
800041d0:	f4 09 00 09 	add	r9,r10,r9
800041d4:	88 2b       	ld.sh	r11,r4[0x4]
800041d6:	88 0a       	ld.sh	r10,r4[0x0]
800041d8:	f6 0a 00 0a 	add	r10,r11,r10
800041dc:	b8 0a       	st.h	r12[0x0],r10
800041de:	b8 a9       	st.b	r12[0x2],r9
800041e0:	e3 cd 00 10 	ldm	sp++,r4
800041e4:	5e fc       	retal	r12
800041e6:	d7 03       	nop

800041e8 <mainCentre>:
#include "SDCard/sdcard.h"
#include "GFX/screen.h"
#include "GFX/gui.h"


void mainCentre(void){
800041e8:	eb cd 40 e0 	pushm	r5-r7,lr
	sysclk_init();
800041ec:	f0 1f 00 0f 	mcall	80004228 <mainCentre+0x40>
	
	irq_initialize_vectors();
800041f0:	f0 1f 00 0f 	mcall	8000422c <mainCentre+0x44>
	cpu_irq_enable();
800041f4:	d5 03       	csrf	0x10
	
	screen_Init();
800041f6:	f0 1f 00 0f 	mcall	80004230 <mainCentre+0x48>
	//gui_loadingScreen();
	
	//cpu_delay_ms(1500,BOARD_OSC0_HZ);
	
	sdcard_Init();
800041fa:	f0 1f 00 0f 	mcall	80004234 <mainCentre+0x4c>
	sdcard_Mount();
800041fe:	f0 1f 00 0f 	mcall	80004238 <mainCentre+0x50>
	gui_Init();
80004202:	f0 1f 00 0f 	mcall	8000423c <mainCentre+0x54>
	
	menus[currentMenuId](true);
80004206:	48 f8       	lddpc	r8,80004240 <mainCentre+0x58>
80004208:	11 89       	ld.ub	r9,r8[0x0]
8000420a:	48 f8       	lddpc	r8,80004244 <mainCentre+0x5c>
8000420c:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80004210:	30 1c       	mov	r12,1
80004212:	5d 18       	icall	r8
	
	while(1){
		menus[currentMenuId](menuChanged);
80004214:	48 c6       	lddpc	r6,80004244 <mainCentre+0x5c>
80004216:	48 b7       	lddpc	r7,80004240 <mainCentre+0x58>
80004218:	48 c5       	lddpc	r5,80004248 <mainCentre+0x60>
8000421a:	0f 88       	ld.ub	r8,r7[0x0]
8000421c:	ec 08 03 28 	ld.w	r8,r6[r8<<0x2]
80004220:	0b 8c       	ld.ub	r12,r5[0x0]
80004222:	5d 18       	icall	r8
80004224:	cf bb       	rjmp	8000421a <mainCentre+0x32>
80004226:	00 00       	add	r0,r0
80004228:	80 00       	ld.sh	r0,r0[0x0]
8000422a:	48 9c       	lddpc	r12,8000424c <sdcard_ReadSector>
8000422c:	80 00       	ld.sh	r0,r0[0x0]
8000422e:	2a 14       	sub	r4,-95
80004230:	80 00       	ld.sh	r0,r0[0x0]
80004232:	3d e8       	mov	r8,-34
80004234:	80 00       	ld.sh	r0,r0[0x0]
80004236:	48 14       	lddpc	r4,80004238 <mainCentre+0x50>
80004238:	80 00       	ld.sh	r0,r0[0x0]
8000423a:	43 7c       	lddsp	r12,sp[0xdc]
8000423c:	80 00       	ld.sh	r0,r0[0x0]
8000423e:	3a d0       	mov	r0,-83
80004240:	00 00       	add	r0,r0
80004242:	01 2b       	ld.uh	r11,r0++
80004244:	00 00       	add	r0,r0
80004246:	00 08       	add	r8,r0
80004248:	00 00       	add	r0,r0
8000424a:	01 28       	ld.uh	r8,r0++

8000424c <sdcard_ReadSector>:
8000424c:	eb cd 40 f8 	pushm	r3-r7,lr
80004250:	20 1d       	sub	sp,4
80004252:	18 94       	mov	r4,r12
80004254:	16 97       	mov	r7,r11
80004256:	f0 1f 00 3f 	mcall	80004350 <sdcard_ReadSector+0x104>
8000425a:	c7 80       	breq	8000434a <sdcard_ReadSector+0xfe>
8000425c:	30 1b       	mov	r11,1
8000425e:	fe 7c 28 00 	mov	r12,-55296
80004262:	f0 1f 00 3d 	mcall	80004354 <sdcard_ReadSector+0x108>
80004266:	4b d8       	lddpc	r8,80004358 <sdcard_ReadSector+0x10c>
80004268:	11 89       	ld.ub	r9,r8[0x0]
8000426a:	30 38       	mov	r8,3
8000426c:	f0 09 18 00 	cp.b	r9,r8
80004270:	c0 61       	brne	8000427c <sdcard_ReadSector+0x30>
80004272:	0e 9b       	mov	r11,r7
80004274:	31 1c       	mov	r12,17
80004276:	f0 1f 00 3a 	mcall	8000435c <sdcard_ReadSector+0x110>
8000427a:	c0 68       	rjmp	80004286 <sdcard_ReadSector+0x3a>
8000427c:	ee 0b 15 09 	lsl	r11,r7,0x9
80004280:	31 1c       	mov	r12,17
80004282:	f0 1f 00 37 	mcall	8000435c <sdcard_ReadSector+0x110>
80004286:	58 0c       	cp.w	r12,0
80004288:	c1 20       	breq	800042ac <sdcard_ReadSector+0x60>
8000428a:	30 1b       	mov	r11,1
8000428c:	fe 7c 28 00 	mov	r12,-55296
80004290:	f0 1f 00 34 	mcall	80004360 <sdcard_ReadSector+0x114>
80004294:	30 0c       	mov	r12,0
80004296:	c5 a8       	rjmp	8000434a <sdcard_ReadSector+0xfe>
80004298:	20 17       	sub	r7,1
8000429a:	5c 87       	casts.h	r7
8000429c:	c0 d1       	brne	800042b6 <sdcard_ReadSector+0x6a>
8000429e:	30 1b       	mov	r11,1
800042a0:	fe 7c 28 00 	mov	r12,-55296
800042a4:	f0 1f 00 2f 	mcall	80004360 <sdcard_ReadSector+0x114>
800042a8:	30 0c       	mov	r12,0
800042aa:	c5 08       	rjmp	8000434a <sdcard_ReadSector+0xfe>
800042ac:	e0 67 75 30 	mov	r7,30000
800042b0:	e0 65 00 ff 	mov	r5,255
800042b4:	3f f6       	mov	r6,-1
800042b6:	0a 9c       	mov	r12,r5
800042b8:	f0 1f 00 2b 	mcall	80004364 <sdcard_ReadSector+0x118>
800042bc:	ec 0c 18 00 	cp.b	r12,r6
800042c0:	ce c0       	breq	80004298 <sdcard_ReadSector+0x4c>
800042c2:	3f e8       	mov	r8,-2
800042c4:	f0 0c 18 00 	cp.b	r12,r8
800042c8:	c0 e0       	breq	800042e4 <sdcard_ReadSector+0x98>
800042ca:	e0 6b 00 ff 	mov	r11,255
800042ce:	fe 7c 28 00 	mov	r12,-55296
800042d2:	f0 1f 00 26 	mcall	80004368 <sdcard_ReadSector+0x11c>
800042d6:	30 1b       	mov	r11,1
800042d8:	fe 7c 28 00 	mov	r12,-55296
800042dc:	f0 1f 00 21 	mcall	80004360 <sdcard_ReadSector+0x114>
800042e0:	30 0c       	mov	r12,0
800042e2:	c3 48       	rjmp	8000434a <sdcard_ReadSector+0xfe>
800042e4:	08 97       	mov	r7,r4
800042e6:	e8 c5 fe 00 	sub	r5,r4,-512
800042ea:	e0 64 00 ff 	mov	r4,255
800042ee:	fe 76 28 00 	mov	r6,-55296
800042f2:	fa c3 ff fe 	sub	r3,sp,-2
800042f6:	08 9b       	mov	r11,r4
800042f8:	0c 9c       	mov	r12,r6
800042fa:	f0 1f 00 1c 	mcall	80004368 <sdcard_ReadSector+0x11c>
800042fe:	06 9b       	mov	r11,r3
80004300:	0c 9c       	mov	r12,r6
80004302:	f0 1f 00 1b 	mcall	8000436c <sdcard_ReadSector+0x120>
80004306:	9a 18       	ld.sh	r8,sp[0x2]
80004308:	0e c8       	st.b	r7++,r8
8000430a:	0a 37       	cp.w	r7,r5
8000430c:	cf 51       	brne	800042f6 <sdcard_ReadSector+0xaa>
8000430e:	e0 6b 00 ff 	mov	r11,255
80004312:	fe 7c 28 00 	mov	r12,-55296
80004316:	f0 1f 00 15 	mcall	80004368 <sdcard_ReadSector+0x11c>
8000431a:	e0 6b 00 ff 	mov	r11,255
8000431e:	fe 7c 28 00 	mov	r12,-55296
80004322:	f0 1f 00 12 	mcall	80004368 <sdcard_ReadSector+0x11c>
80004326:	e0 6b 00 ff 	mov	r11,255
8000432a:	fe 7c 28 00 	mov	r12,-55296
8000432e:	f0 1f 00 0f 	mcall	80004368 <sdcard_ReadSector+0x11c>
80004332:	e0 6b 00 ff 	mov	r11,255
80004336:	fe 7c 28 00 	mov	r12,-55296
8000433a:	f0 1f 00 0c 	mcall	80004368 <sdcard_ReadSector+0x11c>
8000433e:	30 1b       	mov	r11,1
80004340:	fe 7c 28 00 	mov	r12,-55296
80004344:	f0 1f 00 07 	mcall	80004360 <sdcard_ReadSector+0x114>
80004348:	30 1c       	mov	r12,1
8000434a:	2f fd       	sub	sp,-4
8000434c:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80004350:	80 00       	ld.sh	r0,r0[0x0]
80004352:	21 54       	sub	r4,21
80004354:	80 00       	ld.sh	r0,r0[0x0]
80004356:	2d 02       	sub	r2,-48
80004358:	00 00       	add	r0,r0
8000435a:	05 a6       	ld.ub	r6,r2[0x2]
8000435c:	80 00       	ld.sh	r0,r0[0x0]
8000435e:	21 ac       	sub	r12,26
80004360:	80 00       	ld.sh	r0,r0[0x0]
80004362:	2d 4e       	sub	lr,-44
80004364:	80 00       	ld.sh	r0,r0[0x0]
80004366:	21 20       	sub	r0,18
80004368:	80 00       	ld.sh	r0,r0[0x0]
8000436a:	2e 32       	sub	r2,-29
8000436c:	80 00       	ld.sh	r0,r0[0x0]
8000436e:	2e 4e       	sub	lr,-28

80004370 <sdcard_CheckPresence>:
80004370:	d4 01       	pushm	lr
80004372:	f0 1f 00 02 	mcall	80004378 <sdcard_CheckPresence+0x8>
80004376:	d8 02       	popm	pc
80004378:	80 00       	ld.sh	r0,r0[0x0]
8000437a:	22 b4       	sub	r4,43

8000437c <sdcard_Mount>:
8000437c:	d4 31       	pushm	r0-r7,lr
8000437e:	20 3d       	sub	sp,12
80004380:	f0 1f 01 18 	mcall	800047e0 <sdcard_Mount+0x464>
80004384:	e0 80 02 14 	breq	800047ac <sdcard_Mount+0x430>
80004388:	fe f8 04 5c 	ld.w	r8,pc[1116]
8000438c:	20 4d       	sub	sp,16
8000438e:	f0 ea 00 00 	ld.d	r10,r8[0]
80004392:	fa eb 00 00 	st.d	sp[0],r10
80004396:	f0 e8 00 08 	ld.d	r8,r8[8]
8000439a:	fa e9 00 08 	st.d	sp[8],r8
8000439e:	e0 6c 90 00 	mov	r12,36864
800043a2:	ea 1c 03 d0 	orh	r12,0x3d0
800043a6:	f0 1f 01 11 	mcall	800047e8 <sdcard_Mount+0x46c>
800043aa:	2f cd       	sub	sp,-16
800043ac:	58 0c       	cp.w	r12,0
800043ae:	e0 80 01 ff 	breq	800047ac <sdcard_Mount+0x430>
800043b2:	30 09       	mov	r9,0
800043b4:	fe f8 04 38 	ld.w	r8,pc[1080]
800043b8:	b0 89       	st.b	r8[0x0],r9
800043ba:	30 0b       	mov	r11,0
800043bc:	fe fc 04 34 	ld.w	r12,pc[1076]
800043c0:	f0 1f 01 0d 	mcall	800047f4 <sdcard_Mount+0x478>
800043c4:	e0 80 01 f4 	breq	800047ac <sdcard_Mount+0x430>
800043c8:	fe fb 04 28 	ld.w	r11,pc[1064]
800043cc:	f6 c8 fe 42 	sub	r8,r11,-446
800043d0:	fe f9 04 28 	ld.w	r9,pc[1064]
800043d4:	f6 cb fe 32 	sub	r11,r11,-462
800043d8:	11 3a       	ld.ub	r10,r8++
800043da:	12 ca       	st.b	r9++,r10
800043dc:	16 38       	cp.w	r8,r11
800043de:	cf d1       	brne	800043d8 <sdcard_Mount+0x5c>
800043e0:	fe f8 04 18 	ld.w	r8,pc[1048]
800043e4:	f1 39 00 08 	ld.ub	r9,r8[8]
800043e8:	f1 3a 00 09 	ld.ub	r10,r8[9]
800043ec:	a9 6a       	lsl	r10,0x8
800043ee:	12 0a       	add	r10,r9
800043f0:	f1 39 00 0a 	ld.ub	r9,r8[10]
800043f4:	b1 69       	lsl	r9,0x10
800043f6:	12 0a       	add	r10,r9
800043f8:	f1 39 00 0b 	ld.ub	r9,r8[11]
800043fc:	b9 69       	lsl	r9,0x18
800043fe:	12 0a       	add	r10,r9
80004400:	fe f9 03 fc 	ld.w	r9,pc[1020]
80004404:	93 0a       	st.w	r9[0x0],r10
80004406:	11 c9       	ld.ub	r9,r8[0x4]
80004408:	30 b8       	mov	r8,11
8000440a:	f0 09 18 00 	cp.b	r9,r8
8000440e:	c0 51       	brne	80004418 <sdcard_Mount+0x9c>
80004410:	30 19       	mov	r9,1
80004412:	fe f8 03 da 	ld.w	r8,pc[986]
80004416:	b0 89       	st.b	r8[0x0],r9
80004418:	fe f8 03 e4 	ld.w	r8,pc[996]
8000441c:	70 0b       	ld.w	r11,r8[0x0]
8000441e:	fe fc 03 d2 	ld.w	r12,pc[978]
80004422:	f0 1f 00 f5 	mcall	800047f4 <sdcard_Mount+0x478>
80004426:	c0 e0       	breq	80004442 <sdcard_Mount+0xc6>
80004428:	30 08       	mov	r8,0
8000442a:	fe fb 03 d6 	ld.w	r11,pc[982]
8000442e:	fe fa 03 c2 	ld.w	r10,pc[962]
80004432:	f4 08 07 09 	ld.ub	r9,r10[r8]
80004436:	f6 08 0b 09 	st.b	r11[r8],r9
8000443a:	2f f8       	sub	r8,-1
8000443c:	e0 48 00 3d 	cp.w	r8,61
80004440:	cf 91       	brne	80004432 <sdcard_Mount+0xb6>
80004442:	fe f8 03 aa 	ld.w	r8,pc[938]
80004446:	11 88       	ld.ub	r8,r8[0x0]
80004448:	58 08       	cp.w	r8,0
8000444a:	c3 81       	brne	800044ba <sdcard_Mount+0x13e>
8000444c:	fe f8 03 b4 	ld.w	r8,pc[948]
80004450:	f1 3b 00 0c 	ld.ub	r11,r8[12]
80004454:	a9 6b       	lsl	r11,0x8
80004456:	f1 39 00 0b 	ld.ub	r9,r8[11]
8000445a:	12 0b       	add	r11,r9
8000445c:	f1 3a 00 0f 	ld.ub	r10,r8[15]
80004460:	a9 6a       	lsl	r10,0x8
80004462:	f1 39 00 0e 	ld.ub	r9,r8[14]
80004466:	12 0a       	add	r10,r9
80004468:	fe f9 03 94 	ld.w	r9,pc[916]
8000446c:	72 09       	ld.w	r9,r9[0x0]
8000446e:	f4 09 00 09 	add	r9,r10,r9
80004472:	f1 3c 00 17 	ld.ub	r12,r8[23]
80004476:	a9 6c       	lsl	r12,0x8
80004478:	f1 3a 00 16 	ld.ub	r10,r8[22]
8000447c:	14 0c       	add	r12,r10
8000447e:	f1 3a 00 10 	ld.ub	r10,r8[16]
80004482:	f8 0a 02 4a 	mul	r10,r12,r10
80004486:	12 0a       	add	r10,r9
80004488:	f6 c7 00 01 	sub	r7,r11,1
8000448c:	f1 3c 00 12 	ld.ub	r12,r8[18]
80004490:	a9 6c       	lsl	r12,0x8
80004492:	f1 38 00 11 	ld.ub	r8,r8[17]
80004496:	f8 08 00 08 	add	r8,r12,r8
8000449a:	a5 78       	lsl	r8,0x5
8000449c:	10 07       	add	r7,r8
8000449e:	ee 0b 0d 06 	divu	r6,r7,r11
800044a2:	f4 06 00 0b 	add	r11,r10,r6
800044a6:	fe f8 03 5e 	ld.w	r8,pc[862]
800044aa:	91 0a       	st.w	r8[0x0],r10
800044ac:	fe f8 03 5c 	ld.w	r8,pc[860]
800044b0:	91 09       	st.w	r8[0x0],r9
800044b2:	fe f8 03 5a 	ld.w	r8,pc[858]
800044b6:	91 0b       	st.w	r8[0x0],r11
800044b8:	c7 f9       	rjmp	800047b6 <sdcard_Mount+0x43a>
800044ba:	fe f8 03 46 	ld.w	r8,pc[838]
800044be:	f1 3a 00 0f 	ld.ub	r10,r8[15]
800044c2:	a9 6a       	lsl	r10,0x8
800044c4:	f1 39 00 0e 	ld.ub	r9,r8[14]
800044c8:	12 0a       	add	r10,r9
800044ca:	fe f9 03 32 	ld.w	r9,pc[818]
800044ce:	72 09       	ld.w	r9,r9[0x0]
800044d0:	f4 09 00 09 	add	r9,r10,r9
800044d4:	f1 3b 00 25 	ld.ub	r11,r8[37]
800044d8:	a9 6b       	lsl	r11,0x8
800044da:	f1 3a 00 26 	ld.ub	r10,r8[38]
800044de:	b1 6a       	lsl	r10,0x10
800044e0:	14 0b       	add	r11,r10
800044e2:	f1 3a 00 24 	ld.ub	r10,r8[36]
800044e6:	14 0b       	add	r11,r10
800044e8:	f1 3a 00 27 	ld.ub	r10,r8[39]
800044ec:	b9 6a       	lsl	r10,0x18
800044ee:	f6 0a 00 0a 	add	r10,r11,r10
800044f2:	f1 38 00 10 	ld.ub	r8,r8[16]
800044f6:	f4 08 02 48 	mul	r8,r10,r8
800044fa:	12 08       	add	r8,r9
800044fc:	fe fa 03 08 	ld.w	r10,pc[776]
80004500:	95 08       	st.w	r10[0x0],r8
80004502:	fe fa 03 06 	ld.w	r10,pc[774]
80004506:	95 09       	st.w	r10[0x0],r9
80004508:	fe f9 03 04 	ld.w	r9,pc[772]
8000450c:	93 08       	st.w	r9[0x0],r8
8000450e:	c5 49       	rjmp	800047b6 <sdcard_Mount+0x43a>
80004510:	f6 08 00 09 	add	r9,r11,r8
80004514:	2f 99       	sub	r9,-7
80004516:	b2 8e       	st.b	r9[0x0],lr
80004518:	2f f8       	sub	r8,-1
8000451a:	59 98       	cp.w	r8,25
8000451c:	cf a1       	brne	80004510 <sdcard_Mount+0x194>
8000451e:	f8 08 15 05 	lsl	r8,r12,0x5
80004522:	ea 08 00 08 	add	r8,r5,r8
80004526:	f0 c9 ff e1 	sub	r9,r8,-31
8000452a:	b2 87       	st.b	r9[0x0],r7
8000452c:	f0 c9 ff fc 	sub	r9,r8,-4
80004530:	b2 87       	st.b	r9[0x0],r7
80004532:	f8 09 15 05 	lsl	r9,r12,0x5
80004536:	2f e9       	sub	r9,-2
80004538:	ea 09 00 09 	add	r9,r5,r9
8000453c:	b2 97       	st.b	r9[0x1],r7
8000453e:	f0 c9 ff fe 	sub	r9,r8,-2
80004542:	b2 87       	st.b	r9[0x0],r7
80004544:	f0 c9 ff ff 	sub	r9,r8,-1
80004548:	b2 87       	st.b	r9[0x0],r7
8000454a:	f8 09 15 05 	lsl	r9,r12,0x5
8000454e:	2f c9       	sub	r9,-4
80004550:	ea 09 00 09 	add	r9,r5,r9
80004554:	b2 97       	st.b	r9[0x1],r7
80004556:	f0 c9 ff fa 	sub	r9,r8,-6
8000455a:	b2 87       	st.b	r9[0x0],r7
8000455c:	b0 87       	st.b	r8[0x0],r7
8000455e:	2f f6       	sub	r6,-1
80004560:	e0 46 00 64 	cp.w	r6,100
80004564:	c0 80       	breq	80004574 <sdcard_Mount+0x1f8>
80004566:	08 98       	mov	r8,r4
80004568:	0c 9c       	mov	r12,r6
8000456a:	ec 0b 15 05 	lsl	r11,r6,0x5
8000456e:	ea 0b 00 0b 	add	r11,r5,r11
80004572:	cc fb       	rjmp	80004510 <sdcard_Mount+0x194>
80004574:	30 06       	mov	r6,0
80004576:	3f f4       	mov	r4,-1
80004578:	fe f3 02 84 	ld.w	r3,pc[644]
8000457c:	fe f7 02 74 	ld.w	r7,pc[628]
80004580:	30 f0       	mov	r0,15
80004582:	30 02       	mov	r2,0
80004584:	fe f5 02 8c 	ld.w	r5,pc[652]
80004588:	2f f4       	sub	r4,-1
8000458a:	5c 84       	casts.h	r4
8000458c:	e3 d4 c0 04 	bfextu	r1,r4,0x0,0x4
80004590:	c0 a1       	brne	800045a4 <sdcard_Mount+0x228>
80004592:	66 0b       	ld.w	r11,r3[0x0]
80004594:	0e 9c       	mov	r12,r7
80004596:	f0 1f 00 98 	mcall	800047f4 <sdcard_Mount+0x478>
8000459a:	e0 80 01 0b 	breq	800047b0 <sdcard_Mount+0x434>
8000459e:	66 08       	ld.w	r8,r3[0x0]
800045a0:	2f f8       	sub	r8,-1
800045a2:	87 08       	st.w	r3[0x0],r8
800045a4:	e2 0e 15 05 	lsl	lr,r1,0x5
800045a8:	ee 0e 00 08 	add	r8,r7,lr
800045ac:	f1 38 00 0b 	ld.ub	r8,r8[11]
800045b0:	e0 08 18 00 	cp.b	r8,r0
800045b4:	c7 90       	breq	800046a6 <sdcard_Mount+0x32a>
800045b6:	ee 0e 07 09 	ld.ub	r9,r7[lr]
800045ba:	3e 58       	mov	r8,-27
800045bc:	f0 09 18 00 	cp.b	r9,r8
800045c0:	e0 80 00 e6 	breq	8000478c <sdcard_Mount+0x410>
800045c4:	fc cc ff f8 	sub	r12,lr,-8
800045c8:	ee 0c 07 09 	ld.ub	r9,r7[r12]
800045cc:	35 78       	mov	r8,87
800045ce:	f0 09 18 00 	cp.b	r9,r8
800045d2:	e0 81 00 dd 	brne	8000478c <sdcard_Mount+0x410>
800045d6:	fc cb ff f7 	sub	r11,lr,-9
800045da:	ee 0b 07 08 	ld.ub	r8,r7[r11]
800045de:	34 11       	mov	r1,65
800045e0:	e2 08 18 00 	cp.b	r8,r1
800045e4:	e0 81 00 d4 	brne	8000478c <sdcard_Mount+0x410>
800045e8:	fc ca ff f6 	sub	r10,lr,-10
800045ec:	ee 0a 07 09 	ld.ub	r9,r7[r10]
800045f0:	35 68       	mov	r8,86
800045f2:	f0 09 18 00 	cp.b	r9,r8
800045f6:	e0 81 00 cb 	brne	8000478c <sdcard_Mount+0x410>
800045fa:	0c 98       	mov	r8,r6
800045fc:	ec 09 15 05 	lsl	r9,r6,0x5
80004600:	2f c9       	sub	r9,-4
80004602:	ea 09 00 09 	add	r9,r5,r9
80004606:	13 b9       	ld.ub	r9,r9[0x3]
80004608:	58 09       	cp.w	r9,0
8000460a:	c2 41       	brne	80004652 <sdcard_Mount+0x2d6>
8000460c:	ee 0e 00 0e 	add	lr,r7,lr
80004610:	ec 01 15 05 	lsl	r1,r6,0x5
80004614:	ea 01 00 01 	add	r1,r5,r1
80004618:	50 21       	stdsp	sp[0x8],r1
8000461a:	50 06       	stdsp	sp[0x0],r6
8000461c:	1d 38       	ld.ub	r8,lr++
8000461e:	40 21       	lddsp	r1,sp[0x8]
80004620:	12 01       	add	r1,r9
80004622:	2f 91       	sub	r1,-7
80004624:	a2 88       	st.b	r1[0x0],r8
80004626:	2f f9       	sub	r9,-1
80004628:	58 89       	cp.w	r9,8
8000462a:	cf 91       	brne	8000461c <sdcard_Mount+0x2a0>
8000462c:	40 08       	lddsp	r8,sp[0x0]
8000462e:	ee 0c 07 0e 	ld.ub	lr,r7[r12]
80004632:	f0 09 15 05 	lsl	r9,r8,0x5
80004636:	ea 09 00 09 	add	r9,r5,r9
8000463a:	f2 cc ff f1 	sub	r12,r9,-15
8000463e:	b8 8e       	st.b	r12[0x0],lr
80004640:	ee 0b 07 0c 	ld.ub	r12,r7[r11]
80004644:	f2 cb ff f0 	sub	r11,r9,-16
80004648:	b6 8c       	st.b	r11[0x0],r12
8000464a:	ee 0a 07 0a 	ld.ub	r10,r7[r10]
8000464e:	2e f9       	sub	r9,-17
80004650:	b2 8a       	st.b	r9[0x0],r10
80004652:	66 0a       	ld.w	r10,r3[0x0]
80004654:	f9 da c0 08 	bfextu	r12,r10,0x0,0x8
80004658:	f0 09 15 05 	lsl	r9,r8,0x5
8000465c:	ea 09 00 09 	add	r9,r5,r9
80004660:	f2 cb ff fc 	sub	r11,r9,-4
80004664:	b6 8c       	st.b	r11[0x0],r12
80004666:	f9 da c1 08 	bfextu	r12,r10,0x8,0x8
8000466a:	f0 0b 15 05 	lsl	r11,r8,0x5
8000466e:	2f eb       	sub	r11,-2
80004670:	ea 0b 00 0b 	add	r11,r5,r11
80004674:	b6 9c       	st.b	r11[0x1],r12
80004676:	f9 da c2 08 	bfextu	r12,r10,0x10,0x8
8000467a:	f2 cb ff fe 	sub	r11,r9,-2
8000467e:	b6 8c       	st.b	r11[0x0],r12
80004680:	b9 8a       	lsr	r10,0x18
80004682:	f2 cb ff ff 	sub	r11,r9,-1
80004686:	b6 8a       	st.b	r11[0x0],r10
80004688:	08 9a       	mov	r10,r4
8000468a:	a5 78       	lsl	r8,0x5
8000468c:	2f c8       	sub	r8,-4
8000468e:	ea 08 00 08 	add	r8,r5,r8
80004692:	b0 9a       	st.b	r8[0x1],r10
80004694:	f5 d4 c1 08 	bfextu	r10,r4,0x8,0x8
80004698:	f2 c8 ff fa 	sub	r8,r9,-6
8000469c:	b0 8a       	st.b	r8[0x0],r10
8000469e:	b2 86       	st.b	r9[0x0],r6
800046a0:	2f f6       	sub	r6,-1
800046a2:	5c 56       	castu.b	r6
800046a4:	c7 48       	rjmp	8000478c <sdcard_Mount+0x410>
800046a6:	ee 0e 07 08 	ld.ub	r8,r7[lr]
800046aa:	30 11       	mov	r1,1
800046ac:	e2 08 18 00 	cp.b	r8,r1
800046b0:	5f 0a       	sreq	r10
800046b2:	34 19       	mov	r9,65
800046b4:	f2 08 18 00 	cp.b	r8,r9
800046b8:	5f 09       	sreq	r9
800046ba:	f5 e9 10 09 	or	r9,r10,r9
800046be:	e4 09 18 00 	cp.b	r9,r2
800046c2:	c3 a0       	breq	80004736 <sdcard_Mount+0x3ba>
800046c4:	fc ca ff ff 	sub	r10,lr,-1
800046c8:	ee 0a 00 0a 	add	r10,r7,r10
800046cc:	30 08       	mov	r8,0
800046ce:	0c 9b       	mov	r11,r6
800046d0:	ec 09 15 05 	lsl	r9,r6,0x5
800046d4:	ea 09 00 09 	add	r9,r5,r9
800046d8:	50 19       	stdsp	sp[0x4],r9
800046da:	16 99       	mov	r9,r11
800046dc:	15 81       	ld.ub	r1,r10[0x0]
800046de:	40 1c       	lddsp	r12,sp[0x4]
800046e0:	10 0c       	add	r12,r8
800046e2:	2f 9c       	sub	r12,-7
800046e4:	b8 81       	st.b	r12[0x0],r1
800046e6:	2f f8       	sub	r8,-1
800046e8:	2f ea       	sub	r10,-2
800046ea:	58 58       	cp.w	r8,5
800046ec:	cf 71       	brne	800046da <sdcard_Mount+0x35e>
800046ee:	fc ca ff f2 	sub	r10,lr,-14
800046f2:	ee 0a 00 0a 	add	r10,r7,r10
800046f6:	f6 08 09 4b 	lsl	r11,r11,r8
800046fa:	ea 0b 00 0b 	add	r11,r5,r11
800046fe:	15 81       	ld.ub	r1,r10[0x0]
80004700:	f6 08 00 0c 	add	r12,r11,r8
80004704:	2f 9c       	sub	r12,-7
80004706:	b8 81       	st.b	r12[0x0],r1
80004708:	2f ea       	sub	r10,-2
8000470a:	2f f8       	sub	r8,-1
8000470c:	58 c8       	cp.w	r8,12
8000470e:	cf 81       	brne	800046fe <sdcard_Mount+0x382>
80004710:	ee 0e 00 0e 	add	lr,r7,lr
80004714:	fd 3a 00 1c 	ld.ub	r10,lr[28]
80004718:	f2 08 15 05 	lsl	r8,r9,0x5
8000471c:	ea 08 00 08 	add	r8,r5,r8
80004720:	2e e8       	sub	r8,-18
80004722:	b0 8a       	st.b	r8[0x0],r10
80004724:	fd 3a 00 1e 	ld.ub	r10,lr[30]
80004728:	f2 08 15 05 	lsl	r8,r9,0x5
8000472c:	ea 08 00 08 	add	r8,r5,r8
80004730:	2e d8       	sub	r8,-19
80004732:	b0 8a       	st.b	r8[0x0],r10
80004734:	c2 c8       	rjmp	8000478c <sdcard_Mount+0x410>
80004736:	30 21       	mov	r1,2
80004738:	e2 08 18 00 	cp.b	r8,r1
8000473c:	5f 09       	sreq	r9
8000473e:	34 2a       	mov	r10,66
80004740:	f4 08 18 00 	cp.b	r8,r10
80004744:	5f 08       	sreq	r8
80004746:	f3 e8 10 08 	or	r8,r9,r8
8000474a:	e4 08 18 00 	cp.b	r8,r2
8000474e:	c1 f0       	breq	8000478c <sdcard_Mount+0x410>
80004750:	fc c9 ff ff 	sub	r9,lr,-1
80004754:	ee 09 00 09 	add	r9,r7,r9
80004758:	30 d8       	mov	r8,13
8000475a:	0c 9b       	mov	r11,r6
8000475c:	ec 0a 15 05 	lsl	r10,r6,0x5
80004760:	ea 0a 00 0a 	add	r10,r5,r10
80004764:	50 1b       	stdsp	sp[0x4],r11
80004766:	13 81       	ld.ub	r1,r9[0x0]
80004768:	f4 08 00 0c 	add	r12,r10,r8
8000476c:	2f 9c       	sub	r12,-7
8000476e:	b8 81       	st.b	r12[0x0],r1
80004770:	2f e9       	sub	r9,-2
80004772:	2f f8       	sub	r8,-1
80004774:	59 28       	cp.w	r8,18
80004776:	cf 71       	brne	80004764 <sdcard_Mount+0x3e8>
80004778:	c2 98       	rjmp	800047ca <sdcard_Mount+0x44e>
8000477a:	13 8c       	ld.ub	r12,r9[0x0]
8000477c:	f4 08 00 0b 	add	r11,r10,r8
80004780:	2f 9b       	sub	r11,-7
80004782:	b6 8c       	st.b	r11[0x0],r12
80004784:	2f e9       	sub	r9,-2
80004786:	2f f8       	sub	r8,-1
80004788:	59 78       	cp.w	r8,23
8000478a:	cf 81       	brne	8000477a <sdcard_Mount+0x3fe>
8000478c:	e0 68 01 ff 	mov	r8,511
80004790:	f0 04 19 00 	cp.h	r4,r8
80004794:	5f 89       	srls	r9
80004796:	36 38       	mov	r8,99
80004798:	f0 06 18 00 	cp.b	r6,r8
8000479c:	5f 88       	srls	r8
8000479e:	f3 e8 00 08 	and	r8,r9,r8
800047a2:	e4 08 18 00 	cp.b	r8,r2
800047a6:	fe 91 fe f1 	brne	80004588 <sdcard_Mount+0x20c>
800047aa:	c0 38       	rjmp	800047b0 <sdcard_Mount+0x434>
800047ac:	30 0c       	mov	r12,0
800047ae:	c0 28       	rjmp	800047b2 <sdcard_Mount+0x436>
800047b0:	30 1c       	mov	r12,1
800047b2:	2f dd       	sub	sp,-12
800047b4:	d8 32       	popm	r0-r7,pc
800047b6:	49 48       	lddpc	r8,80004804 <sdcard_Mount+0x488>
800047b8:	70 09       	ld.w	r9,r8[0x0]
800047ba:	49 18       	lddpc	r8,800047fc <sdcard_Mount+0x480>
800047bc:	91 09       	st.w	r8[0x0],r9
800047be:	30 06       	mov	r6,0
800047c0:	0c 94       	mov	r4,r6
800047c2:	49 45       	lddpc	r5,80004810 <sdcard_Mount+0x494>
800047c4:	32 0e       	mov	lr,32
800047c6:	30 07       	mov	r7,0
800047c8:	cc fa       	rjmp	80004566 <sdcard_Mount+0x1ea>
800047ca:	fc c9 ff f2 	sub	r9,lr,-14
800047ce:	ee 09 00 09 	add	r9,r7,r9
800047d2:	31 28       	mov	r8,18
800047d4:	40 1a       	lddsp	r10,sp[0x4]
800047d6:	a5 7a       	lsl	r10,0x5
800047d8:	ea 0a 00 0a 	add	r10,r5,r10
800047dc:	cc fb       	rjmp	8000477a <sdcard_Mount+0x3fe>
800047de:	00 00       	add	r0,r0
800047e0:	80 00       	ld.sh	r0,r0[0x0]
800047e2:	43 70       	lddsp	r0,sp[0xdc]
800047e4:	00 00       	add	r0,r0
800047e6:	00 20       	rsub	r0,r0
800047e8:	80 00       	ld.sh	r0,r0[0x0]
800047ea:	28 0c       	sub	r12,-128
800047ec:	00 00       	add	r0,r0
800047ee:	12 60       	and	r0,r9
800047f0:	00 00       	add	r0,r0
800047f2:	01 30       	ld.ub	r0,r0++
800047f4:	80 00       	ld.sh	r0,r0[0x0]
800047f6:	42 4c       	lddsp	r12,sp[0x90]
800047f8:	00 00       	add	r0,r0
800047fa:	03 34       	ld.ub	r4,r1++
800047fc:	00 00       	add	r0,r0
800047fe:	03 8c       	ld.ub	r12,r1[0x0]
80004800:	00 00       	add	r0,r0
80004802:	03 4c       	ld.w	r12,--r1
80004804:	00 00       	add	r0,r0
80004806:	03 44       	ld.w	r4,--r1
80004808:	00 00       	add	r0,r0
8000480a:	01 2c       	ld.uh	r12,r0++
8000480c:	00 00       	add	r0,r0
8000480e:	03 48       	ld.w	r8,--r1
80004810:	00 00       	add	r0,r0
80004812:	05 bc       	ld.ub	r12,r2[0x3]

80004814 <sdcard_Init>:
80004814:	eb cd 40 80 	pushm	r7,lr
80004818:	20 8d       	sub	sp,32
8000481a:	49 a8       	lddpc	r8,80004880 <sdcard_Init+0x6c>
8000481c:	1a 9c       	mov	r12,sp
8000481e:	f0 ea 00 00 	ld.d	r10,r8[0]
80004822:	fa eb 00 00 	st.d	sp[0],r10
80004826:	f0 ea 00 08 	ld.d	r10,r8[8]
8000482a:	fa eb 00 08 	st.d	sp[8],r10
8000482e:	f0 ea 00 10 	ld.d	r10,r8[16]
80004832:	fa eb 00 10 	st.d	sp[16],r10
80004836:	f0 e8 00 18 	ld.d	r8,r8[24]
8000483a:	fa e9 00 18 	st.d	sp[24],r8
8000483e:	30 4b       	mov	r11,4
80004840:	f0 1f 00 11 	mcall	80004884 <sdcard_Init+0x70>
80004844:	49 17       	lddpc	r7,80004888 <sdcard_Init+0x74>
80004846:	0e 9b       	mov	r11,r7
80004848:	fe 7c 28 00 	mov	r12,-55296
8000484c:	f0 1f 00 10 	mcall	8000488c <sdcard_Init+0x78>
80004850:	30 09       	mov	r9,0
80004852:	12 9a       	mov	r10,r9
80004854:	12 9b       	mov	r11,r9
80004856:	fe 7c 28 00 	mov	r12,-55296
8000485a:	f0 1f 00 0e 	mcall	80004890 <sdcard_Init+0x7c>
8000485e:	e0 6a 90 00 	mov	r10,36864
80004862:	ea 1a 03 d0 	orh	r10,0x3d0
80004866:	0e 9b       	mov	r11,r7
80004868:	fe 7c 28 00 	mov	r12,-55296
8000486c:	f0 1f 00 0a 	mcall	80004894 <sdcard_Init+0x80>
80004870:	fe 7c 28 00 	mov	r12,-55296
80004874:	f0 1f 00 09 	mcall	80004898 <sdcard_Init+0x84>
80004878:	2f 8d       	sub	sp,-32
8000487a:	e3 cd 80 80 	ldm	sp++,r7,pc
8000487e:	00 00       	add	r0,r0
80004880:	80 00       	ld.sh	r0,r0[0x0]
80004882:	82 58       	ld.sh	r8,r1[0xa]
80004884:	80 00       	ld.sh	r0,r0[0x0]
80004886:	28 a0       	sub	r0,-118
80004888:	00 00       	add	r0,r0
8000488a:	00 20       	rsub	r0,r0
8000488c:	80 00       	ld.sh	r0,r0[0x0]
8000488e:	2c 9e       	sub	lr,-55
80004890:	80 00       	ld.sh	r0,r0[0x0]
80004892:	2c d6       	sub	r6,-51
80004894:	80 00       	ld.sh	r0,r0[0x0]
80004896:	2d 74       	sub	r4,-41
80004898:	80 00       	ld.sh	r0,r0[0x0]
8000489a:	2e 2c       	sub	r12,-30

8000489c <sysclk_init>:
8000489c:	d4 01       	pushm	lr
8000489e:	30 3a       	mov	r10,3
800048a0:	e0 6b 90 00 	mov	r11,36864
800048a4:	ea 1b 03 d0 	orh	r11,0x3d0
800048a8:	fe 7c 0c 00 	mov	r12,-62464
800048ac:	f0 1f 00 19 	mcall	80004910 <sysclk_init+0x74>
800048b0:	31 08       	mov	r8,16
800048b2:	1a d8       	st.w	--sp,r8
800048b4:	30 08       	mov	r8,0
800048b6:	30 19       	mov	r9,1
800048b8:	30 7a       	mov	r10,7
800048ba:	10 9b       	mov	r11,r8
800048bc:	fe 7c 0c 00 	mov	r12,-62464
800048c0:	f0 1f 00 15 	mcall	80004914 <sysclk_init+0x78>
800048c4:	30 08       	mov	r8,0
800048c6:	30 19       	mov	r9,1
800048c8:	12 9a       	mov	r10,r9
800048ca:	10 9b       	mov	r11,r8
800048cc:	fe 7c 0c 00 	mov	r12,-62464
800048d0:	f0 1f 00 12 	mcall	80004918 <sysclk_init+0x7c>
800048d4:	30 0b       	mov	r11,0
800048d6:	fe 7c 0c 00 	mov	r12,-62464
800048da:	f0 1f 00 11 	mcall	8000491c <sysclk_init+0x80>
800048de:	fe 7c 0c 00 	mov	r12,-62464
800048e2:	f0 1f 00 10 	mcall	80004920 <sysclk_init+0x84>
800048e6:	30 0a       	mov	r10,0
800048e8:	1a da       	st.w	--sp,r10
800048ea:	1a da       	st.w	--sp,r10
800048ec:	14 98       	mov	r8,r10
800048ee:	14 99       	mov	r9,r10
800048f0:	30 1b       	mov	r11,1
800048f2:	fe 7c 0c 00 	mov	r12,-62464
800048f6:	f0 1f 00 0c 	mcall	80004924 <sysclk_init+0x88>
800048fa:	30 1c       	mov	r12,1
800048fc:	f0 1f 00 0b 	mcall	80004928 <sysclk_init+0x8c>
80004900:	30 2b       	mov	r11,2
80004902:	fe 7c 0c 00 	mov	r12,-62464
80004906:	f0 1f 00 0a 	mcall	8000492c <sysclk_init+0x90>
8000490a:	2f dd       	sub	sp,-12
8000490c:	d8 02       	popm	pc
8000490e:	00 00       	add	r0,r0
80004910:	80 00       	ld.sh	r0,r0[0x0]
80004912:	2b c4       	sub	r4,-68
80004914:	80 00       	ld.sh	r0,r0[0x0]
80004916:	2b 66       	sub	r6,-74
80004918:	80 00       	ld.sh	r0,r0[0x0]
8000491a:	2b 88       	sub	r8,-72
8000491c:	80 00       	ld.sh	r0,r0[0x0]
8000491e:	2b a2       	sub	r2,-70
80004920:	80 00       	ld.sh	r0,r0[0x0]
80004922:	2b b0       	sub	r0,-69
80004924:	80 00       	ld.sh	r0,r0[0x0]
80004926:	2b 20       	sub	r0,-78
80004928:	80 00       	ld.sh	r0,r0[0x0]
8000492a:	28 40       	sub	r0,-124
8000492c:	80 00       	ld.sh	r0,r0[0x0]
8000492e:	2b ba       	sub	r10,-69

80004930 <main>:
80004930:	d4 01       	pushm	lr
80004932:	f0 1f 00 02 	mcall	80004938 <main+0x8>
80004936:	d8 0a       	popm	pc,r12=0
80004938:	80 00       	ld.sh	r0,r0[0x0]
8000493a:	41 e8       	lddsp	r8,sp[0x78]

8000493c <memcpy>:
8000493c:	58 8a       	cp.w	r10,8
8000493e:	c2 f5       	brlt	8000499c <memcpy+0x60>
80004940:	f9 eb 10 09 	or	r9,r12,r11
80004944:	e2 19 00 03 	andl	r9,0x3,COH
80004948:	e0 81 00 97 	brne	80004a76 <memcpy+0x13a>
8000494c:	e0 4a 00 20 	cp.w	r10,32
80004950:	c3 b4       	brge	800049c6 <memcpy+0x8a>
80004952:	f4 08 14 02 	asr	r8,r10,0x2
80004956:	f0 09 11 08 	rsub	r9,r8,8
8000495a:	fe 09 00 2f 	add	pc,pc,r9<<0x2
8000495e:	76 69       	ld.w	r9,r11[0x18]
80004960:	99 69       	st.w	r12[0x18],r9
80004962:	76 59       	ld.w	r9,r11[0x14]
80004964:	99 59       	st.w	r12[0x14],r9
80004966:	76 49       	ld.w	r9,r11[0x10]
80004968:	99 49       	st.w	r12[0x10],r9
8000496a:	76 39       	ld.w	r9,r11[0xc]
8000496c:	99 39       	st.w	r12[0xc],r9
8000496e:	76 29       	ld.w	r9,r11[0x8]
80004970:	99 29       	st.w	r12[0x8],r9
80004972:	76 19       	ld.w	r9,r11[0x4]
80004974:	99 19       	st.w	r12[0x4],r9
80004976:	76 09       	ld.w	r9,r11[0x0]
80004978:	99 09       	st.w	r12[0x0],r9
8000497a:	f6 08 00 2b 	add	r11,r11,r8<<0x2
8000497e:	f8 08 00 28 	add	r8,r12,r8<<0x2
80004982:	e0 1a 00 03 	andl	r10,0x3
80004986:	f4 0a 11 04 	rsub	r10,r10,4
8000498a:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000498e:	17 a9       	ld.ub	r9,r11[0x2]
80004990:	b0 a9       	st.b	r8[0x2],r9
80004992:	17 99       	ld.ub	r9,r11[0x1]
80004994:	b0 99       	st.b	r8[0x1],r9
80004996:	17 89       	ld.ub	r9,r11[0x0]
80004998:	b0 89       	st.b	r8[0x0],r9
8000499a:	5e fc       	retal	r12
8000499c:	f4 0a 11 09 	rsub	r10,r10,9
800049a0:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
800049a4:	17 f9       	ld.ub	r9,r11[0x7]
800049a6:	b8 f9       	st.b	r12[0x7],r9
800049a8:	17 e9       	ld.ub	r9,r11[0x6]
800049aa:	b8 e9       	st.b	r12[0x6],r9
800049ac:	17 d9       	ld.ub	r9,r11[0x5]
800049ae:	b8 d9       	st.b	r12[0x5],r9
800049b0:	17 c9       	ld.ub	r9,r11[0x4]
800049b2:	b8 c9       	st.b	r12[0x4],r9
800049b4:	17 b9       	ld.ub	r9,r11[0x3]
800049b6:	b8 b9       	st.b	r12[0x3],r9
800049b8:	17 a9       	ld.ub	r9,r11[0x2]
800049ba:	b8 a9       	st.b	r12[0x2],r9
800049bc:	17 99       	ld.ub	r9,r11[0x1]
800049be:	b8 99       	st.b	r12[0x1],r9
800049c0:	17 89       	ld.ub	r9,r11[0x0]
800049c2:	b8 89       	st.b	r12[0x0],r9
800049c4:	5e fc       	retal	r12
800049c6:	eb cd 40 c0 	pushm	r6-r7,lr
800049ca:	18 99       	mov	r9,r12
800049cc:	22 0a       	sub	r10,32
800049ce:	b7 07       	ld.d	r6,r11++
800049d0:	b3 26       	st.d	r9++,r6
800049d2:	b7 07       	ld.d	r6,r11++
800049d4:	b3 26       	st.d	r9++,r6
800049d6:	b7 07       	ld.d	r6,r11++
800049d8:	b3 26       	st.d	r9++,r6
800049da:	b7 07       	ld.d	r6,r11++
800049dc:	b3 26       	st.d	r9++,r6
800049de:	22 0a       	sub	r10,32
800049e0:	cf 74       	brge	800049ce <memcpy+0x92>
800049e2:	2f 0a       	sub	r10,-16
800049e4:	c0 65       	brlt	800049f0 <memcpy+0xb4>
800049e6:	b7 07       	ld.d	r6,r11++
800049e8:	b3 26       	st.d	r9++,r6
800049ea:	b7 07       	ld.d	r6,r11++
800049ec:	b3 26       	st.d	r9++,r6
800049ee:	21 0a       	sub	r10,16
800049f0:	5c 3a       	neg	r10
800049f2:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
800049f6:	d7 03       	nop
800049f8:	d7 03       	nop
800049fa:	f7 36 00 0e 	ld.ub	r6,r11[14]
800049fe:	f3 66 00 0e 	st.b	r9[14],r6
80004a02:	f7 36 00 0d 	ld.ub	r6,r11[13]
80004a06:	f3 66 00 0d 	st.b	r9[13],r6
80004a0a:	f7 36 00 0c 	ld.ub	r6,r11[12]
80004a0e:	f3 66 00 0c 	st.b	r9[12],r6
80004a12:	f7 36 00 0b 	ld.ub	r6,r11[11]
80004a16:	f3 66 00 0b 	st.b	r9[11],r6
80004a1a:	f7 36 00 0a 	ld.ub	r6,r11[10]
80004a1e:	f3 66 00 0a 	st.b	r9[10],r6
80004a22:	f7 36 00 09 	ld.ub	r6,r11[9]
80004a26:	f3 66 00 09 	st.b	r9[9],r6
80004a2a:	f7 36 00 08 	ld.ub	r6,r11[8]
80004a2e:	f3 66 00 08 	st.b	r9[8],r6
80004a32:	f7 36 00 07 	ld.ub	r6,r11[7]
80004a36:	f3 66 00 07 	st.b	r9[7],r6
80004a3a:	f7 36 00 06 	ld.ub	r6,r11[6]
80004a3e:	f3 66 00 06 	st.b	r9[6],r6
80004a42:	f7 36 00 05 	ld.ub	r6,r11[5]
80004a46:	f3 66 00 05 	st.b	r9[5],r6
80004a4a:	f7 36 00 04 	ld.ub	r6,r11[4]
80004a4e:	f3 66 00 04 	st.b	r9[4],r6
80004a52:	f7 36 00 03 	ld.ub	r6,r11[3]
80004a56:	f3 66 00 03 	st.b	r9[3],r6
80004a5a:	f7 36 00 02 	ld.ub	r6,r11[2]
80004a5e:	f3 66 00 02 	st.b	r9[2],r6
80004a62:	f7 36 00 01 	ld.ub	r6,r11[1]
80004a66:	f3 66 00 01 	st.b	r9[1],r6
80004a6a:	f7 36 00 00 	ld.ub	r6,r11[0]
80004a6e:	f3 66 00 00 	st.b	r9[0],r6
80004a72:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80004a76:	20 1a       	sub	r10,1
80004a78:	f6 0a 07 09 	ld.ub	r9,r11[r10]
80004a7c:	f8 0a 0b 09 	st.b	r12[r10],r9
80004a80:	cf b1       	brne	80004a76 <memcpy+0x13a>
80004a82:	5e fc       	retal	r12

Disassembly of section .exception:

80004c00 <_evba>:
80004c00:	c0 08       	rjmp	80004c00 <_evba>
	...

80004c04 <_handle_TLB_Multiple_Hit>:
80004c04:	c0 08       	rjmp	80004c04 <_handle_TLB_Multiple_Hit>
	...

80004c08 <_handle_Bus_Error_Data_Fetch>:
80004c08:	c0 08       	rjmp	80004c08 <_handle_Bus_Error_Data_Fetch>
	...

80004c0c <_handle_Bus_Error_Instruction_Fetch>:
80004c0c:	c0 08       	rjmp	80004c0c <_handle_Bus_Error_Instruction_Fetch>
	...

80004c10 <_handle_NMI>:
80004c10:	c0 08       	rjmp	80004c10 <_handle_NMI>
	...

80004c14 <_handle_Instruction_Address>:
80004c14:	c0 08       	rjmp	80004c14 <_handle_Instruction_Address>
	...

80004c18 <_handle_ITLB_Protection>:
80004c18:	c0 08       	rjmp	80004c18 <_handle_ITLB_Protection>
	...

80004c1c <_handle_Breakpoint>:
80004c1c:	c0 08       	rjmp	80004c1c <_handle_Breakpoint>
	...

80004c20 <_handle_Illegal_Opcode>:
80004c20:	c0 08       	rjmp	80004c20 <_handle_Illegal_Opcode>
	...

80004c24 <_handle_Unimplemented_Instruction>:
80004c24:	c0 08       	rjmp	80004c24 <_handle_Unimplemented_Instruction>
	...

80004c28 <_handle_Privilege_Violation>:
80004c28:	c0 08       	rjmp	80004c28 <_handle_Privilege_Violation>
	...

80004c2c <_handle_Floating_Point>:
80004c2c:	c0 08       	rjmp	80004c2c <_handle_Floating_Point>
	...

80004c30 <_handle_Coprocessor_Absent>:
80004c30:	c0 08       	rjmp	80004c30 <_handle_Coprocessor_Absent>
	...

80004c34 <_handle_Data_Address_Read>:
80004c34:	c0 08       	rjmp	80004c34 <_handle_Data_Address_Read>
	...

80004c38 <_handle_Data_Address_Write>:
80004c38:	c0 08       	rjmp	80004c38 <_handle_Data_Address_Write>
	...

80004c3c <_handle_DTLB_Protection_Read>:
80004c3c:	c0 08       	rjmp	80004c3c <_handle_DTLB_Protection_Read>
	...

80004c40 <_handle_DTLB_Protection_Write>:
80004c40:	c0 08       	rjmp	80004c40 <_handle_DTLB_Protection_Write>
	...

80004c44 <_handle_DTLB_Modified>:
80004c44:	c0 08       	rjmp	80004c44 <_handle_DTLB_Modified>
	...

80004c50 <_handle_ITLB_Miss>:
80004c50:	c0 08       	rjmp	80004c50 <_handle_ITLB_Miss>
	...

80004c60 <_handle_DTLB_Miss_Read>:
80004c60:	c0 08       	rjmp	80004c60 <_handle_DTLB_Miss_Read>
	...

80004c70 <_handle_DTLB_Miss_Write>:
80004c70:	c0 08       	rjmp	80004c70 <_handle_DTLB_Miss_Write>
	...

80004d00 <_handle_Supervisor_Call>:
80004d00:	c0 08       	rjmp	80004d00 <_handle_Supervisor_Call>
80004d02:	d7 03       	nop

80004d04 <_int0>:
80004d04:	30 0c       	mov	r12,0
80004d06:	fe b0 ee b1 	rcall	80002a68 <_get_interrupt_handler>
80004d0a:	58 0c       	cp.w	r12,0
80004d0c:	f8 0f 17 10 	movne	pc,r12
80004d10:	d6 03       	rete

80004d12 <_int1>:
80004d12:	30 1c       	mov	r12,1
80004d14:	fe b0 ee aa 	rcall	80002a68 <_get_interrupt_handler>
80004d18:	58 0c       	cp.w	r12,0
80004d1a:	f8 0f 17 10 	movne	pc,r12
80004d1e:	d6 03       	rete

80004d20 <_int2>:
80004d20:	30 2c       	mov	r12,2
80004d22:	fe b0 ee a3 	rcall	80002a68 <_get_interrupt_handler>
80004d26:	58 0c       	cp.w	r12,0
80004d28:	f8 0f 17 10 	movne	pc,r12
80004d2c:	d6 03       	rete

80004d2e <_int3>:
80004d2e:	30 3c       	mov	r12,3
80004d30:	fe b0 ee 9c 	rcall	80002a68 <_get_interrupt_handler>
80004d34:	58 0c       	cp.w	r12,0
80004d36:	f8 0f 17 10 	movne	pc,r12
80004d3a:	d6 03       	rete
80004d3c:	d7 03       	nop
80004d3e:	d7 03       	nop
80004d40:	d7 03       	nop
80004d42:	d7 03       	nop
80004d44:	d7 03       	nop
80004d46:	d7 03       	nop
80004d48:	d7 03       	nop
80004d4a:	d7 03       	nop
80004d4c:	d7 03       	nop
80004d4e:	d7 03       	nop
80004d50:	d7 03       	nop
80004d52:	d7 03       	nop
80004d54:	d7 03       	nop
80004d56:	d7 03       	nop
80004d58:	d7 03       	nop
80004d5a:	d7 03       	nop
80004d5c:	d7 03       	nop
80004d5e:	d7 03       	nop
80004d60:	d7 03       	nop
80004d62:	d7 03       	nop
80004d64:	d7 03       	nop
80004d66:	d7 03       	nop
80004d68:	d7 03       	nop
80004d6a:	d7 03       	nop
80004d6c:	d7 03       	nop
80004d6e:	d7 03       	nop
80004d70:	d7 03       	nop
80004d72:	d7 03       	nop
80004d74:	d7 03       	nop
80004d76:	d7 03       	nop
80004d78:	d7 03       	nop
80004d7a:	d7 03       	nop
80004d7c:	d7 03       	nop
80004d7e:	d7 03       	nop
80004d80:	d7 03       	nop
80004d82:	d7 03       	nop
80004d84:	d7 03       	nop
80004d86:	d7 03       	nop
80004d88:	d7 03       	nop
80004d8a:	d7 03       	nop
80004d8c:	d7 03       	nop
80004d8e:	d7 03       	nop
80004d90:	d7 03       	nop
80004d92:	d7 03       	nop
80004d94:	d7 03       	nop
80004d96:	d7 03       	nop
80004d98:	d7 03       	nop
80004d9a:	d7 03       	nop
80004d9c:	d7 03       	nop
80004d9e:	d7 03       	nop
80004da0:	d7 03       	nop
80004da2:	d7 03       	nop
80004da4:	d7 03       	nop
80004da6:	d7 03       	nop
80004da8:	d7 03       	nop
80004daa:	d7 03       	nop
80004dac:	d7 03       	nop
80004dae:	d7 03       	nop
80004db0:	d7 03       	nop
80004db2:	d7 03       	nop
80004db4:	d7 03       	nop
80004db6:	d7 03       	nop
80004db8:	d7 03       	nop
80004dba:	d7 03       	nop
80004dbc:	d7 03       	nop
80004dbe:	d7 03       	nop
80004dc0:	d7 03       	nop
80004dc2:	d7 03       	nop
80004dc4:	d7 03       	nop
80004dc6:	d7 03       	nop
80004dc8:	d7 03       	nop
80004dca:	d7 03       	nop
80004dcc:	d7 03       	nop
80004dce:	d7 03       	nop
80004dd0:	d7 03       	nop
80004dd2:	d7 03       	nop
80004dd4:	d7 03       	nop
80004dd6:	d7 03       	nop
80004dd8:	d7 03       	nop
80004dda:	d7 03       	nop
80004ddc:	d7 03       	nop
80004dde:	d7 03       	nop
80004de0:	d7 03       	nop
80004de2:	d7 03       	nop
80004de4:	d7 03       	nop
80004de6:	d7 03       	nop
80004de8:	d7 03       	nop
80004dea:	d7 03       	nop
80004dec:	d7 03       	nop
80004dee:	d7 03       	nop
80004df0:	d7 03       	nop
80004df2:	d7 03       	nop
80004df4:	d7 03       	nop
80004df6:	d7 03       	nop
80004df8:	d7 03       	nop
80004dfa:	d7 03       	nop
80004dfc:	d7 03       	nop
80004dfe:	d7 03       	nop
