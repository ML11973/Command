
Command.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00002004  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00002500  80002004  80002004  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000200  80004600  80004600  00004a00  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       000033b4  80004800  80004800  00004c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dalign       00000004  80007bb4  80007bb4  00007fb4  2**0
                  ALLOC
  6 .data         0000001c  00000004  80007bb8  00008004  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00001230  00000020  80007bd4  00008020  2**2
                  ALLOC
  8 .comment      00000030  00000000  00000000  00008020  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000938  00000000  00000000  00008050  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubnames 0000189e  00000000  00000000  00008988  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   0000b521  00000000  00000000  0000a226  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00001f9d  00000000  00000000  00015747  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00009db1  00000000  00000000  000176e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000019ac  00000000  00000000  00021498  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00002cc7  00000000  00000000  00022e44  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00003b54  00000000  00000000  00025b0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macinfo 00f11c5f  00000000  00000000  0002965f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .stack        00001000  0000f000  0000f000  00000400  2**0
                  ALLOC
 19 .debug_ranges 00000a30  00000000  00000000  00f3b2c0  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_trampoline>:
80000000:	e0 8f 10 00 	bral	80002000 <program_start>
	...

80002000 <program_start>:
80002000:	fe cf f1 90 	sub	pc,pc,-3696

Disassembly of section .text:

80002004 <sd_mmc_spi_get_capacity>:
80002004:	d4 01       	pushm	lr
80002006:	4c 18       	lddpc	r8,80002108 <sd_mmc_spi_get_capacity+0x104>
80002008:	11 db       	ld.ub	r11,r8[0x5]
8000200a:	4c 18       	lddpc	r8,8000210c <sd_mmc_spi_get_capacity+0x108>
8000200c:	11 8a       	ld.ub	r10,r8[0x0]
8000200e:	30 38       	mov	r8,3
80002010:	f0 0a 18 00 	cp.b	r10,r8
80002014:	c2 71       	brne	80002062 <sd_mmc_spi_get_capacity+0x5e>
80002016:	4b d8       	lddpc	r8,80002108 <sd_mmc_spi_get_capacity+0x104>
80002018:	f1 3a 00 08 	ld.ub	r10,r8[8]
8000201c:	f1 39 00 09 	ld.ub	r9,r8[9]
80002020:	f3 ea 10 89 	or	r9,r9,r10<<0x8
80002024:	11 fa       	ld.ub	r10,r8[0x7]
80002026:	f5 da c0 06 	bfextu	r10,r10,0x0,0x6
8000202a:	f3 ea 11 0a 	or	r10,r9,r10<<0x10
8000202e:	2f fa       	sub	r10,-1
80002030:	f4 0b 16 0d 	lsr	r11,r10,0xd
80002034:	16 99       	mov	r9,r11
80002036:	f4 08 15 13 	lsl	r8,r10,0x13
8000203a:	4b 6a       	lddpc	r10,80002110 <sd_mmc_spi_get_capacity+0x10c>
8000203c:	f4 e9 00 00 	st.d	r10[0],r8
80002040:	f7 db c0 09 	bfextu	r11,r11,0x0,0x9
80002044:	4b 48       	lddpc	r8,80002114 <sd_mmc_spi_get_capacity+0x110>
80002046:	b0 0b       	st.h	r8[0x0],r11
80002048:	f4 ea 00 00 	ld.d	r10,r10[0]
8000204c:	90 09       	ld.sh	r9,r8[0x0]
8000204e:	f4 08 16 09 	lsr	r8,r10,0x9
80002052:	f1 eb 11 78 	or	r8,r8,r11<<0x17
80002056:	20 18       	sub	r8,1
80002058:	b7 79       	lsl	r9,0x17
8000205a:	12 08       	add	r8,r9
8000205c:	4a f9       	lddpc	r9,80002118 <sd_mmc_spi_get_capacity+0x114>
8000205e:	93 08       	st.w	r9[0x0],r8
80002060:	c4 28       	rjmp	800020e4 <sd_mmc_spi_get_capacity+0xe0>
80002062:	4a a8       	lddpc	r8,80002108 <sd_mmc_spi_get_capacity+0x104>
80002064:	f1 3c 00 0a 	ld.ub	r12,r8[10]
80002068:	f1 39 00 08 	ld.ub	r9,r8[8]
8000206c:	a7 89       	lsr	r9,0x6
8000206e:	11 fe       	ld.ub	lr,r8[0x7]
80002070:	f2 0e 00 29 	add	r9,r9,lr<<0x2
80002074:	11 ee       	ld.ub	lr,r8[0x6]
80002076:	fd de c0 02 	bfextu	lr,lr,0x0,0x2
8000207a:	ab 6e       	lsl	lr,0xa
8000207c:	1c 09       	add	r9,lr
8000207e:	2f f9       	sub	r9,-1
80002080:	f1 38 00 09 	ld.ub	r8,r8[9]
80002084:	f1 d8 c0 02 	bfextu	r8,r8,0x0,0x2
80002088:	f8 0e 16 07 	lsr	lr,r12,0x7
8000208c:	fc 08 00 18 	add	r8,lr,r8<<0x1
80002090:	2f e8       	sub	r8,-2
80002092:	f2 08 09 49 	lsl	r9,r9,r8
80002096:	20 19       	sub	r9,1
80002098:	4a 08       	lddpc	r8,80002118 <sd_mmc_spi_get_capacity+0x114>
8000209a:	91 09       	st.w	r8[0x0],r9
8000209c:	70 0e       	ld.w	lr,r8[0x0]
8000209e:	f7 db c0 04 	bfextu	r11,r11,0x0,0x4
800020a2:	2f fe       	sub	lr,-1
800020a4:	fc 0b 09 48 	lsl	r8,lr,r11
800020a8:	30 09       	mov	r9,0
800020aa:	49 ae       	lddpc	lr,80002110 <sd_mmc_spi_get_capacity+0x10c>
800020ac:	fc e9 00 00 	st.d	lr[0],r8
800020b0:	49 98       	lddpc	r8,80002114 <sd_mmc_spi_get_capacity+0x110>
800020b2:	b0 09       	st.h	r8[0x0],r9
800020b4:	30 98       	mov	r8,9
800020b6:	f0 0b 18 00 	cp.b	r11,r8
800020ba:	e0 88 00 08 	brls	800020ca <sd_mmc_spi_get_capacity+0xc6>
800020be:	49 78       	lddpc	r8,80002118 <sd_mmc_spi_get_capacity+0x114>
800020c0:	70 09       	ld.w	r9,r8[0x0]
800020c2:	20 9b       	sub	r11,9
800020c4:	f2 0b 09 4b 	lsl	r11,r9,r11
800020c8:	91 0b       	st.w	r8[0x0],r11
800020ca:	58 0a       	cp.w	r10,0
800020cc:	c0 c1       	brne	800020e4 <sd_mmc_spi_get_capacity+0xe0>
800020ce:	f1 dc c0 45 	bfextu	r8,r12,0x2,0x5
800020d2:	f9 dc c0 02 	bfextu	r12,r12,0x0,0x2
800020d6:	48 d9       	lddpc	r9,80002108 <sd_mmc_spi_get_capacity+0x104>
800020d8:	f3 39 00 0b 	ld.ub	r9,r9[11]
800020dc:	a3 7c       	lsl	r12,0x3
800020de:	f9 e9 12 59 	or	r9,r12,r9>>0x5
800020e2:	c0 c8       	rjmp	800020fa <sd_mmc_spi_get_capacity+0xf6>
800020e4:	48 9a       	lddpc	r10,80002108 <sd_mmc_spi_get_capacity+0x104>
800020e6:	f5 39 00 0a 	ld.ub	r9,r10[10]
800020ea:	f3 d9 c0 06 	bfextu	r9,r9,0x0,0x6
800020ee:	f5 38 00 0b 	ld.ub	r8,r10[11]
800020f2:	a7 98       	lsr	r8,0x7
800020f4:	f0 09 00 18 	add	r8,r8,r9<<0x1
800020f8:	30 09       	mov	r9,0
800020fa:	2f f9       	sub	r9,-1
800020fc:	2f f8       	sub	r8,-1
800020fe:	b1 39       	mul	r9,r8
80002100:	48 78       	lddpc	r8,8000211c <sd_mmc_spi_get_capacity+0x118>
80002102:	b0 09       	st.h	r8[0x0],r9
80002104:	d8 02       	popm	pc
80002106:	00 00       	add	r0,r0
80002108:	00 00       	add	r0,r0
8000210a:	05 94       	ld.ub	r4,r2[0x1]
8000210c:	00 00       	add	r0,r0
8000210e:	05 92       	ld.ub	r2,r2[0x1]
80002110:	00 00       	add	r0,r0
80002112:	05 80       	ld.ub	r0,r2[0x0]
80002114:	00 00       	add	r0,r0
80002116:	05 88       	ld.ub	r8,r2[0x0]
80002118:	00 00       	add	r0,r0
8000211a:	05 8c       	ld.ub	r12,r2[0x0]
8000211c:	00 00       	add	r0,r0
8000211e:	05 8a       	ld.ub	r10,r2[0x0]

80002120 <sd_mmc_spi_send_and_read>:
80002120:	d4 01       	pushm	lr
80002122:	20 1d       	sub	sp,4
80002124:	18 9b       	mov	r11,r12
80002126:	fe 7c 28 00 	mov	r12,-55296
8000212a:	f0 1f 00 09 	mcall	8000214c <sd_mmc_spi_send_and_read+0x2c>
8000212e:	fa cb ff fe 	sub	r11,sp,-2
80002132:	fe 7c 28 00 	mov	r12,-55296
80002136:	f0 1f 00 07 	mcall	80002150 <sd_mmc_spi_send_and_read+0x30>
8000213a:	58 1c       	cp.w	r12,1
8000213c:	c0 41       	brne	80002144 <sd_mmc_spi_send_and_read+0x24>
8000213e:	e0 6c 00 ff 	mov	r12,255
80002142:	c0 28       	rjmp	80002146 <sd_mmc_spi_send_and_read+0x26>
80002144:	1b bc       	ld.ub	r12,sp[0x3]
80002146:	2f fd       	sub	sp,-4
80002148:	d8 02       	popm	pc
8000214a:	00 00       	add	r0,r0
8000214c:	80 00       	ld.sh	r0,r0[0x0]
8000214e:	2e 32       	sub	r2,-29
80002150:	80 00       	ld.sh	r0,r0[0x0]
80002152:	2e 4e       	sub	lr,-28

80002154 <sd_mmc_spi_wait_not_busy>:
80002154:	d4 21       	pushm	r4-r7,lr
80002156:	30 1b       	mov	r11,1
80002158:	fe 7c 28 00 	mov	r12,-55296
8000215c:	f0 1f 00 10 	mcall	8000219c <sd_mmc_spi_wait_not_busy+0x48>
80002160:	30 07       	mov	r7,0
80002162:	e0 65 00 ff 	mov	r5,255
80002166:	48 f4       	lddpc	r4,800021a0 <sd_mmc_spi_wait_not_busy+0x4c>
80002168:	3f f6       	mov	r6,-1
8000216a:	c0 b8       	rjmp	80002180 <sd_mmc_spi_wait_not_busy+0x2c>
8000216c:	2f f7       	sub	r7,-1
8000216e:	e2 57 0d 40 	cp.w	r7,200000
80002172:	c0 71       	brne	80002180 <sd_mmc_spi_wait_not_busy+0x2c>
80002174:	30 1b       	mov	r11,1
80002176:	fe 7c 28 00 	mov	r12,-55296
8000217a:	f0 1f 00 0b 	mcall	800021a4 <sd_mmc_spi_wait_not_busy+0x50>
8000217e:	d8 2a       	popm	r4-r7,pc,r12=0
80002180:	0a 9c       	mov	r12,r5
80002182:	f0 1f 00 0a 	mcall	800021a8 <sd_mmc_spi_wait_not_busy+0x54>
80002186:	a8 8c       	st.b	r4[0x0],r12
80002188:	ec 0c 18 00 	cp.b	r12,r6
8000218c:	cf 01       	brne	8000216c <sd_mmc_spi_wait_not_busy+0x18>
8000218e:	30 1b       	mov	r11,1
80002190:	fe 7c 28 00 	mov	r12,-55296
80002194:	f0 1f 00 04 	mcall	800021a4 <sd_mmc_spi_wait_not_busy+0x50>
80002198:	da 2a       	popm	r4-r7,pc,r12=1
8000219a:	00 00       	add	r0,r0
8000219c:	80 00       	ld.sh	r0,r0[0x0]
8000219e:	2d 02       	sub	r2,-48
800021a0:	00 00       	add	r0,r0
800021a2:	05 a4       	ld.ub	r4,r2[0x2]
800021a4:	80 00       	ld.sh	r0,r0[0x0]
800021a6:	2d 4e       	sub	lr,-44
800021a8:	80 00       	ld.sh	r0,r0[0x0]
800021aa:	21 20       	sub	r0,18

800021ac <sd_mmc_spi_command>:
800021ac:	eb cd 40 f8 	pushm	r3-r7,lr
800021b0:	18 96       	mov	r6,r12
800021b2:	16 97       	mov	r7,r11
800021b4:	e0 6b 00 ff 	mov	r11,255
800021b8:	fe 7c 28 00 	mov	r12,-55296
800021bc:	f0 1f 00 2b 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021c0:	0c 9b       	mov	r11,r6
800021c2:	a7 ab       	sbr	r11,0x6
800021c4:	5c 5b       	castu.b	r11
800021c6:	fe 7c 28 00 	mov	r12,-55296
800021ca:	f0 1f 00 28 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021ce:	ee 0b 16 18 	lsr	r11,r7,0x18
800021d2:	fe 7c 28 00 	mov	r12,-55296
800021d6:	f0 1f 00 25 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021da:	ee 0b 16 10 	lsr	r11,r7,0x10
800021de:	fe 7c 28 00 	mov	r12,-55296
800021e2:	f0 1f 00 22 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021e6:	f7 d7 c1 10 	bfextu	r11,r7,0x8,0x10
800021ea:	fe 7c 28 00 	mov	r12,-55296
800021ee:	f0 1f 00 1f 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021f2:	0e 9b       	mov	r11,r7
800021f4:	5c 7b       	castu.h	r11
800021f6:	fe 7c 28 00 	mov	r12,-55296
800021fa:	f0 1f 00 1c 	mcall	80002268 <sd_mmc_spi_command+0xbc>
800021fe:	30 08       	mov	r8,0
80002200:	f0 06 18 00 	cp.b	r6,r8
80002204:	c0 60       	breq	80002210 <sd_mmc_spi_command+0x64>
80002206:	30 88       	mov	r8,8
80002208:	f0 06 18 00 	cp.b	r6,r8
8000220c:	c1 01       	brne	8000222c <sd_mmc_spi_command+0x80>
8000220e:	c0 88       	rjmp	8000221e <sd_mmc_spi_command+0x72>
80002210:	e0 6b 00 95 	mov	r11,149
80002214:	fe 7c 28 00 	mov	r12,-55296
80002218:	f0 1f 00 14 	mcall	80002268 <sd_mmc_spi_command+0xbc>
8000221c:	c0 e8       	rjmp	80002238 <sd_mmc_spi_command+0x8c>
8000221e:	e0 6b 00 87 	mov	r11,135
80002222:	fe 7c 28 00 	mov	r12,-55296
80002226:	f0 1f 00 11 	mcall	80002268 <sd_mmc_spi_command+0xbc>
8000222a:	c0 78       	rjmp	80002238 <sd_mmc_spi_command+0x8c>
8000222c:	e0 6b 00 ff 	mov	r11,255
80002230:	fe 7c 28 00 	mov	r12,-55296
80002234:	f0 1f 00 0d 	mcall	80002268 <sd_mmc_spi_command+0xbc>
80002238:	3f f9       	mov	r9,-1
8000223a:	48 d8       	lddpc	r8,8000226c <sd_mmc_spi_command+0xc0>
8000223c:	b0 89       	st.b	r8[0x0],r9
8000223e:	30 07       	mov	r7,0
80002240:	e0 64 00 ff 	mov	r4,255
80002244:	10 93       	mov	r3,r8
80002246:	12 96       	mov	r6,r9
80002248:	30 b5       	mov	r5,11
8000224a:	c0 68       	rjmp	80002256 <sd_mmc_spi_command+0xaa>
8000224c:	2f f7       	sub	r7,-1
8000224e:	5c 57       	castu.b	r7
80002250:	ea 07 18 00 	cp.b	r7,r5
80002254:	c0 80       	breq	80002264 <sd_mmc_spi_command+0xb8>
80002256:	08 9c       	mov	r12,r4
80002258:	f0 1f 00 06 	mcall	80002270 <sd_mmc_spi_command+0xc4>
8000225c:	a6 8c       	st.b	r3[0x0],r12
8000225e:	ec 0c 18 00 	cp.b	r12,r6
80002262:	cf 50       	breq	8000224c <sd_mmc_spi_command+0xa0>
80002264:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002268:	80 00       	ld.sh	r0,r0[0x0]
8000226a:	2e 32       	sub	r2,-29
8000226c:	00 00       	add	r0,r0
8000226e:	05 a4       	ld.ub	r4,r2[0x2]
80002270:	80 00       	ld.sh	r0,r0[0x0]
80002272:	21 20       	sub	r0,18

80002274 <sd_mmc_spi_send_command>:
80002274:	eb cd 40 c0 	pushm	r6-r7,lr
80002278:	18 97       	mov	r7,r12
8000227a:	16 96       	mov	r6,r11
8000227c:	30 1b       	mov	r11,1
8000227e:	fe 7c 28 00 	mov	r12,-55296
80002282:	f0 1f 00 09 	mcall	800022a4 <sd_mmc_spi_send_command+0x30>
80002286:	0c 9b       	mov	r11,r6
80002288:	0e 9c       	mov	r12,r7
8000228a:	f0 1f 00 08 	mcall	800022a8 <sd_mmc_spi_send_command+0x34>
8000228e:	48 87       	lddpc	r7,800022ac <sd_mmc_spi_send_command+0x38>
80002290:	ae 8c       	st.b	r7[0x0],r12
80002292:	30 1b       	mov	r11,1
80002294:	fe 7c 28 00 	mov	r12,-55296
80002298:	f0 1f 00 06 	mcall	800022b0 <sd_mmc_spi_send_command+0x3c>
8000229c:	0f 8c       	ld.ub	r12,r7[0x0]
8000229e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800022a2:	00 00       	add	r0,r0
800022a4:	80 00       	ld.sh	r0,r0[0x0]
800022a6:	2d 02       	sub	r2,-48
800022a8:	80 00       	ld.sh	r0,r0[0x0]
800022aa:	21 ac       	sub	r12,26
800022ac:	00 00       	add	r0,r0
800022ae:	05 a4       	ld.ub	r4,r2[0x2]
800022b0:	80 00       	ld.sh	r0,r0[0x0]
800022b2:	2d 4e       	sub	lr,-44

800022b4 <sd_mmc_spi_check_presence>:
800022b4:	eb cd 40 fe 	pushm	r1-r7,lr
800022b8:	49 a8       	lddpc	r8,80002320 <sd_mmc_spi_check_presence+0x6c>
800022ba:	11 89       	ld.ub	r9,r8[0x0]
800022bc:	30 08       	mov	r8,0
800022be:	f0 09 18 00 	cp.b	r9,r8
800022c2:	c1 f1       	brne	80002300 <sd_mmc_spi_check_presence+0x4c>
800022c4:	30 07       	mov	r7,0
800022c6:	0e 94       	mov	r4,r7
800022c8:	49 73       	lddpc	r3,80002324 <sd_mmc_spi_check_presence+0x70>
800022ca:	30 16       	mov	r6,1
800022cc:	e0 62 00 ff 	mov	r2,255
800022d0:	fe 71 28 00 	mov	r1,-55296
800022d4:	30 b5       	mov	r5,11
800022d6:	c0 c8       	rjmp	800022ee <sd_mmc_spi_check_presence+0x3a>
800022d8:	04 9b       	mov	r11,r2
800022da:	02 9c       	mov	r12,r1
800022dc:	f0 1f 00 13 	mcall	80002328 <sd_mmc_spi_check_presence+0x74>
800022e0:	2f f7       	sub	r7,-1
800022e2:	5c 87       	casts.h	r7
800022e4:	ea 07 19 00 	cp.h	r7,r5
800022e8:	c0 31       	brne	800022ee <sd_mmc_spi_check_presence+0x3a>
800022ea:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
800022ee:	08 9b       	mov	r11,r4
800022f0:	08 9c       	mov	r12,r4
800022f2:	f0 1f 00 0f 	mcall	8000232c <sd_mmc_spi_check_presence+0x78>
800022f6:	a6 8c       	st.b	r3[0x0],r12
800022f8:	ec 0c 18 00 	cp.b	r12,r6
800022fc:	ce e1       	brne	800022d8 <sd_mmc_spi_check_presence+0x24>
800022fe:	c0 e8       	rjmp	8000231a <sd_mmc_spi_check_presence+0x66>
80002300:	30 0b       	mov	r11,0
80002302:	33 bc       	mov	r12,59
80002304:	f0 1f 00 0a 	mcall	8000232c <sd_mmc_spi_check_presence+0x78>
80002308:	48 78       	lddpc	r8,80002324 <sd_mmc_spi_check_presence+0x70>
8000230a:	b0 8c       	st.b	r8[0x0],r12
8000230c:	58 0c       	cp.w	r12,0
8000230e:	c0 60       	breq	8000231a <sd_mmc_spi_check_presence+0x66>
80002310:	30 09       	mov	r9,0
80002312:	48 48       	lddpc	r8,80002320 <sd_mmc_spi_check_presence+0x6c>
80002314:	b0 89       	st.b	r8[0x0],r9
80002316:	e3 cf 80 fe 	ldm	sp++,r1-r7,pc,r12=0
8000231a:	e3 cf 90 fe 	ldm	sp++,r1-r7,pc,r12=1
8000231e:	00 00       	add	r0,r0
80002320:	00 00       	add	r0,r0
80002322:	00 34       	cp.w	r4,r0
80002324:	00 00       	add	r0,r0
80002326:	05 a4       	ld.ub	r4,r2[0x2]
80002328:	80 00       	ld.sh	r0,r0[0x0]
8000232a:	2e 32       	sub	r2,-29
8000232c:	80 00       	ld.sh	r0,r0[0x0]
8000232e:	22 74       	sub	r4,39

80002330 <sd_mmc_spi_check_hc>:
80002330:	eb cd 40 c0 	pushm	r6-r7,lr
80002334:	f0 1f 00 1c 	mcall	800023a4 <sd_mmc_spi_check_hc+0x74>
80002338:	c0 31       	brne	8000233e <sd_mmc_spi_check_hc+0xe>
8000233a:	e3 cf c0 c0 	ldm	sp++,r6-r7,pc,r12=-1
8000233e:	30 1b       	mov	r11,1
80002340:	fe 7c 28 00 	mov	r12,-55296
80002344:	f0 1f 00 19 	mcall	800023a8 <sd_mmc_spi_check_hc+0x78>
80002348:	30 0b       	mov	r11,0
8000234a:	33 ac       	mov	r12,58
8000234c:	f0 1f 00 18 	mcall	800023ac <sd_mmc_spi_check_hc+0x7c>
80002350:	49 88       	lddpc	r8,800023b0 <sd_mmc_spi_check_hc+0x80>
80002352:	b0 8c       	st.b	r8[0x0],r12
80002354:	58 0c       	cp.w	r12,0
80002356:	c0 80       	breq	80002366 <sd_mmc_spi_check_hc+0x36>
80002358:	30 1b       	mov	r11,1
8000235a:	fe 7c 28 00 	mov	r12,-55296
8000235e:	f0 1f 00 16 	mcall	800023b4 <sd_mmc_spi_check_hc+0x84>
80002362:	e3 cf c0 c0 	ldm	sp++,r6-r7,pc,r12=-1
80002366:	e0 6c 00 ff 	mov	r12,255
8000236a:	f0 1f 00 14 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
8000236e:	18 96       	mov	r6,r12
80002370:	e0 6c 00 ff 	mov	r12,255
80002374:	f0 1f 00 11 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
80002378:	48 e7       	lddpc	r7,800023b0 <sd_mmc_spi_check_hc+0x80>
8000237a:	ae 8c       	st.b	r7[0x0],r12
8000237c:	e0 6c 00 ff 	mov	r12,255
80002380:	f0 1f 00 0e 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
80002384:	ae 8c       	st.b	r7[0x0],r12
80002386:	e0 6c 00 ff 	mov	r12,255
8000238a:	f0 1f 00 0c 	mcall	800023b8 <sd_mmc_spi_check_hc+0x88>
8000238e:	ae 8c       	st.b	r7[0x0],r12
80002390:	30 1b       	mov	r11,1
80002392:	fe 7c 28 00 	mov	r12,-55296
80002396:	f0 1f 00 08 	mcall	800023b4 <sd_mmc_spi_check_hc+0x84>
8000239a:	f9 d6 c0 c1 	bfextu	r12,r6,0x6,0x1
8000239e:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800023a2:	00 00       	add	r0,r0
800023a4:	80 00       	ld.sh	r0,r0[0x0]
800023a6:	21 54       	sub	r4,21
800023a8:	80 00       	ld.sh	r0,r0[0x0]
800023aa:	2d 02       	sub	r2,-48
800023ac:	80 00       	ld.sh	r0,r0[0x0]
800023ae:	21 ac       	sub	r12,26
800023b0:	00 00       	add	r0,r0
800023b2:	05 a4       	ld.ub	r4,r2[0x2]
800023b4:	80 00       	ld.sh	r0,r0[0x0]
800023b6:	2d 4e       	sub	lr,-44
800023b8:	80 00       	ld.sh	r0,r0[0x0]
800023ba:	21 20       	sub	r0,18

800023bc <sd_mmc_spi_get_if>:
800023bc:	eb cd 40 80 	pushm	r7,lr
800023c0:	f0 1f 00 27 	mcall	8000245c <sd_mmc_spi_get_if+0xa0>
800023c4:	c0 31       	brne	800023ca <sd_mmc_spi_get_if+0xe>
800023c6:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
800023ca:	30 1b       	mov	r11,1
800023cc:	fe 7c 28 00 	mov	r12,-55296
800023d0:	f0 1f 00 24 	mcall	80002460 <sd_mmc_spi_get_if+0xa4>
800023d4:	e0 6b 01 aa 	mov	r11,426
800023d8:	30 8c       	mov	r12,8
800023da:	f0 1f 00 23 	mcall	80002464 <sd_mmc_spi_get_if+0xa8>
800023de:	4a 38       	lddpc	r8,80002468 <sd_mmc_spi_get_if+0xac>
800023e0:	b0 8c       	st.b	r8[0x0],r12
800023e2:	e2 1c 00 04 	andl	r12,0x4,COH
800023e6:	c0 80       	breq	800023f6 <sd_mmc_spi_get_if+0x3a>
800023e8:	30 1b       	mov	r11,1
800023ea:	fe 7c 28 00 	mov	r12,-55296
800023ee:	f0 1f 00 20 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
800023f2:	e3 cf 80 80 	ldm	sp++,r7,pc,r12=0
800023f6:	e0 6c 00 ff 	mov	r12,255
800023fa:	f0 1f 00 1e 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
800023fe:	49 b7       	lddpc	r7,80002468 <sd_mmc_spi_get_if+0xac>
80002400:	ae 8c       	st.b	r7[0x0],r12
80002402:	e0 6c 00 ff 	mov	r12,255
80002406:	f0 1f 00 1b 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
8000240a:	ae 8c       	st.b	r7[0x0],r12
8000240c:	e0 6c 00 ff 	mov	r12,255
80002410:	f0 1f 00 18 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
80002414:	ae 8c       	st.b	r7[0x0],r12
80002416:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
8000241a:	c0 81       	brne	8000242a <sd_mmc_spi_get_if+0x6e>
8000241c:	30 1b       	mov	r11,1
8000241e:	fe 7c 28 00 	mov	r12,-55296
80002422:	f0 1f 00 13 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
80002426:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
8000242a:	e0 6c 00 ff 	mov	r12,255
8000242e:	f0 1f 00 11 	mcall	80002470 <sd_mmc_spi_get_if+0xb4>
80002432:	48 e8       	lddpc	r8,80002468 <sd_mmc_spi_get_if+0xac>
80002434:	b0 8c       	st.b	r8[0x0],r12
80002436:	3a a8       	mov	r8,-86
80002438:	f0 0c 18 00 	cp.b	r12,r8
8000243c:	c0 80       	breq	8000244c <sd_mmc_spi_get_if+0x90>
8000243e:	30 1b       	mov	r11,1
80002440:	fe 7c 28 00 	mov	r12,-55296
80002444:	f0 1f 00 0a 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
80002448:	e3 cf c0 80 	ldm	sp++,r7,pc,r12=-1
8000244c:	30 1b       	mov	r11,1
8000244e:	fe 7c 28 00 	mov	r12,-55296
80002452:	f0 1f 00 07 	mcall	8000246c <sd_mmc_spi_get_if+0xb0>
80002456:	e3 cf 90 80 	ldm	sp++,r7,pc,r12=1
8000245a:	00 00       	add	r0,r0
8000245c:	80 00       	ld.sh	r0,r0[0x0]
8000245e:	21 54       	sub	r4,21
80002460:	80 00       	ld.sh	r0,r0[0x0]
80002462:	2d 02       	sub	r2,-48
80002464:	80 00       	ld.sh	r0,r0[0x0]
80002466:	21 ac       	sub	r12,26
80002468:	00 00       	add	r0,r0
8000246a:	05 a4       	ld.ub	r4,r2[0x2]
8000246c:	80 00       	ld.sh	r0,r0[0x0]
8000246e:	2d 4e       	sub	lr,-44
80002470:	80 00       	ld.sh	r0,r0[0x0]
80002472:	21 20       	sub	r0,18

80002474 <sd_mmc_spi_get_csd>:
80002474:	eb cd 40 fc 	pushm	r2-r7,lr
80002478:	20 1d       	sub	sp,4
8000247a:	18 92       	mov	r2,r12
8000247c:	f0 1f 00 32 	mcall	80002544 <sd_mmc_spi_get_csd+0xd0>
80002480:	c5 f0       	breq	8000253e <sd_mmc_spi_get_csd+0xca>
80002482:	30 1b       	mov	r11,1
80002484:	fe 7c 28 00 	mov	r12,-55296
80002488:	f0 1f 00 30 	mcall	80002548 <sd_mmc_spi_get_csd+0xd4>
8000248c:	30 0b       	mov	r11,0
8000248e:	30 9c       	mov	r12,9
80002490:	f0 1f 00 2f 	mcall	8000254c <sd_mmc_spi_get_csd+0xd8>
80002494:	4a f8       	lddpc	r8,80002550 <sd_mmc_spi_get_csd+0xdc>
80002496:	b0 8c       	st.b	r8[0x0],r12
80002498:	58 0c       	cp.w	r12,0
8000249a:	c0 81       	brne	800024aa <sd_mmc_spi_get_csd+0x36>
8000249c:	30 07       	mov	r7,0
8000249e:	e0 64 00 ff 	mov	r4,255
800024a2:	10 93       	mov	r3,r8
800024a4:	3f e6       	mov	r6,-2
800024a6:	30 95       	mov	r5,9
800024a8:	c1 78       	rjmp	800024d6 <sd_mmc_spi_get_csd+0x62>
800024aa:	30 1b       	mov	r11,1
800024ac:	fe 7c 28 00 	mov	r12,-55296
800024b0:	f0 1f 00 29 	mcall	80002554 <sd_mmc_spi_get_csd+0xe0>
800024b4:	30 09       	mov	r9,0
800024b6:	4a 98       	lddpc	r8,80002558 <sd_mmc_spi_get_csd+0xe4>
800024b8:	b0 89       	st.b	r8[0x0],r9
800024ba:	30 0c       	mov	r12,0
800024bc:	c4 18       	rjmp	8000253e <sd_mmc_spi_get_csd+0xca>
800024be:	ea 07 18 00 	cp.b	r7,r5
800024c2:	c0 81       	brne	800024d2 <sd_mmc_spi_get_csd+0x5e>
800024c4:	30 1b       	mov	r11,1
800024c6:	fe 7c 28 00 	mov	r12,-55296
800024ca:	f0 1f 00 23 	mcall	80002554 <sd_mmc_spi_get_csd+0xe0>
800024ce:	30 0c       	mov	r12,0
800024d0:	c3 78       	rjmp	8000253e <sd_mmc_spi_get_csd+0xca>
800024d2:	2f f7       	sub	r7,-1
800024d4:	5c 57       	castu.b	r7
800024d6:	08 9c       	mov	r12,r4
800024d8:	f0 1f 00 21 	mcall	8000255c <sd_mmc_spi_get_csd+0xe8>
800024dc:	a6 8c       	st.b	r3[0x0],r12
800024de:	ec 0c 18 00 	cp.b	r12,r6
800024e2:	ce e1       	brne	800024be <sd_mmc_spi_get_csd+0x4a>
800024e4:	30 07       	mov	r7,0
800024e6:	e0 65 00 ff 	mov	r5,255
800024ea:	fe 76 28 00 	mov	r6,-55296
800024ee:	fa c4 ff fe 	sub	r4,sp,-2
800024f2:	0a 9b       	mov	r11,r5
800024f4:	0c 9c       	mov	r12,r6
800024f6:	f0 1f 00 1b 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
800024fa:	08 9b       	mov	r11,r4
800024fc:	0c 9c       	mov	r12,r6
800024fe:	f0 1f 00 1a 	mcall	80002564 <sd_mmc_spi_get_csd+0xf0>
80002502:	9a 18       	ld.sh	r8,sp[0x2]
80002504:	e4 07 0b 08 	st.b	r2[r7],r8
80002508:	2f f7       	sub	r7,-1
8000250a:	59 07       	cp.w	r7,16
8000250c:	cf 31       	brne	800024f2 <sd_mmc_spi_get_csd+0x7e>
8000250e:	e0 6b 00 ff 	mov	r11,255
80002512:	fe 7c 28 00 	mov	r12,-55296
80002516:	f0 1f 00 13 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
8000251a:	e0 6b 00 ff 	mov	r11,255
8000251e:	fe 7c 28 00 	mov	r12,-55296
80002522:	f0 1f 00 10 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
80002526:	e0 6b 00 ff 	mov	r11,255
8000252a:	fe 7c 28 00 	mov	r12,-55296
8000252e:	f0 1f 00 0d 	mcall	80002560 <sd_mmc_spi_get_csd+0xec>
80002532:	30 1b       	mov	r11,1
80002534:	fe 7c 28 00 	mov	r12,-55296
80002538:	f0 1f 00 07 	mcall	80002554 <sd_mmc_spi_get_csd+0xe0>
8000253c:	30 1c       	mov	r12,1
8000253e:	2f fd       	sub	sp,-4
80002540:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
80002544:	80 00       	ld.sh	r0,r0[0x0]
80002546:	21 54       	sub	r4,21
80002548:	80 00       	ld.sh	r0,r0[0x0]
8000254a:	2d 02       	sub	r2,-48
8000254c:	80 00       	ld.sh	r0,r0[0x0]
8000254e:	21 ac       	sub	r12,26
80002550:	00 00       	add	r0,r0
80002552:	05 a4       	ld.ub	r4,r2[0x2]
80002554:	80 00       	ld.sh	r0,r0[0x0]
80002556:	2d 4e       	sub	lr,-44
80002558:	00 00       	add	r0,r0
8000255a:	00 34       	cp.w	r4,r0
8000255c:	80 00       	ld.sh	r0,r0[0x0]
8000255e:	21 20       	sub	r0,18
80002560:	80 00       	ld.sh	r0,r0[0x0]
80002562:	2e 32       	sub	r2,-29
80002564:	80 00       	ld.sh	r0,r0[0x0]
80002566:	2e 4e       	sub	lr,-28

80002568 <sd_mmc_spi_internal_init>:
80002568:	d4 31       	pushm	r0-r7,lr
8000256a:	fe fb 02 66 	ld.w	r11,pc[614]
8000256e:	e6 68 1a 80 	mov	r8,400000
80002572:	97 18       	st.w	r11[0x4],r8
80002574:	fe f8 02 60 	ld.w	r8,pc[608]
80002578:	70 0a       	ld.w	r10,r8[0x0]
8000257a:	fe 7c 28 00 	mov	r12,-55296
8000257e:	f0 1f 00 97 	mcall	800027d8 <sd_mmc_spi_internal_init+0x270>
80002582:	30 1b       	mov	r11,1
80002584:	fe 7c 28 00 	mov	r12,-55296
80002588:	f0 1f 00 95 	mcall	800027dc <sd_mmc_spi_internal_init+0x274>
8000258c:	30 07       	mov	r7,0
8000258e:	e0 66 00 ff 	mov	r6,255
80002592:	fe 75 28 00 	mov	r5,-55296
80002596:	0c 9b       	mov	r11,r6
80002598:	0a 9c       	mov	r12,r5
8000259a:	f0 1f 00 92 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
8000259e:	2f f7       	sub	r7,-1
800025a0:	58 a7       	cp.w	r7,10
800025a2:	cf a1       	brne	80002596 <sd_mmc_spi_internal_init+0x2e>
800025a4:	30 1b       	mov	r11,1
800025a6:	fe 7c 28 00 	mov	r12,-55296
800025aa:	f0 1f 00 8f 	mcall	800027e4 <sd_mmc_spi_internal_init+0x27c>
800025ae:	30 08       	mov	r8,0
800025b0:	fe f9 02 38 	ld.w	r9,pc[568]
800025b4:	b2 88       	st.b	r9[0x0],r8
800025b6:	fe f9 02 36 	ld.w	r9,pc[566]
800025ba:	b2 88       	st.b	r9[0x0],r8
800025bc:	30 0b       	mov	r11,0
800025be:	16 9c       	mov	r12,r11
800025c0:	f0 1f 00 8c 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800025c4:	fe f8 02 30 	ld.w	r8,pc[560]
800025c8:	b0 8c       	st.b	r8[0x0],r12
800025ca:	e0 6b 00 ff 	mov	r11,255
800025ce:	fe 7c 28 00 	mov	r12,-55296
800025d2:	f0 1f 00 84 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800025d6:	30 17       	mov	r7,1
800025d8:	fe f6 02 1c 	ld.w	r6,pc[540]
800025dc:	30 15       	mov	r5,1
800025de:	30 03       	mov	r3,0
800025e0:	e0 62 00 ff 	mov	r2,255
800025e4:	fe 71 28 00 	mov	r1,-55296
800025e8:	36 54       	mov	r4,101
800025ea:	c1 08       	rjmp	8000260a <sd_mmc_spi_internal_init+0xa2>
800025ec:	06 9b       	mov	r11,r3
800025ee:	06 9c       	mov	r12,r3
800025f0:	f0 1f 00 80 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800025f4:	ac 8c       	st.b	r6[0x0],r12
800025f6:	04 9b       	mov	r11,r2
800025f8:	02 9c       	mov	r12,r1
800025fa:	f0 1f 00 7a 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800025fe:	2f f7       	sub	r7,-1
80002600:	5c 87       	casts.h	r7
80002602:	e8 07 19 00 	cp.h	r7,r4
80002606:	e0 80 00 e4 	breq	800027ce <sd_mmc_spi_internal_init+0x266>
8000260a:	0d 88       	ld.ub	r8,r6[0x0]
8000260c:	ea 08 18 00 	cp.b	r8,r5
80002610:	ce e1       	brne	800025ec <sd_mmc_spi_internal_init+0x84>
80002612:	f0 1f 00 7a 	mcall	800027f8 <sd_mmc_spi_internal_init+0x290>
80002616:	5b fc       	cp.w	r12,-1
80002618:	e0 80 00 db 	breq	800027ce <sd_mmc_spi_internal_init+0x266>
8000261c:	58 1c       	cp.w	r12,1
8000261e:	c0 51       	brne	80002628 <sd_mmc_spi_internal_init+0xc0>
80002620:	30 29       	mov	r9,2
80002622:	4f 38       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
80002624:	b0 89       	st.b	r8[0x0],r9
80002626:	c4 c8       	rjmp	800026be <sd_mmc_spi_internal_init+0x156>
80002628:	30 0b       	mov	r11,0
8000262a:	33 7c       	mov	r12,55
8000262c:	f0 1f 00 71 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002630:	4f 17       	lddpc	r7,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002632:	ae 8c       	st.b	r7[0x0],r12
80002634:	e0 6b 00 ff 	mov	r11,255
80002638:	fe 7c 28 00 	mov	r12,-55296
8000263c:	f0 1f 00 69 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002640:	30 0b       	mov	r11,0
80002642:	32 9c       	mov	r12,41
80002644:	f0 1f 00 6b 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002648:	ae 8c       	st.b	r7[0x0],r12
8000264a:	e0 6b 00 ff 	mov	r11,255
8000264e:	fe 7c 28 00 	mov	r12,-55296
80002652:	f0 1f 00 64 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002656:	0f 88       	ld.ub	r8,r7[0x0]
80002658:	e2 18 00 fe 	andl	r8,0xfe,COH
8000265c:	c0 51       	brne	80002666 <sd_mmc_spi_internal_init+0xfe>
8000265e:	30 19       	mov	r9,1
80002660:	4e 38       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
80002662:	b0 89       	st.b	r8[0x0],r9
80002664:	c2 d8       	rjmp	800026be <sd_mmc_spi_internal_init+0x156>
80002666:	30 09       	mov	r9,0
80002668:	4e 18       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
8000266a:	b0 89       	st.b	r8[0x0],r9
8000266c:	30 0b       	mov	r11,0
8000266e:	16 9c       	mov	r12,r11
80002670:	f0 1f 00 60 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002674:	4e 08       	lddpc	r8,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002676:	b0 8c       	st.b	r8[0x0],r12
80002678:	e0 6b 00 ff 	mov	r11,255
8000267c:	fe 7c 28 00 	mov	r12,-55296
80002680:	f0 1f 00 58 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002684:	30 17       	mov	r7,1
80002686:	4d c6       	lddpc	r6,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002688:	30 15       	mov	r5,1
8000268a:	30 03       	mov	r3,0
8000268c:	e0 62 00 ff 	mov	r2,255
80002690:	fe 71 28 00 	mov	r1,-55296
80002694:	36 54       	mov	r4,101
80002696:	c1 08       	rjmp	800026b6 <sd_mmc_spi_internal_init+0x14e>
80002698:	06 9b       	mov	r11,r3
8000269a:	06 9c       	mov	r12,r3
8000269c:	f0 1f 00 55 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800026a0:	ac 8c       	st.b	r6[0x0],r12
800026a2:	04 9b       	mov	r11,r2
800026a4:	02 9c       	mov	r12,r1
800026a6:	f0 1f 00 4f 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800026aa:	2f f7       	sub	r7,-1
800026ac:	5c 87       	casts.h	r7
800026ae:	e8 07 19 00 	cp.h	r7,r4
800026b2:	e0 80 00 8e 	breq	800027ce <sd_mmc_spi_internal_init+0x266>
800026b6:	0d 88       	ld.ub	r8,r6[0x0]
800026b8:	ea 08 18 00 	cp.b	r8,r5
800026bc:	ce e1       	brne	80002698 <sd_mmc_spi_internal_init+0x130>
800026be:	30 07       	mov	r7,0
800026c0:	4c b4       	lddpc	r4,800027ec <sd_mmc_spi_internal_init+0x284>
800026c2:	30 15       	mov	r5,1
800026c4:	0e 93       	mov	r3,r7
800026c6:	33 70       	mov	r0,55
800026c8:	4c b6       	lddpc	r6,800027f4 <sd_mmc_spi_internal_init+0x28c>
800026ca:	e0 62 00 ff 	mov	r2,255
800026ce:	fe 71 28 00 	mov	r1,-55296
800026d2:	09 88       	ld.ub	r8,r4[0x0]
800026d4:	ea 08 18 00 	cp.b	r8,r5
800026d8:	c1 10       	breq	800026fa <sd_mmc_spi_internal_init+0x192>
800026da:	c0 63       	brcs	800026e6 <sd_mmc_spi_internal_init+0x17e>
800026dc:	30 29       	mov	r9,2
800026de:	f2 08 18 00 	cp.b	r8,r9
800026e2:	c2 81       	brne	80002732 <sd_mmc_spi_internal_init+0x1ca>
800026e4:	c1 98       	rjmp	80002716 <sd_mmc_spi_internal_init+0x1ae>
800026e6:	06 9b       	mov	r11,r3
800026e8:	30 1c       	mov	r12,1
800026ea:	f0 1f 00 42 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
800026ee:	ac 8c       	st.b	r6[0x0],r12
800026f0:	04 9b       	mov	r11,r2
800026f2:	02 9c       	mov	r12,r1
800026f4:	f0 1f 00 3b 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
800026f8:	c1 d8       	rjmp	80002732 <sd_mmc_spi_internal_init+0x1ca>
800026fa:	06 9b       	mov	r11,r3
800026fc:	00 9c       	mov	r12,r0
800026fe:	f0 1f 00 3d 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002702:	06 9b       	mov	r11,r3
80002704:	32 9c       	mov	r12,41
80002706:	f0 1f 00 3b 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
8000270a:	ac 8c       	st.b	r6[0x0],r12
8000270c:	04 9b       	mov	r11,r2
8000270e:	02 9c       	mov	r12,r1
80002710:	f0 1f 00 34 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002714:	c0 f8       	rjmp	80002732 <sd_mmc_spi_internal_init+0x1ca>
80002716:	06 9b       	mov	r11,r3
80002718:	00 9c       	mov	r12,r0
8000271a:	f0 1f 00 36 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
8000271e:	fc 1b 40 00 	movh	r11,0x4000
80002722:	32 9c       	mov	r12,41
80002724:	f0 1f 00 33 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002728:	ac 8c       	st.b	r6[0x0],r12
8000272a:	04 9b       	mov	r11,r2
8000272c:	02 9c       	mov	r12,r1
8000272e:	f0 1f 00 2d 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002732:	2f f7       	sub	r7,-1
80002734:	5c 87       	casts.h	r7
80002736:	fe 78 c3 50 	mov	r8,-15536
8000273a:	f0 07 19 00 	cp.h	r7,r8
8000273e:	c4 80       	breq	800027ce <sd_mmc_spi_internal_init+0x266>
80002740:	0d 89       	ld.ub	r9,r6[0x0]
80002742:	30 08       	mov	r8,0
80002744:	f0 09 18 00 	cp.b	r9,r8
80002748:	cc 51       	brne	800026d2 <sd_mmc_spi_internal_init+0x16a>
8000274a:	4a 98       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
8000274c:	11 89       	ld.ub	r9,r8[0x0]
8000274e:	30 28       	mov	r8,2
80002750:	f0 09 18 00 	cp.b	r9,r8
80002754:	c0 a1       	brne	80002768 <sd_mmc_spi_internal_init+0x200>
80002756:	f0 1f 00 2a 	mcall	800027fc <sd_mmc_spi_internal_init+0x294>
8000275a:	5b fc       	cp.w	r12,-1
8000275c:	c3 90       	breq	800027ce <sd_mmc_spi_internal_init+0x266>
8000275e:	58 1c       	cp.w	r12,1
80002760:	c0 41       	brne	80002768 <sd_mmc_spi_internal_init+0x200>
80002762:	30 39       	mov	r9,3
80002764:	4a 28       	lddpc	r8,800027ec <sd_mmc_spi_internal_init+0x284>
80002766:	b0 89       	st.b	r8[0x0],r9
80002768:	30 0b       	mov	r11,0
8000276a:	33 bc       	mov	r12,59
8000276c:	f0 1f 00 21 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
80002770:	4a 17       	lddpc	r7,800027f4 <sd_mmc_spi_internal_init+0x28c>
80002772:	ae 8c       	st.b	r7[0x0],r12
80002774:	e0 6b 00 ff 	mov	r11,255
80002778:	fe 7c 28 00 	mov	r12,-55296
8000277c:	f0 1f 00 19 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002780:	e0 6b 02 00 	mov	r11,512
80002784:	31 0c       	mov	r12,16
80002786:	f0 1f 00 1b 	mcall	800027f0 <sd_mmc_spi_internal_init+0x288>
8000278a:	ae 8c       	st.b	r7[0x0],r12
8000278c:	e0 6b 00 ff 	mov	r11,255
80002790:	fe 7c 28 00 	mov	r12,-55296
80002794:	f0 1f 00 13 	mcall	800027e0 <sd_mmc_spi_internal_init+0x278>
80002798:	0f 89       	ld.ub	r9,r7[0x0]
8000279a:	30 08       	mov	r8,0
8000279c:	f0 09 18 00 	cp.b	r9,r8
800027a0:	c1 71       	brne	800027ce <sd_mmc_spi_internal_init+0x266>
800027a2:	49 8c       	lddpc	r12,80002800 <sd_mmc_spi_internal_init+0x298>
800027a4:	f0 1f 00 18 	mcall	80002804 <sd_mmc_spi_internal_init+0x29c>
800027a8:	c1 30       	breq	800027ce <sd_mmc_spi_internal_init+0x266>
800027aa:	f0 1f 00 18 	mcall	80002808 <sd_mmc_spi_internal_init+0x2a0>
800027ae:	30 19       	mov	r9,1
800027b0:	48 e8       	lddpc	r8,800027e8 <sd_mmc_spi_internal_init+0x280>
800027b2:	b0 89       	st.b	r8[0x0],r9
800027b4:	48 7b       	lddpc	r11,800027d0 <sd_mmc_spi_internal_init+0x268>
800027b6:	e0 68 1b 00 	mov	r8,6912
800027ba:	ea 18 00 b7 	orh	r8,0xb7
800027be:	97 18       	st.w	r11[0x4],r8
800027c0:	48 58       	lddpc	r8,800027d4 <sd_mmc_spi_internal_init+0x26c>
800027c2:	70 0a       	ld.w	r10,r8[0x0]
800027c4:	fe 7c 28 00 	mov	r12,-55296
800027c8:	f0 1f 00 04 	mcall	800027d8 <sd_mmc_spi_internal_init+0x270>
800027cc:	da 3a       	popm	r0-r7,pc,r12=1
800027ce:	d8 3a       	popm	r0-r7,pc,r12=0
800027d0:	00 00       	add	r0,r0
800027d2:	00 20       	rsub	r0,r0
800027d4:	00 00       	add	r0,r0
800027d6:	00 30       	cp.w	r0,r0
800027d8:	80 00       	ld.sh	r0,r0[0x0]
800027da:	2d 74       	sub	r4,-41
800027dc:	80 00       	ld.sh	r0,r0[0x0]
800027de:	2d 02       	sub	r2,-48
800027e0:	80 00       	ld.sh	r0,r0[0x0]
800027e2:	2e 32       	sub	r2,-29
800027e4:	80 00       	ld.sh	r0,r0[0x0]
800027e6:	2d 4e       	sub	lr,-44
800027e8:	00 00       	add	r0,r0
800027ea:	00 34       	cp.w	r4,r0
800027ec:	00 00       	add	r0,r0
800027ee:	05 92       	ld.ub	r2,r2[0x1]
800027f0:	80 00       	ld.sh	r0,r0[0x0]
800027f2:	22 74       	sub	r4,39
800027f4:	00 00       	add	r0,r0
800027f6:	05 a4       	ld.ub	r4,r2[0x2]
800027f8:	80 00       	ld.sh	r0,r0[0x0]
800027fa:	23 bc       	sub	r12,59
800027fc:	80 00       	ld.sh	r0,r0[0x0]
800027fe:	23 30       	sub	r0,51
80002800:	00 00       	add	r0,r0
80002802:	05 94       	ld.ub	r4,r2[0x1]
80002804:	80 00       	ld.sh	r0,r0[0x0]
80002806:	24 74       	sub	r4,71
80002808:	80 00       	ld.sh	r0,r0[0x0]
8000280a:	20 04       	sub	r4,0

8000280c <sd_mmc_spi_init>:
8000280c:	eb cd 40 10 	pushm	r4,lr
80002810:	fa c4 ff f8 	sub	r4,sp,-8
80002814:	48 88       	lddpc	r8,80002834 <sd_mmc_spi_init+0x28>
80002816:	91 0c       	st.w	r8[0x0],r12
80002818:	48 88       	lddpc	r8,80002838 <sd_mmc_spi_init+0x2c>
8000281a:	e8 ea 00 00 	ld.d	r10,r4[0]
8000281e:	f0 eb 00 00 	st.d	r8[0],r10
80002822:	e8 ea 00 08 	ld.d	r10,r4[8]
80002826:	f0 eb 00 08 	st.d	r8[8],r10
8000282a:	f0 1f 00 05 	mcall	8000283c <sd_mmc_spi_init+0x30>
8000282e:	e3 cd 80 10 	ldm	sp++,r4,pc
80002832:	00 00       	add	r0,r0
80002834:	00 00       	add	r0,r0
80002836:	00 30       	cp.w	r0,r0
80002838:	00 00       	add	r0,r0
8000283a:	00 20       	rsub	r0,r0
8000283c:	80 00       	ld.sh	r0,r0[0x0]
8000283e:	25 68       	sub	r8,86

80002840 <flashc_set_wait_state>:
80002840:	fe 68 14 00 	mov	r8,-125952
80002844:	70 09       	ld.w	r9,r8[0x0]
80002846:	f3 dc d0 c1 	bfins	r9,r12,0x6,0x1
8000284a:	91 09       	st.w	r8[0x0],r9
8000284c:	5e fc       	retal	r12

8000284e <gpio_enable_module_pin>:
8000284e:	f8 08 16 05 	lsr	r8,r12,0x5
80002852:	a9 68       	lsl	r8,0x8
80002854:	e0 28 f0 00 	sub	r8,61440
80002858:	58 1b       	cp.w	r11,1
8000285a:	c0 d0       	breq	80002874 <gpio_enable_module_pin+0x26>
8000285c:	c0 63       	brcs	80002868 <gpio_enable_module_pin+0x1a>
8000285e:	58 2b       	cp.w	r11,2
80002860:	c1 00       	breq	80002880 <gpio_enable_module_pin+0x32>
80002862:	58 3b       	cp.w	r11,3
80002864:	c1 40       	breq	8000288c <gpio_enable_module_pin+0x3e>
80002866:	5e ff       	retal	1
80002868:	30 19       	mov	r9,1
8000286a:	f2 0c 09 49 	lsl	r9,r9,r12
8000286e:	91 69       	st.w	r8[0x18],r9
80002870:	91 a9       	st.w	r8[0x28],r9
80002872:	c1 28       	rjmp	80002896 <gpio_enable_module_pin+0x48>
80002874:	30 19       	mov	r9,1
80002876:	f2 0c 09 49 	lsl	r9,r9,r12
8000287a:	91 59       	st.w	r8[0x14],r9
8000287c:	91 a9       	st.w	r8[0x28],r9
8000287e:	c0 c8       	rjmp	80002896 <gpio_enable_module_pin+0x48>
80002880:	30 19       	mov	r9,1
80002882:	f2 0c 09 49 	lsl	r9,r9,r12
80002886:	91 69       	st.w	r8[0x18],r9
80002888:	91 99       	st.w	r8[0x24],r9
8000288a:	c0 68       	rjmp	80002896 <gpio_enable_module_pin+0x48>
8000288c:	30 19       	mov	r9,1
8000288e:	f2 0c 09 49 	lsl	r9,r9,r12
80002892:	91 59       	st.w	r8[0x14],r9
80002894:	91 99       	st.w	r8[0x24],r9
80002896:	30 19       	mov	r9,1
80002898:	f2 0c 09 4c 	lsl	r12,r9,r12
8000289c:	91 2c       	st.w	r8[0x8],r12
8000289e:	5e fd       	retal	0

800028a0 <gpio_enable_module>:
800028a0:	d4 21       	pushm	r4-r7,lr
800028a2:	18 97       	mov	r7,r12
800028a4:	16 94       	mov	r4,r11
800028a6:	58 0b       	cp.w	r11,0
800028a8:	c0 31       	brne	800028ae <gpio_enable_module+0xe>
800028aa:	30 05       	mov	r5,0
800028ac:	c0 d8       	rjmp	800028c6 <gpio_enable_module+0x26>
800028ae:	30 06       	mov	r6,0
800028b0:	0c 95       	mov	r5,r6
800028b2:	6e 1b       	ld.w	r11,r7[0x4]
800028b4:	6e 0c       	ld.w	r12,r7[0x0]
800028b6:	f0 1f 00 06 	mcall	800028cc <gpio_enable_module+0x2c>
800028ba:	18 45       	or	r5,r12
800028bc:	2f 87       	sub	r7,-8
800028be:	2f f6       	sub	r6,-1
800028c0:	0c 34       	cp.w	r4,r6
800028c2:	fe 9b ff f8 	brhi	800028b2 <gpio_enable_module+0x12>
800028c6:	0a 9c       	mov	r12,r5
800028c8:	d8 22       	popm	r4-r7,pc
800028ca:	00 00       	add	r0,r0
800028cc:	80 00       	ld.sh	r0,r0[0x0]
800028ce:	28 4e       	sub	lr,-124

800028d0 <gpio_enable_pin_pull_up>:
800028d0:	f8 08 16 05 	lsr	r8,r12,0x5
800028d4:	a9 68       	lsl	r8,0x8
800028d6:	e0 28 f0 00 	sub	r8,61440
800028da:	30 19       	mov	r9,1
800028dc:	f2 0c 09 4c 	lsl	r12,r9,r12
800028e0:	f1 4c 00 74 	st.w	r8[116],r12
800028e4:	5e fc       	retal	r12

800028e6 <gpio_set_gpio_pin>:
800028e6:	f8 08 16 05 	lsr	r8,r12,0x5
800028ea:	a9 68       	lsl	r8,0x8
800028ec:	e0 28 f0 00 	sub	r8,61440
800028f0:	30 19       	mov	r9,1
800028f2:	f2 0c 09 4c 	lsl	r12,r9,r12
800028f6:	f1 4c 00 54 	st.w	r8[84],r12
800028fa:	f1 4c 00 44 	st.w	r8[68],r12
800028fe:	91 1c       	st.w	r8[0x4],r12
80002900:	5e fc       	retal	r12

80002902 <gpio_clr_gpio_pin>:
80002902:	f8 08 16 05 	lsr	r8,r12,0x5
80002906:	a9 68       	lsl	r8,0x8
80002908:	e0 28 f0 00 	sub	r8,61440
8000290c:	30 19       	mov	r9,1
8000290e:	f2 0c 09 4c 	lsl	r12,r9,r12
80002912:	f1 4c 00 58 	st.w	r8[88],r12
80002916:	f1 4c 00 44 	st.w	r8[68],r12
8000291a:	91 1c       	st.w	r8[0x4],r12
8000291c:	5e fc       	retal	r12

8000291e <gpio_enable_pin_glitch_filter>:
8000291e:	f8 08 16 05 	lsr	r8,r12,0x5
80002922:	a9 68       	lsl	r8,0x8
80002924:	e0 28 f0 00 	sub	r8,61440
80002928:	30 19       	mov	r9,1
8000292a:	f2 0c 09 4c 	lsl	r12,r9,r12
8000292e:	f1 4c 00 c4 	st.w	r8[196],r12
80002932:	5e fc       	retal	r12

80002934 <gpio_enable_pin_interrupt>:
80002934:	f8 08 16 05 	lsr	r8,r12,0x5
80002938:	a9 68       	lsl	r8,0x8
8000293a:	e0 28 f0 00 	sub	r8,61440
8000293e:	30 19       	mov	r9,1
80002940:	f2 0c 09 4c 	lsl	r12,r9,r12
80002944:	f1 4c 00 c4 	st.w	r8[196],r12
80002948:	12 3b       	cp.w	r11,r9
8000294a:	c0 a0       	breq	8000295e <gpio_enable_pin_interrupt+0x2a>
8000294c:	c0 43       	brcs	80002954 <gpio_enable_pin_interrupt+0x20>
8000294e:	58 2b       	cp.w	r11,2
80002950:	c1 11       	brne	80002972 <gpio_enable_pin_interrupt+0x3e>
80002952:	c0 b8       	rjmp	80002968 <gpio_enable_pin_interrupt+0x34>
80002954:	f1 4c 00 a8 	st.w	r8[168],r12
80002958:	f1 4c 00 b8 	st.w	r8[184],r12
8000295c:	c0 c8       	rjmp	80002974 <gpio_enable_pin_interrupt+0x40>
8000295e:	f1 4c 00 a4 	st.w	r8[164],r12
80002962:	f1 4c 00 b8 	st.w	r8[184],r12
80002966:	c0 78       	rjmp	80002974 <gpio_enable_pin_interrupt+0x40>
80002968:	f1 4c 00 a8 	st.w	r8[168],r12
8000296c:	f1 4c 00 b4 	st.w	r8[180],r12
80002970:	c0 28       	rjmp	80002974 <gpio_enable_pin_interrupt+0x40>
80002972:	5e ff       	retal	1
80002974:	f1 4c 00 94 	st.w	r8[148],r12
80002978:	5e fd       	retal	0

8000297a <gpio_get_pin_interrupt_flag>:
8000297a:	f8 08 16 05 	lsr	r8,r12,0x5
8000297e:	a9 68       	lsl	r8,0x8
80002980:	e0 28 f0 00 	sub	r8,61440
80002984:	f0 f8 00 d0 	ld.w	r8,r8[208]
80002988:	f0 0c 0a 4c 	lsr	r12,r8,r12
8000298c:	f9 dc c0 01 	bfextu	r12,r12,0x0,0x1
80002990:	5e fc       	retal	r12

80002992 <_unhandled_interrupt>:
80002992:	c0 08       	rjmp	80002992 <_unhandled_interrupt>

80002994 <INTC_register_interrupt>:
80002994:	f6 08 16 05 	lsr	r8,r11,0x5
80002998:	49 99       	lddpc	r9,800029fc <INTC_register_interrupt+0x68>
8000299a:	f2 08 00 39 	add	r9,r9,r8<<0x3
8000299e:	f7 db c0 05 	bfextu	r11,r11,0x0,0x5
800029a2:	72 19       	ld.w	r9,r9[0x4]
800029a4:	f2 0b 09 2c 	st.w	r9[r11<<0x2],r12
800029a8:	58 0a       	cp.w	r10,0
800029aa:	c0 91       	brne	800029bc <INTC_register_interrupt+0x28>
800029ac:	49 59       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029ae:	49 6a       	lddpc	r10,80002a04 <INTC_register_interrupt+0x70>
800029b0:	12 1a       	sub	r10,r9
800029b2:	fe 79 08 00 	mov	r9,-63488
800029b6:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029ba:	5e fc       	retal	r12
800029bc:	58 1a       	cp.w	r10,1
800029be:	c0 a1       	brne	800029d2 <INTC_register_interrupt+0x3e>
800029c0:	49 09       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029c2:	49 2a       	lddpc	r10,80002a08 <INTC_register_interrupt+0x74>
800029c4:	12 1a       	sub	r10,r9
800029c6:	bf aa       	sbr	r10,0x1e
800029c8:	fe 79 08 00 	mov	r9,-63488
800029cc:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029d0:	5e fc       	retal	r12
800029d2:	58 2a       	cp.w	r10,2
800029d4:	c0 a1       	brne	800029e8 <INTC_register_interrupt+0x54>
800029d6:	48 b9       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029d8:	48 da       	lddpc	r10,80002a0c <INTC_register_interrupt+0x78>
800029da:	12 1a       	sub	r10,r9
800029dc:	bf ba       	sbr	r10,0x1f
800029de:	fe 79 08 00 	mov	r9,-63488
800029e2:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029e6:	5e fc       	retal	r12
800029e8:	48 69       	lddpc	r9,80002a00 <INTC_register_interrupt+0x6c>
800029ea:	48 aa       	lddpc	r10,80002a10 <INTC_register_interrupt+0x7c>
800029ec:	12 1a       	sub	r10,r9
800029ee:	ea 1a c0 00 	orh	r10,0xc000
800029f2:	fe 79 08 00 	mov	r9,-63488
800029f6:	f2 08 09 2a 	st.w	r9[r8<<0x2],r10
800029fa:	5e fc       	retal	r12
800029fc:	80 00       	ld.sh	r0,r0[0x0]
800029fe:	48 00       	lddpc	r0,800029fc <INTC_register_interrupt+0x68>
80002a00:	80 00       	ld.sh	r0,r0[0x0]
80002a02:	46 00       	lddsp	r0,sp[0x180]
80002a04:	80 00       	ld.sh	r0,r0[0x0]
80002a06:	47 04       	lddsp	r4,sp[0x1c0]
80002a08:	80 00       	ld.sh	r0,r0[0x0]
80002a0a:	47 12       	lddsp	r2,sp[0x1c4]
80002a0c:	80 00       	ld.sh	r0,r0[0x0]
80002a0e:	47 20       	lddsp	r0,sp[0x1c8]
80002a10:	80 00       	ld.sh	r0,r0[0x0]
80002a12:	47 2e       	lddsp	lr,sp[0x1c8]

80002a14 <INTC_init_interrupts>:
80002a14:	d4 21       	pushm	r4-r7,lr
80002a16:	49 18       	lddpc	r8,80002a58 <INTC_init_interrupts+0x44>
80002a18:	e3 b8 00 01 	mtsr	0x4,r8
80002a1c:	49 0e       	lddpc	lr,80002a5c <INTC_init_interrupts+0x48>
80002a1e:	30 07       	mov	r7,0
80002a20:	0e 94       	mov	r4,r7
80002a22:	49 0c       	lddpc	r12,80002a60 <INTC_init_interrupts+0x4c>
80002a24:	49 05       	lddpc	r5,80002a64 <INTC_init_interrupts+0x50>
80002a26:	10 15       	sub	r5,r8
80002a28:	fe 76 08 00 	mov	r6,-63488
80002a2c:	c1 08       	rjmp	80002a4c <INTC_init_interrupts+0x38>
80002a2e:	08 98       	mov	r8,r4
80002a30:	7c 1b       	ld.w	r11,lr[0x4]
80002a32:	7c 0a       	ld.w	r10,lr[0x0]
80002a34:	f6 08 09 2c 	st.w	r11[r8<<0x2],r12
80002a38:	2f f8       	sub	r8,-1
80002a3a:	10 3a       	cp.w	r10,r8
80002a3c:	fe 9b ff fc 	brhi	80002a34 <INTC_init_interrupts+0x20>
80002a40:	ec 07 09 25 	st.w	r6[r7<<0x2],r5
80002a44:	2f f7       	sub	r7,-1
80002a46:	2f 8e       	sub	lr,-8
80002a48:	59 47       	cp.w	r7,20
80002a4a:	c0 50       	breq	80002a54 <INTC_init_interrupts+0x40>
80002a4c:	7c 08       	ld.w	r8,lr[0x0]
80002a4e:	58 08       	cp.w	r8,0
80002a50:	ce f1       	brne	80002a2e <INTC_init_interrupts+0x1a>
80002a52:	cf 7b       	rjmp	80002a40 <INTC_init_interrupts+0x2c>
80002a54:	d8 22       	popm	r4-r7,pc
80002a56:	00 00       	add	r0,r0
80002a58:	80 00       	ld.sh	r0,r0[0x0]
80002a5a:	46 00       	lddsp	r0,sp[0x180]
80002a5c:	80 00       	ld.sh	r0,r0[0x0]
80002a5e:	48 00       	lddpc	r0,80002a5c <INTC_init_interrupts+0x48>
80002a60:	80 00       	ld.sh	r0,r0[0x0]
80002a62:	29 92       	sub	r2,-103
80002a64:	80 00       	ld.sh	r0,r0[0x0]
80002a66:	47 04       	lddsp	r4,sp[0x1c0]

80002a68 <_get_interrupt_handler>:
80002a68:	fe 78 08 00 	mov	r8,-63488
80002a6c:	e0 69 00 83 	mov	r9,131
80002a70:	f2 0c 01 0c 	sub	r12,r9,r12
80002a74:	f0 0c 03 29 	ld.w	r9,r8[r12<<0x2]
80002a78:	f2 ca ff c0 	sub	r10,r9,-64
80002a7c:	f0 0a 03 28 	ld.w	r8,r8[r10<<0x2]
80002a80:	58 08       	cp.w	r8,0
80002a82:	c0 21       	brne	80002a86 <_get_interrupt_handler+0x1e>
80002a84:	5e fd       	retal	0
80002a86:	f0 08 12 00 	clz	r8,r8
80002a8a:	48 5a       	lddpc	r10,80002a9c <_get_interrupt_handler+0x34>
80002a8c:	f4 09 00 39 	add	r9,r10,r9<<0x3
80002a90:	f0 08 11 1f 	rsub	r8,r8,31
80002a94:	72 19       	ld.w	r9,r9[0x4]
80002a96:	f2 08 03 2c 	ld.w	r12,r9[r8<<0x2]
80002a9a:	5e fc       	retal	r12
80002a9c:	80 00       	ld.sh	r0,r0[0x0]
80002a9e:	48 00       	lddpc	r0,80002a9c <_get_interrupt_handler+0x34>

80002aa0 <pm_set_osc0_mode>:
80002aa0:	78 a8       	ld.w	r8,r12[0x28]
80002aa2:	f1 db d0 03 	bfins	r8,r11,0x0,0x3
80002aa6:	99 a8       	st.w	r12[0x28],r8
80002aa8:	5e fc       	retal	r12
80002aaa:	d7 03       	nop

80002aac <pm_enable_osc0_crystal>:
80002aac:	d4 01       	pushm	lr
80002aae:	ec 5b bb 9f 	cp.w	r11,899999
80002ab2:	e0 8b 00 04 	brhi	80002aba <pm_enable_osc0_crystal+0xe>
80002ab6:	30 4b       	mov	r11,4
80002ab8:	c1 38       	rjmp	80002ade <pm_enable_osc0_crystal+0x32>
80002aba:	e0 68 c6 bf 	mov	r8,50879
80002abe:	ea 18 00 2d 	orh	r8,0x2d
80002ac2:	10 3b       	cp.w	r11,r8
80002ac4:	e0 8b 00 04 	brhi	80002acc <pm_enable_osc0_crystal+0x20>
80002ac8:	30 5b       	mov	r11,5
80002aca:	c0 a8       	rjmp	80002ade <pm_enable_osc0_crystal+0x32>
80002acc:	e0 68 12 00 	mov	r8,4608
80002ad0:	ea 18 00 7a 	orh	r8,0x7a
80002ad4:	10 3b       	cp.w	r11,r8
80002ad6:	f9 bb 03 06 	movlo	r11,6
80002ada:	f9 bb 02 07 	movhs	r11,7
80002ade:	f0 1f 00 02 	mcall	80002ae4 <pm_enable_osc0_crystal+0x38>
80002ae2:	d8 02       	popm	pc
80002ae4:	80 00       	ld.sh	r0,r0[0x0]
80002ae6:	2a a0       	sub	r0,-86

80002ae8 <pm_enable_clk0_no_wait>:
80002ae8:	78 a8       	ld.w	r8,r12[0x28]
80002aea:	f1 db d1 03 	bfins	r8,r11,0x8,0x3
80002aee:	99 a8       	st.w	r12[0x28],r8
80002af0:	78 08       	ld.w	r8,r12[0x0]
80002af2:	a3 a8       	sbr	r8,0x2
80002af4:	99 08       	st.w	r12[0x0],r8
80002af6:	5e fc       	retal	r12

80002af8 <pm_wait_for_clk0_ready>:
80002af8:	79 58       	ld.w	r8,r12[0x54]
80002afa:	e2 18 00 80 	andl	r8,0x80,COH
80002afe:	cf d0       	breq	80002af8 <pm_wait_for_clk0_ready>
80002b00:	5e fc       	retal	r12
80002b02:	d7 03       	nop

80002b04 <pm_enable_clk0>:
80002b04:	eb cd 40 80 	pushm	r7,lr
80002b08:	18 97       	mov	r7,r12
80002b0a:	f0 1f 00 04 	mcall	80002b18 <pm_enable_clk0+0x14>
80002b0e:	0e 9c       	mov	r12,r7
80002b10:	f0 1f 00 03 	mcall	80002b1c <pm_enable_clk0+0x18>
80002b14:	e3 cd 80 80 	ldm	sp++,r7,pc
80002b18:	80 00       	ld.sh	r0,r0[0x0]
80002b1a:	2a e8       	sub	r8,-82
80002b1c:	80 00       	ld.sh	r0,r0[0x0]
80002b1e:	2a f8       	sub	r8,-81

80002b20 <pm_cksel>:
80002b20:	eb cd 40 d0 	pushm	r4,r6-r7,lr
80002b24:	fa c4 ff f0 	sub	r4,sp,-16
80002b28:	30 0e       	mov	lr,0
80002b2a:	09 f7       	ld.ub	r7,r4[0x7]
80002b2c:	ef d7 c0 03 	bfextu	r7,r7,0x0,0x3
80002b30:	fd d7 d0 03 	bfins	lr,r7,0x0,0x3
80002b34:	09 b4       	ld.ub	r4,r4[0x3]
80002b36:	08 96       	mov	r6,r4
80002b38:	e9 d4 c0 01 	bfextu	r4,r4,0x0,0x1
80002b3c:	fd d4 d0 e1 	bfins	lr,r4,0x7,0x1
80002b40:	fd d7 d1 03 	bfins	lr,r7,0x8,0x3
80002b44:	fd d4 d1 e1 	bfins	lr,r4,0xf,0x1
80002b48:	fd da d2 03 	bfins	lr,r10,0x10,0x3
80002b4c:	fd db d2 e1 	bfins	lr,r11,0x17,0x1
80002b50:	fd d8 d3 03 	bfins	lr,r8,0x18,0x3
80002b54:	fd d9 d3 e1 	bfins	lr,r9,0x1f,0x1
80002b58:	99 1e       	st.w	r12[0x4],lr
80002b5a:	79 58       	ld.w	r8,r12[0x54]
80002b5c:	e2 18 00 20 	andl	r8,0x20,COH
80002b60:	cf d0       	breq	80002b5a <pm_cksel+0x3a>
80002b62:	e3 cd 80 d0 	ldm	sp++,r4,r6-r7,pc

80002b66 <pm_pll_setup>:
80002b66:	eb cd 40 80 	pushm	r7,lr
80002b6a:	40 27       	lddsp	r7,sp[0x8]
80002b6c:	30 0e       	mov	lr,0
80002b6e:	fd d8 d0 21 	bfins	lr,r8,0x1,0x1
80002b72:	fd d9 d1 04 	bfins	lr,r9,0x8,0x4
80002b76:	fd da d2 04 	bfins	lr,r10,0x10,0x4
80002b7a:	fd d7 d3 06 	bfins	lr,r7,0x18,0x6
80002b7e:	2f 8b       	sub	r11,-8
80002b80:	f8 0b 09 2e 	st.w	r12[r11<<0x2],lr
80002b84:	e3 cd 80 80 	ldm	sp++,r7,pc

80002b88 <pm_pll_set_option>:
80002b88:	d4 01       	pushm	lr
80002b8a:	2f 8b       	sub	r11,-8
80002b8c:	f8 0b 03 2e 	ld.w	lr,r12[r11<<0x2]
80002b90:	f5 e9 10 19 	or	r9,r10,r9<<0x1
80002b94:	f3 e8 10 28 	or	r8,r9,r8<<0x2
80002b98:	fd d8 d0 43 	bfins	lr,r8,0x2,0x3
80002b9c:	f8 0b 09 2e 	st.w	r12[r11<<0x2],lr
80002ba0:	d8 02       	popm	pc

80002ba2 <pm_pll_enable>:
80002ba2:	2f 8b       	sub	r11,-8
80002ba4:	f8 0b 03 28 	ld.w	r8,r12[r11<<0x2]
80002ba8:	a1 a8       	sbr	r8,0x0
80002baa:	f8 0b 09 28 	st.w	r12[r11<<0x2],r8
80002bae:	5e fc       	retal	r12

80002bb0 <pm_wait_for_pll0_locked>:
80002bb0:	79 58       	ld.w	r8,r12[0x54]
80002bb2:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002bb6:	cf d0       	breq	80002bb0 <pm_wait_for_pll0_locked>
80002bb8:	5e fc       	retal	r12

80002bba <pm_switch_to_clock>:
80002bba:	78 08       	ld.w	r8,r12[0x0]
80002bbc:	f1 db d0 02 	bfins	r8,r11,0x0,0x2
80002bc0:	99 08       	st.w	r12[0x0],r8
80002bc2:	5e fc       	retal	r12

80002bc4 <pm_switch_to_osc0>:
80002bc4:	eb cd 40 c0 	pushm	r6-r7,lr
80002bc8:	18 97       	mov	r7,r12
80002bca:	14 96       	mov	r6,r10
80002bcc:	f0 1f 00 06 	mcall	80002be4 <pm_switch_to_osc0+0x20>
80002bd0:	0c 9b       	mov	r11,r6
80002bd2:	0e 9c       	mov	r12,r7
80002bd4:	f0 1f 00 05 	mcall	80002be8 <pm_switch_to_osc0+0x24>
80002bd8:	30 1b       	mov	r11,1
80002bda:	0e 9c       	mov	r12,r7
80002bdc:	f0 1f 00 04 	mcall	80002bec <pm_switch_to_osc0+0x28>
80002be0:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
80002be4:	80 00       	ld.sh	r0,r0[0x0]
80002be6:	2a ac       	sub	r12,-86
80002be8:	80 00       	ld.sh	r0,r0[0x0]
80002bea:	2b 04       	sub	r4,-80
80002bec:	80 00       	ld.sh	r0,r0[0x0]
80002bee:	2b ba       	sub	r10,-69

80002bf0 <pwm_channel_init>:
80002bf0:	58 0b       	cp.w	r11,0
80002bf2:	c1 90       	breq	80002c24 <pwm_channel_init+0x34>
80002bf4:	58 6c       	cp.w	r12,6
80002bf6:	e0 8b 00 17 	brhi	80002c24 <pwm_channel_init+0x34>
80002bfa:	76 0a       	ld.w	r10,r11[0x0]
80002bfc:	fe 78 30 00 	mov	r8,-53248
80002c00:	f8 c9 ff f0 	sub	r9,r12,-16
80002c04:	a5 79       	lsl	r9,0x5
80002c06:	f0 09 00 09 	add	r9,r8,r9
80002c0a:	93 0a       	st.w	r9[0x0],r10
80002c0c:	76 19       	ld.w	r9,r11[0x4]
80002c0e:	a5 7c       	lsl	r12,0x5
80002c10:	f0 0c 00 0c 	add	r12,r8,r12
80002c14:	f8 c8 fd fc 	sub	r8,r12,-516
80002c18:	91 09       	st.w	r8[0x0],r9
80002c1a:	76 28       	ld.w	r8,r11[0x8]
80002c1c:	f8 cc fd f8 	sub	r12,r12,-520
80002c20:	99 08       	st.w	r12[0x0],r8
80002c22:	5e fd       	retal	0
80002c24:	5e ff       	retal	1

80002c26 <pwm_start_channels>:
80002c26:	18 98       	mov	r8,r12
80002c28:	e0 18 ff 80 	andl	r8,0xff80
80002c2c:	c0 20       	breq	80002c30 <pwm_start_channels+0xa>
80002c2e:	5e ff       	retal	1
80002c30:	fe 78 30 00 	mov	r8,-53248
80002c34:	91 1c       	st.w	r8[0x4],r12
80002c36:	5e fd       	retal	0

80002c38 <pwm_init>:
80002c38:	e1 b8 00 00 	mfsr	r8,0x0
80002c3c:	58 0c       	cp.w	r12,0
80002c3e:	c0 21       	brne	80002c42 <pwm_init+0xa>
80002c40:	5e ff       	retal	1
80002c42:	e6 18 00 01 	andh	r8,0x1,COH
80002c46:	c0 91       	brne	80002c58 <pwm_init+0x20>
80002c48:	d3 03       	ssrf	0x10
80002c4a:	fe 78 30 00 	mov	r8,-53248
80002c4e:	37 f9       	mov	r9,127
80002c50:	91 59       	st.w	r8[0x14],r9
80002c52:	70 78       	ld.w	r8,r8[0x1c]
80002c54:	d5 03       	csrf	0x10
80002c56:	c0 68       	rjmp	80002c62 <pwm_init+0x2a>
80002c58:	fe 78 30 00 	mov	r8,-53248
80002c5c:	37 f9       	mov	r9,127
80002c5e:	91 59       	st.w	r8[0x14],r9
80002c60:	70 78       	ld.w	r8,r8[0x1c]
80002c62:	78 08       	ld.w	r8,r12[0x0]
80002c64:	78 39       	ld.w	r9,r12[0xc]
80002c66:	a9 69       	lsl	r9,0x8
80002c68:	f3 e8 11 09 	or	r9,r9,r8<<0x10
80002c6c:	78 18       	ld.w	r8,r12[0x4]
80002c6e:	10 49       	or	r9,r8
80002c70:	78 28       	ld.w	r8,r12[0x8]
80002c72:	f3 e8 11 89 	or	r9,r9,r8<<0x18
80002c76:	fe 78 30 00 	mov	r8,-53248
80002c7a:	91 09       	st.w	r8[0x0],r9
80002c7c:	5e fd       	retal	0

80002c7e <getBaudDiv>:
80002c7e:	f8 c8 00 01 	sub	r8,r12,1
80002c82:	f0 0b 00 0b 	add	r11,r8,r11
80002c86:	f6 0c 0d 0a 	divu	r10,r11,r12
80002c8a:	14 9c       	mov	r12,r10
80002c8c:	f4 c8 00 01 	sub	r8,r10,1
80002c90:	e0 48 00 fe 	cp.w	r8,254
80002c94:	e0 88 00 03 	brls	80002c9a <getBaudDiv+0x1c>
80002c98:	5e fe       	retal	-1
80002c9a:	5c 8c       	casts.h	r12
80002c9c:	5e fc       	retal	r12

80002c9e <spi_initMaster>:
80002c9e:	f7 39 00 0d 	ld.ub	r9,r11[13]
80002ca2:	30 18       	mov	r8,1
80002ca4:	f0 09 18 00 	cp.b	r9,r8
80002ca8:	e0 88 00 04 	brls	80002cb0 <spi_initMaster+0x12>
80002cac:	30 2c       	mov	r12,2
80002cae:	5e fc       	retal	r12
80002cb0:	e0 68 00 80 	mov	r8,128
80002cb4:	99 08       	st.w	r12[0x0],r8
80002cb6:	78 18       	ld.w	r8,r12[0x4]
80002cb8:	30 19       	mov	r9,1
80002cba:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80002cbe:	f7 39 00 0d 	ld.ub	r9,r11[13]
80002cc2:	f1 d9 d0 81 	bfins	r8,r9,0x4,0x1
80002cc6:	30 09       	mov	r9,0
80002cc8:	f1 d9 d0 e1 	bfins	r8,r9,0x7,0x1
80002ccc:	30 fa       	mov	r10,15
80002cce:	f1 da d2 04 	bfins	r8,r10,0x10,0x4
80002cd2:	99 18       	st.w	r12[0x4],r8
80002cd4:	5e f9       	retal	r9

80002cd6 <spi_selectionMode>:
80002cd6:	d4 01       	pushm	lr
80002cd8:	30 18       	mov	r8,1
80002cda:	f0 0b 18 00 	cp.b	r11,r8
80002cde:	5f be       	srhi	lr
80002ce0:	f0 0a 18 00 	cp.b	r10,r8
80002ce4:	5f b8       	srhi	r8
80002ce6:	fd e8 10 08 	or	r8,lr,r8
80002cea:	c0 30       	breq	80002cf0 <spi_selectionMode+0x1a>
80002cec:	30 2c       	mov	r12,2
80002cee:	d8 02       	popm	pc
80002cf0:	78 18       	ld.w	r8,r12[0x4]
80002cf2:	f1 db d0 21 	bfins	r8,r11,0x1,0x1
80002cf6:	f1 da d0 41 	bfins	r8,r10,0x2,0x1
80002cfa:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80002cfe:	99 18       	st.w	r12[0x4],r8
80002d00:	d8 0a       	popm	pc,r12=0

80002d02 <spi_selectChip>:
80002d02:	78 18       	ld.w	r8,r12[0x4]
80002d04:	ea 18 00 0f 	orh	r8,0xf
80002d08:	99 18       	st.w	r12[0x4],r8
80002d0a:	78 18       	ld.w	r8,r12[0x4]
80002d0c:	e2 18 00 04 	andl	r8,0x4,COH
80002d10:	c0 f0       	breq	80002d2e <spi_selectChip+0x2c>
80002d12:	30 e8       	mov	r8,14
80002d14:	f0 0b 18 00 	cp.b	r11,r8
80002d18:	e0 8b 00 19 	brhi	80002d4a <spi_selectChip+0x48>
80002d1c:	78 18       	ld.w	r8,r12[0x4]
80002d1e:	b1 6b       	lsl	r11,0x10
80002d20:	ea 1b ff f0 	orh	r11,0xfff0
80002d24:	e8 1b ff ff 	orl	r11,0xffff
80002d28:	10 6b       	and	r11,r8
80002d2a:	99 1b       	st.w	r12[0x4],r11
80002d2c:	5e fd       	retal	0
80002d2e:	30 38       	mov	r8,3
80002d30:	f0 0b 18 00 	cp.b	r11,r8
80002d34:	e0 8b 00 0b 	brhi	80002d4a <spi_selectChip+0x48>
80002d38:	78 18       	ld.w	r8,r12[0x4]
80002d3a:	2f 0b       	sub	r11,-16
80002d3c:	30 19       	mov	r9,1
80002d3e:	f2 0b 09 4b 	lsl	r11,r9,r11
80002d42:	5c db       	com	r11
80002d44:	10 6b       	and	r11,r8
80002d46:	99 1b       	st.w	r12[0x4],r11
80002d48:	5e fd       	retal	0
80002d4a:	30 2c       	mov	r12,2
80002d4c:	5e fc       	retal	r12

80002d4e <spi_unselectChip>:
80002d4e:	e0 68 3a 98 	mov	r8,15000
80002d52:	c0 58       	rjmp	80002d5c <spi_unselectChip+0xe>
80002d54:	58 08       	cp.w	r8,0
80002d56:	c0 21       	brne	80002d5a <spi_unselectChip+0xc>
80002d58:	5e ff       	retal	1
80002d5a:	20 18       	sub	r8,1
80002d5c:	78 49       	ld.w	r9,r12[0x10]
80002d5e:	e2 19 02 00 	andl	r9,0x200,COH
80002d62:	cf 90       	breq	80002d54 <spi_unselectChip+0x6>
80002d64:	78 18       	ld.w	r8,r12[0x4]
80002d66:	ea 18 00 0f 	orh	r8,0xf
80002d6a:	99 18       	st.w	r12[0x4],r8
80002d6c:	fc 18 01 00 	movh	r8,0x100
80002d70:	99 08       	st.w	r12[0x0],r8
80002d72:	5e fd       	retal	0

80002d74 <spi_setupChipReg>:
80002d74:	eb cd 40 f8 	pushm	r3-r7,lr
80002d78:	18 95       	mov	r5,r12
80002d7a:	16 97       	mov	r7,r11
80002d7c:	f7 36 00 0c 	ld.ub	r6,r11[12]
80002d80:	30 38       	mov	r8,3
80002d82:	f0 06 18 00 	cp.b	r6,r8
80002d86:	e0 8b 00 4d 	brhi	80002e20 <spi_setupChipReg+0xac>
80002d8a:	f7 34 00 0b 	ld.ub	r4,r11[11]
80002d8e:	30 18       	mov	r8,1
80002d90:	f0 04 18 00 	cp.b	r4,r8
80002d94:	e0 8b 00 46 	brhi	80002e20 <spi_setupChipReg+0xac>
80002d98:	f7 33 00 08 	ld.ub	r3,r11[8]
80002d9c:	30 78       	mov	r8,7
80002d9e:	f0 03 18 00 	cp.b	r3,r8
80002da2:	e0 88 00 3f 	brls	80002e20 <spi_setupChipReg+0xac>
80002da6:	31 08       	mov	r8,16
80002da8:	f0 03 18 00 	cp.b	r3,r8
80002dac:	e0 8b 00 3a 	brhi	80002e20 <spi_setupChipReg+0xac>
80002db0:	14 9b       	mov	r11,r10
80002db2:	6e 1c       	ld.w	r12,r7[0x4]
80002db4:	f0 1f 00 1d 	mcall	80002e28 <spi_setupChipReg+0xb4>
80002db8:	c3 45       	brlt	80002e20 <spi_setupChipReg+0xac>
80002dba:	30 08       	mov	r8,0
80002dbc:	ec 09 16 01 	lsr	r9,r6,0x1
80002dc0:	f1 d9 d0 01 	bfins	r8,r9,0x0,0x1
80002dc4:	ec 16 00 01 	eorl	r6,0x1
80002dc8:	f1 d6 d0 21 	bfins	r8,r6,0x1,0x1
80002dcc:	f1 d4 d0 61 	bfins	r8,r4,0x3,0x1
80002dd0:	20 83       	sub	r3,8
80002dd2:	f1 d3 d0 84 	bfins	r8,r3,0x4,0x4
80002dd6:	f1 dc d1 08 	bfins	r8,r12,0x8,0x8
80002dda:	ef 39 00 09 	ld.ub	r9,r7[9]
80002dde:	f1 d9 d2 08 	bfins	r8,r9,0x10,0x8
80002de2:	ef 39 00 0a 	ld.ub	r9,r7[10]
80002de6:	f1 d9 d3 08 	bfins	r8,r9,0x18,0x8
80002dea:	0f 89       	ld.ub	r9,r7[0x0]
80002dec:	30 1a       	mov	r10,1
80002dee:	f4 09 18 00 	cp.b	r9,r10
80002df2:	c0 e0       	breq	80002e0e <spi_setupChipReg+0x9a>
80002df4:	c0 a3       	brcs	80002e08 <spi_setupChipReg+0x94>
80002df6:	30 2a       	mov	r10,2
80002df8:	f4 09 18 00 	cp.b	r9,r10
80002dfc:	c0 c0       	breq	80002e14 <spi_setupChipReg+0xa0>
80002dfe:	30 3a       	mov	r10,3
80002e00:	f4 09 18 00 	cp.b	r9,r10
80002e04:	c0 e1       	brne	80002e20 <spi_setupChipReg+0xac>
80002e06:	c0 a8       	rjmp	80002e1a <spi_setupChipReg+0xa6>
80002e08:	8b c8       	st.w	r5[0x30],r8
80002e0a:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e0e:	8b d8       	st.w	r5[0x34],r8
80002e10:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e14:	8b e8       	st.w	r5[0x38],r8
80002e16:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e1a:	8b f8       	st.w	r5[0x3c],r8
80002e1c:	e3 cf 80 f8 	ldm	sp++,r3-r7,pc,r12=0
80002e20:	30 2c       	mov	r12,2
80002e22:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80002e26:	00 00       	add	r0,r0
80002e28:	80 00       	ld.sh	r0,r0[0x0]
80002e2a:	2c 7e       	sub	lr,-57

80002e2c <spi_enable>:
80002e2c:	30 18       	mov	r8,1
80002e2e:	99 08       	st.w	r12[0x0],r8
80002e30:	5e fc       	retal	r12

80002e32 <spi_write>:
80002e32:	e0 68 3a 98 	mov	r8,15000
80002e36:	c0 58       	rjmp	80002e40 <spi_write+0xe>
80002e38:	58 08       	cp.w	r8,0
80002e3a:	c0 21       	brne	80002e3e <spi_write+0xc>
80002e3c:	5e ff       	retal	1
80002e3e:	20 18       	sub	r8,1
80002e40:	78 49       	ld.w	r9,r12[0x10]
80002e42:	e2 19 00 02 	andl	r9,0x2,COH
80002e46:	cf 90       	breq	80002e38 <spi_write+0x6>
80002e48:	5c 7b       	castu.h	r11
80002e4a:	99 3b       	st.w	r12[0xc],r11
80002e4c:	5e fd       	retal	0

80002e4e <spi_read>:
80002e4e:	e0 68 3a 98 	mov	r8,15000
80002e52:	c0 58       	rjmp	80002e5c <spi_read+0xe>
80002e54:	58 08       	cp.w	r8,0
80002e56:	c0 21       	brne	80002e5a <spi_read+0xc>
80002e58:	5e ff       	retal	1
80002e5a:	20 18       	sub	r8,1
80002e5c:	78 49       	ld.w	r9,r12[0x10]
80002e5e:	e2 19 02 01 	andl	r9,0x201,COH
80002e62:	e0 49 02 01 	cp.w	r9,513
80002e66:	cf 71       	brne	80002e54 <spi_read+0x6>
80002e68:	78 28       	ld.w	r8,r12[0x8]
80002e6a:	b6 08       	st.h	r11[0x0],r8
80002e6c:	5e fd       	retal	0
80002e6e:	d7 03       	nop

80002e70 <_stext>:
80002e70:	e0 7d 00 00 	mov	sp,65536
80002e74:	fe c0 e8 74 	sub	r0,pc,-6028
80002e78:	e3 b0 00 01 	mtsr	0x4,r0
80002e7c:	d5 53       	csrf	0x15
80002e7e:	30 40       	mov	r0,4
80002e80:	32 01       	mov	r1,32
80002e82:	02 30       	cp.w	r0,r1
80002e84:	c0 72       	brcc	80002e92 <idata_load_loop_end>
80002e86:	fe c2 b2 ce 	sub	r2,pc,-19762

80002e8a <idata_load_loop>:
80002e8a:	a5 05       	ld.d	r4,r2++
80002e8c:	a1 24       	st.d	r0++,r4
80002e8e:	02 30       	cp.w	r0,r1
80002e90:	cf d3       	brcs	80002e8a <idata_load_loop>

80002e92 <idata_load_loop_end>:
80002e92:	32 00       	mov	r0,32
80002e94:	e0 61 12 50 	mov	r1,4688
80002e98:	02 30       	cp.w	r0,r1
80002e9a:	c0 62       	brcc	80002ea6 <udata_clear_loop_end>
80002e9c:	30 02       	mov	r2,0
80002e9e:	30 03       	mov	r3,0

80002ea0 <udata_clear_loop>:
80002ea0:	a1 22       	st.d	r0++,r2
80002ea2:	02 30       	cp.w	r0,r1
80002ea4:	cf e3       	brcs	80002ea0 <udata_clear_loop>

80002ea6 <udata_clear_loop_end>:
80002ea6:	fe cf ea f6 	sub	pc,pc,-5386
80002eaa:	d7 03       	nop

80002eac <gfx_BeginNewTerminal>:
			}
		}
	}
}

void gfx_BeginNewTerminal(Vector2 topLeft){
80002eac:	eb cd 00 10 	pushm	r4
80002eb0:	fa c4 ff fc 	sub	r4,sp,-4
80002eb4:	88 09       	ld.sh	r9,r4[0x0]
	newLinePosition = topLeft;
80002eb6:	48 48       	lddpc	r8,80002ec4 <gfx_BeginNewTerminal+0x18>
80002eb8:	09 aa       	ld.ub	r10,r4[0x2]
80002eba:	b0 aa       	st.b	r8[0x2],r10
80002ebc:	b0 09       	st.h	r8[0x0],r9
}
80002ebe:	e3 cd 00 10 	ldm	sp++,r4
80002ec2:	5e fc       	retal	r12
80002ec4:	00 00       	add	r0,r0
80002ec6:	01 10       	ld.sh	r0,r0++

80002ec8 <gfx_Label>:
void gfx_FillScreen(Color color){


}

void gfx_Label(Vector2 position, char *content, uint8_t contentSize,TextSize textSize, Color color){
80002ec8:	d4 31       	pushm	r0-r7,lr
80002eca:	20 cd       	sub	sp,48
80002ecc:	fa c1 ff ac 	sub	r1,sp,-84
80002ed0:	18 90       	mov	r0,r12
80002ed2:	50 7b       	stdsp	sp[0x1c],r11
80002ed4:	50 0a       	stdsp	sp[0x0],r10
	if(*content == '\0' || contentSize == 0)
80002ed6:	19 89       	ld.ub	r9,r12[0x0]
80002ed8:	30 08       	mov	r8,0
80002eda:	f0 09 18 00 	cp.b	r9,r8
80002ede:	5f 09       	sreq	r9
80002ee0:	f0 0b 18 00 	cp.b	r11,r8
80002ee4:	5f 0a       	sreq	r10
80002ee6:	f3 ea 10 0a 	or	r10,r9,r10
80002eea:	f0 0a 18 00 	cp.b	r10,r8
80002eee:	e0 81 00 a3 	brne	80003034 <gfx_Label+0x16c>
		return;
	Vector2 fontSize = {8,8};
	if(textSize == Medium){
80002ef2:	40 0a       	lddsp	r10,sp[0x0]
80002ef4:	58 1a       	cp.w	r10,1
80002ef6:	f9 b8 00 14 	moveq	r8,20
80002efa:	fb f8 0a 02 	st.weq	sp[0x8],r8
80002efe:	f9 b2 00 10 	moveq	r2,16
80002f02:	f9 b2 01 08 	movne	r2,8
80002f06:	58 12       	cp.w	r2,1
80002f08:	fb f2 1a 02 	st.wne	sp[0x8],r2
		fontSize.x = 20;
		fontSize.y = 16;
	}
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
80002f0c:	40 78       	lddsp	r8,sp[0x1c]
80002f0e:	58 08       	cp.w	r8,0
80002f10:	e0 80 00 92 	breq	80003034 <gfx_Label+0x16c>
		if(*content == '\0')
80002f14:	58 09       	cp.w	r9,0
80002f16:	e0 81 00 8f 	brne	80003034 <gfx_Label+0x16c>
80002f1a:	30 8a       	mov	r10,8
80002f1c:	50 5a       	stdsp	sp[0x14],r10
80002f1e:	31 09       	mov	r9,16
80002f20:	50 39       	stdsp	sp[0xc],r9
80002f22:	30 08       	mov	r8,0
80002f24:	50 68       	stdsp	sp[0x18],r8
80002f26:	c0 f8       	rjmp	80002f44 <gfx_Label+0x7c>
	if(textSize == Medium){
		fontSize.x = 20;
		fontSize.y = 16;
	}
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
80002f28:	2f f0       	sub	r0,-1
80002f2a:	40 38       	lddsp	r8,sp[0xc]
80002f2c:	2f 28       	sub	r8,-14
80002f2e:	5c 88       	casts.h	r8
80002f30:	50 38       	stdsp	sp[0xc],r8
80002f32:	40 58       	lddsp	r8,sp[0x14]
80002f34:	2f 68       	sub	r8,-10
80002f36:	5c 88       	casts.h	r8
80002f38:	50 58       	stdsp	sp[0x14],r8
		if(*content == '\0')
80002f3a:	01 89       	ld.ub	r9,r0[0x0]
80002f3c:	30 08       	mov	r8,0
80002f3e:	f0 09 18 00 	cp.b	r9,r8
80002f42:	c7 90       	breq	80003034 <gfx_Label+0x16c>
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
80002f44:	40 2a       	lddsp	r10,sp[0x8]
80002f46:	58 0a       	cp.w	r10,0
80002f48:	c6 d0       	breq	80003022 <gfx_Label+0x15a>
80002f4a:	30 03       	mov	r3,0
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
80002f4c:	40 59       	lddsp	r9,sp[0x14]
80002f4e:	5c 89       	casts.h	r9
80002f50:	50 49       	stdsp	sp[0x10],r9
80002f52:	c5 a8       	rjmp	80003006 <gfx_Label+0x13e>
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
				}else{
					if(FONT8x8[*content - 31][x] & (1<<y))
						screen_SetPixel(vector2_Add(position,(Vector2){n * 10 + 8 - y, 8 - x}), color);
				}
				mask <<= 1;
80002f54:	a1 74       	lsl	r4,0x1
80002f56:	5c 84       	casts.h	r4
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
				if(textSize == Medium){
80002f58:	40 08       	lddsp	r8,sp[0x0]
80002f5a:	58 18       	cp.w	r8,1
80002f5c:	c2 61       	brne	80002fa8 <gfx_Label+0xe0>
					if(FONT16x12[*content - 31][x] & mask)
80002f5e:	01 88       	ld.ub	r8,r0[0x0]
80002f60:	f0 08 00 28 	add	r8,r8,r8<<0x2
80002f64:	e6 08 00 28 	add	r8,r3,r8<<0x2
80002f68:	f0 c8 02 6c 	sub	r8,r8,620
80002f6c:	4b 3a       	lddpc	r10,80003038 <gfx_Label+0x170>
80002f6e:	f4 08 04 18 	ld.sh	r8,r10[r8<<0x1]
80002f72:	e9 e8 00 08 	and	r8,r4,r8
80002f76:	30 09       	mov	r9,0
80002f78:	f2 08 19 00 	cp.h	r8,r9
80002f7c:	c3 60       	breq	80002fe8 <gfx_Label+0x120>
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
80002f7e:	fb 55 00 20 	st.h	sp[32],r5
80002f82:	1b f8       	ld.ub	r8,sp[0x7]
80002f84:	fb 68 00 22 	st.b	sp[34],r8
80002f88:	40 88       	lddsp	r8,sp[0x20]
80002f8a:	1a d8       	st.w	--sp,r8
80002f8c:	62 08       	ld.w	r8,r1[0x0]
80002f8e:	1a d8       	st.w	--sp,r8
80002f90:	fa cc ff d4 	sub	r12,sp,-44
80002f94:	f0 1f 00 2a 	mcall	8000303c <gfx_Label+0x174>
80002f98:	62 18       	ld.w	r8,r1[0x4]
80002f9a:	1a d8       	st.w	--sp,r8
80002f9c:	40 c8       	lddsp	r8,sp[0x30]
80002f9e:	1a d8       	st.w	--sp,r8
80002fa0:	f0 1f 00 28 	mcall	80003040 <gfx_Label+0x178>
80002fa4:	2f cd       	sub	sp,-16
80002fa6:	c2 18       	rjmp	80002fe8 <gfx_Label+0x120>
				}else{
					if(FONT8x8[*content - 31][x] & (1<<y))
80002fa8:	01 88       	ld.ub	r8,r0[0x0]
80002faa:	21 f8       	sub	r8,31
80002fac:	e6 08 00 38 	add	r8,r3,r8<<0x3
80002fb0:	4a 5a       	lddpc	r10,80003044 <gfx_Label+0x17c>
80002fb2:	f4 08 07 08 	ld.ub	r8,r10[r8]
80002fb6:	f0 07 08 48 	asr	r8,r8,r7
80002fba:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
80002fbe:	c1 50       	breq	80002fe8 <gfx_Label+0x120>
						screen_SetPixel(vector2_Add(position,(Vector2){n * 10 + 8 - y, 8 - x}), color);
80002fc0:	fb 56 00 28 	st.h	sp[40],r6
80002fc4:	1b e9       	ld.ub	r9,sp[0x6]
80002fc6:	fb 69 00 2a 	st.b	sp[42],r9
80002fca:	40 a8       	lddsp	r8,sp[0x28]
80002fcc:	1a d8       	st.w	--sp,r8
80002fce:	62 08       	ld.w	r8,r1[0x0]
80002fd0:	1a d8       	st.w	--sp,r8
80002fd2:	fa cc ff cc 	sub	r12,sp,-52
80002fd6:	f0 1f 00 1a 	mcall	8000303c <gfx_Label+0x174>
80002fda:	62 18       	ld.w	r8,r1[0x4]
80002fdc:	1a d8       	st.w	--sp,r8
80002fde:	40 e8       	lddsp	r8,sp[0x38]
80002fe0:	1a d8       	st.w	--sp,r8
80002fe2:	f0 1f 00 18 	mcall	80003040 <gfx_Label+0x178>
80002fe6:	2f cd       	sub	sp,-16
80002fe8:	2f f7       	sub	r7,-1
80002fea:	20 15       	sub	r5,1
80002fec:	5c 85       	casts.h	r5
80002fee:	20 16       	sub	r6,1
80002ff0:	5c 86       	casts.h	r6
		if(*content == '\0')
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
80002ff2:	ee 02 18 00 	cp.b	r2,r7
80002ff6:	fe 9b ff af 	brhi	80002f54 <gfx_Label+0x8c>
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
		if(*content == '\0')
			break;
		
		for(uint8_t x = 0; x < fontSize.x; x++){
80002ffa:	2f f3       	sub	r3,-1
80002ffc:	5c 53       	castu.b	r3
80002ffe:	40 2a       	lddsp	r10,sp[0x8]
80003000:	f4 03 19 00 	cp.h	r3,r10
80003004:	c0 f2       	brcc	80003022 <gfx_Label+0x15a>
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
80003006:	58 02       	cp.w	r2,0
80003008:	cf 90       	breq	80002ffa <gfx_Label+0x132>
8000300a:	40 46       	lddsp	r6,sp[0x10]
8000300c:	40 35       	lddsp	r5,sp[0xc]
8000300e:	5c 85       	casts.h	r5
80003010:	30 07       	mov	r7,0
80003012:	30 14       	mov	r4,1
				if(textSize == Medium){
					if(FONT16x12[*content - 31][x] & mask)
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
				}else{
					if(FONT8x8[*content - 31][x] & (1<<y))
						screen_SetPixel(vector2_Add(position,(Vector2){n * 10 + 8 - y, 8 - x}), color);
80003014:	e6 09 11 08 	rsub	r9,r3,8
80003018:	ba e9       	st.b	sp[0x6],r9
		for(uint8_t x = 0; x < fontSize.x; x++){
			uint16_t mask = 1;
			for(uint8_t y = 0; y < fontSize.y; y++){
				if(textSize == Medium){
					if(FONT16x12[*content - 31][x] & mask)
						screen_SetPixel(vector2_Add(position,(Vector2){n * 14 + 16 - y, 12 - x}), color);
8000301a:	e6 08 11 0c 	rsub	r8,r3,12
8000301e:	ba f8       	st.b	sp[0x7],r8
80003020:	c9 cb       	rjmp	80002f58 <gfx_Label+0x90>
	if(textSize == Medium){
		fontSize.x = 20;
		fontSize.y = 16;
	}
		
	for(uint8_t n = 0; n < contentSize; n++, content++){
80003022:	40 68       	lddsp	r8,sp[0x18]
80003024:	2f f8       	sub	r8,-1
80003026:	5c 58       	castu.b	r8
80003028:	50 68       	stdsp	sp[0x18],r8
8000302a:	40 7a       	lddsp	r10,sp[0x1c]
8000302c:	f0 0a 18 00 	cp.b	r10,r8
80003030:	fe 9b ff 7c 	brhi	80002f28 <gfx_Label+0x60>
				}
				mask <<= 1;
			}
		}
	}
}
80003034:	2f 4d       	sub	sp,-48
80003036:	d8 32       	popm	r0-r7,pc
80003038:	80 00       	ld.sh	r0,r0[0x0]
8000303a:	4b a8       	lddpc	r8,80003120 <gfx_AddLineToTerminal+0x58>
8000303c:	80 00       	ld.sh	r0,r0[0x0]
8000303e:	3c 44       	mov	r4,-60
80003040:	80 00       	ld.sh	r0,r0[0x0]
80003042:	38 2c       	mov	r12,-126
80003044:	80 00       	ld.sh	r0,r0[0x0]
80003046:	48 a0       	lddpc	r0,8000306c <gfx_DrawTerminalButton+0x24>

80003048 <gfx_DrawTerminalButton>:
	newLinePosition.y -= 20;
	//for animations purpose only
	cpu_delay_ms(100,BOARD_OSC0_HZ);
}

void gfx_DrawTerminalButton(Vector2 position, char* shortcut, char *description, uint8_t size, Color color){
80003048:	eb cd 40 fc 	pushm	r2-r7,lr
8000304c:	20 3d       	sub	sp,12
8000304e:	fa c4 ff d8 	sub	r4,sp,-40
80003052:	18 93       	mov	r3,r12
80003054:	16 92       	mov	r2,r11
80003056:	09 a7       	ld.ub	r7,r4[0x2]
80003058:	88 06       	ld.sh	r6,r4[0x0]
	
	screen_SetPixels(Rect(position.x,position.y-2,position.x+8,position.y+10),color);
8000305a:	0e 98       	mov	r8,r7
8000305c:	2f 68       	sub	r8,-10
8000305e:	ec c9 ff f8 	sub	r9,r6,-8
80003062:	0e 9a       	mov	r10,r7
80003064:	20 2a       	sub	r10,2
80003066:	5c 58       	castu.b	r8
80003068:	5c 79       	castu.h	r9
8000306a:	5c 5a       	castu.b	r10
8000306c:	f7 d6 c0 10 	bfextu	r11,r6,0x0,0x10
80003070:	1a 9c       	mov	r12,sp
80003072:	f0 1f 00 13 	mcall	800030bc <gfx_DrawTerminalButton+0x74>
80003076:	68 18       	ld.w	r8,r4[0x4]
80003078:	1a d8       	st.w	--sp,r8
8000307a:	fa e8 00 04 	ld.d	r8,sp[4]
8000307e:	bb 29       	st.d	--sp,r8
80003080:	f0 1f 00 10 	mcall	800030c0 <gfx_DrawTerminalButton+0x78>
	gfx_Label(position,shortcut, 1, Small, (Color){BLACK});
80003084:	30 05       	mov	r5,0
80003086:	50 55       	stdsp	sp[0x14],r5
80003088:	a8 a7       	st.b	r4[0x2],r7
8000308a:	a8 06       	st.h	r4[0x0],r6
8000308c:	1a d5       	st.w	--sp,r5
8000308e:	68 08       	ld.w	r8,r4[0x0]
80003090:	1a d8       	st.w	--sp,r8
80003092:	0a 9a       	mov	r10,r5
80003094:	30 1b       	mov	r11,1
80003096:	06 9c       	mov	r12,r3
80003098:	f0 1f 00 0b 	mcall	800030c4 <gfx_DrawTerminalButton+0x7c>
	position.x += 10;
	gfx_Label(position,description, 7, Small, color);
8000309c:	a8 a7       	st.b	r4[0x2],r7
8000309e:	2f 66       	sub	r6,-10
800030a0:	a8 06       	st.h	r4[0x0],r6
800030a2:	68 18       	ld.w	r8,r4[0x4]
800030a4:	1a d8       	st.w	--sp,r8
800030a6:	68 08       	ld.w	r8,r4[0x0]
800030a8:	1a d8       	st.w	--sp,r8
800030aa:	0a 9a       	mov	r10,r5
800030ac:	30 7b       	mov	r11,7
800030ae:	04 9c       	mov	r12,r2
800030b0:	f0 1f 00 05 	mcall	800030c4 <gfx_DrawTerminalButton+0x7c>
800030b4:	2f 9d       	sub	sp,-28
800030b6:	2f dd       	sub	sp,-12
800030b8:	e3 cd 80 fc 	ldm	sp++,r2-r7,pc
800030bc:	80 00       	ld.sh	r0,r0[0x0]
800030be:	36 18       	mov	r8,97
800030c0:	80 00       	ld.sh	r0,r0[0x0]
800030c2:	37 8c       	mov	r12,120
800030c4:	80 00       	ld.sh	r0,r0[0x0]
800030c6:	2e c8       	sub	r8,-20

800030c8 <gfx_AddLineToTerminal>:

void gfx_BeginNewTerminal(Vector2 topLeft){
	newLinePosition = topLeft;
}

void gfx_AddLineToTerminal(char *content, uint8_t contentSize, Color color){
800030c8:	eb cd 40 e0 	pushm	r5-r7,lr
800030cc:	18 95       	mov	r5,r12
800030ce:	16 96       	mov	r6,r11
	gfx_Label(newLinePosition, content, contentSize, Small, color);
800030d0:	40 48       	lddsp	r8,sp[0x10]
800030d2:	1a d8       	st.w	--sp,r8
800030d4:	49 57       	lddpc	r7,80003128 <gfx_AddLineToTerminal+0x60>
800030d6:	20 1d       	sub	sp,4
800030d8:	30 4a       	mov	r10,4
800030da:	0e 9b       	mov	r11,r7
800030dc:	1a 9c       	mov	r12,sp
800030de:	f0 1f 00 14 	mcall	8000312c <gfx_AddLineToTerminal+0x64>
800030e2:	30 0a       	mov	r10,0
800030e4:	0c 9b       	mov	r11,r6
800030e6:	0a 9c       	mov	r12,r5
800030e8:	f0 1f 00 12 	mcall	80003130 <gfx_AddLineToTerminal+0x68>
	newLinePosition.y -= 20;
800030ec:	0f a8       	ld.ub	r8,r7[0x2]
800030ee:	21 48       	sub	r8,20
800030f0:	ae a8       	st.b	r7[0x2],r8
 * \param  delay:   (input) delay in CPU cycles before timeout.
 * \param  cpu_time: (output) internal information used by the timer API.
 */
__always_inline static void cpu_set_timeout(unsigned long delay, t_cpu_time *cpu_time)
{
  cpu_time->delay_start_cycle = Get_system_register(AVR32_COUNT);
800030f2:	e1 b8 00 42 	mfsr	r8,0x108
  cpu_time->delay_end_cycle   = cpu_time->delay_start_cycle + delay;
800030f6:	e0 6a a8 00 	mov	r10,43008
800030fa:	ea 1a 00 61 	orh	r10,0x61
800030fe:	f0 0a 00 0a 	add	r10,r8,r10
80003102:	2f ed       	sub	sp,-8
 *
 * \return true if timeout occurred, otherwise false.
 */
__always_inline static unsigned long cpu_is_timeout(t_cpu_time *cpu_time)
{
  unsigned long current_cycle_count = Get_system_register(AVR32_COUNT);
80003104:	e1 b9 00 42 	mfsr	r9,0x108
  // Test if the timeout as already occurred.
  else if (cpu_time->timer_state == CPU_TIMER_STATE_REACHED)
    return true;

  // If the ending cycle count of this timeout is wrapped, ...
  else if (cpu_time->delay_start_cycle > cpu_time->delay_end_cycle)
80003108:	14 38       	cp.w	r8,r10
8000310a:	e0 88 00 08 	brls	8000311a <gfx_AddLineToTerminal+0x52>
  {
    if (current_cycle_count < cpu_time->delay_start_cycle && current_cycle_count > cpu_time->delay_end_cycle)
8000310e:	12 38       	cp.w	r8,r9
80003110:	fe 98 ff fa 	brls	80003104 <gfx_AddLineToTerminal+0x3c>
80003114:	12 3a       	cp.w	r10,r9
80003116:	c0 73       	brcs	80003124 <gfx_AddLineToTerminal+0x5c>
80003118:	cf 6b       	rjmp	80003104 <gfx_AddLineToTerminal+0x3c>
    }
    return false;
  }
  else
  {
    if (current_cycle_count < cpu_time->delay_start_cycle || current_cycle_count > cpu_time->delay_end_cycle)
8000311a:	12 38       	cp.w	r8,r9
8000311c:	e0 8b 00 04 	brhi	80003124 <gfx_AddLineToTerminal+0x5c>
80003120:	12 3a       	cp.w	r10,r9
80003122:	cf 12       	brcc	80003104 <gfx_AddLineToTerminal+0x3c>
80003124:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003128:	00 00       	add	r0,r0
8000312a:	01 10       	ld.sh	r0,r0++
8000312c:	80 00       	ld.sh	r0,r0[0x0]
8000312e:	43 bc       	lddsp	r12,sp[0xec]
80003130:	80 00       	ld.sh	r0,r0[0x0]
80003132:	2e c8       	sub	r8,-20

80003134 <switchISR>:
		menuChanged = true;
		switchState = 0;
	}
}

__attribute__((__interrupt__)) void switchISR(void){
80003134:	d4 01       	pushm	lr
	if 	(gpio_get_pin_interrupt_flag(PIN_SWITCH0))	{
80003136:	33 8c       	mov	r12,56
80003138:	f0 1f 00 13 	mcall	80003184 <switchISR+0x50>
8000313c:	c0 50       	breq	80003146 <switchISR+0x12>
		switchState = 1;
8000313e:	30 19       	mov	r9,1
80003140:	49 28       	lddpc	r8,80003188 <switchISR+0x54>
80003142:	b0 89       	st.b	r8[0x0],r9
80003144:	c1 88       	rjmp	80003174 <switchISR+0x40>
	}
	else if (gpio_get_pin_interrupt_flag(PIN_SWITCH1)){
80003146:	33 9c       	mov	r12,57
80003148:	f0 1f 00 0f 	mcall	80003184 <switchISR+0x50>
8000314c:	c0 50       	breq	80003156 <switchISR+0x22>
		switchState = 2;
8000314e:	30 29       	mov	r9,2
80003150:	48 e8       	lddpc	r8,80003188 <switchISR+0x54>
80003152:	b0 89       	st.b	r8[0x0],r9
80003154:	c1 08       	rjmp	80003174 <switchISR+0x40>
	}
	else if (gpio_get_pin_interrupt_flag(PIN_SWITCH2)){
80003156:	33 ac       	mov	r12,58
80003158:	f0 1f 00 0b 	mcall	80003184 <switchISR+0x50>
8000315c:	c0 50       	breq	80003166 <switchISR+0x32>
		switchState = 3;
8000315e:	30 39       	mov	r9,3
80003160:	48 a8       	lddpc	r8,80003188 <switchISR+0x54>
80003162:	b0 89       	st.b	r8[0x0],r9
80003164:	c0 88       	rjmp	80003174 <switchISR+0x40>
	}
	else if (gpio_get_pin_interrupt_flag(PIN_SWITCH3)){
80003166:	33 bc       	mov	r12,59
80003168:	f0 1f 00 07 	mcall	80003184 <switchISR+0x50>
8000316c:	c0 40       	breq	80003174 <switchISR+0x40>
		switchState = 4;
8000316e:	30 49       	mov	r9,4
80003170:	48 68       	lddpc	r8,80003188 <switchISR+0x54>
80003172:	b0 89       	st.b	r8[0x0],r9
	}
	AVR32_GPIO.port[1].ifrc = 0xFF000000;
80003174:	fc 19 ff 00 	movh	r9,0xff00
80003178:	fe 78 10 00 	mov	r8,-61440
8000317c:	f1 49 01 d8 	st.w	r8[472],r9
80003180:	d4 02       	popm	lr
80003182:	d6 03       	rete
80003184:	80 00       	ld.sh	r0,r0[0x0]
80003186:	29 7a       	sub	r10,-105
80003188:	00 00       	add	r0,r0
8000318a:	01 15       	ld.sh	r5,r0++

8000318c <mainMenu>:
 * otherwise only dynamic part are drawn
 *
 * Created 10.11.17 QVT
 * Last modified 10.11.17 QVT
 */
void mainMenu(bool firstDraw){
8000318c:	eb cd 40 e0 	pushm	r5-r7,lr
80003190:	20 8d       	sub	sp,32
	if(firstDraw){
80003192:	58 0c       	cp.w	r12,0
80003194:	c6 60       	breq	80003260 <mainMenu+0xd4>
		screen_SetPixels(Rect(0,0,320,240),(Color){BLACK});
80003196:	30 06       	mov	r6,0
80003198:	50 06       	stdsp	sp[0x0],r6
8000319a:	e0 68 00 f0 	mov	r8,240
8000319e:	e0 69 01 40 	mov	r9,320
800031a2:	0c 9a       	mov	r10,r6
800031a4:	0c 9b       	mov	r11,r6
800031a6:	fa cc ff fc 	sub	r12,sp,-4
800031aa:	f0 1f 00 5b 	mcall	80003314 <mainMenu+0x188>
800031ae:	40 08       	lddsp	r8,sp[0x0]
800031b0:	1a d8       	st.w	--sp,r8
800031b2:	fa e8 00 08 	ld.d	r8,sp[8]
800031b6:	bb 29       	st.d	--sp,r8
800031b8:	f0 1f 00 58 	mcall	80003318 <mainMenu+0x18c>
	
		gfx_DrawTerminalButton((Vector2){4,4},"<","Back",4,textColor);
800031bc:	30 47       	mov	r7,4
800031be:	0e 9a       	mov	r10,r7
800031c0:	4d 7b       	lddpc	r11,8000331c <mainMenu+0x190>
800031c2:	fa cc ff e8 	sub	r12,sp,-24
800031c6:	f0 1f 00 57 	mcall	80003320 <mainMenu+0x194>
800031ca:	4d 75       	lddpc	r5,80003324 <mainMenu+0x198>
800031cc:	20 1d       	sub	sp,4
800031ce:	0e 9a       	mov	r10,r7
800031d0:	0a 9b       	mov	r11,r5
800031d2:	1a 9c       	mov	r12,sp
800031d4:	f0 1f 00 53 	mcall	80003320 <mainMenu+0x194>
800031d8:	40 78       	lddsp	r8,sp[0x1c]
800031da:	1a d8       	st.w	--sp,r8
800031dc:	0e 9a       	mov	r10,r7
800031de:	4d 3b       	lddpc	r11,80003328 <mainMenu+0x19c>
800031e0:	4d 3c       	lddpc	r12,8000332c <mainMenu+0x1a0>
800031e2:	f0 1f 00 54 	mcall	80003330 <mainMenu+0x1a4>
		gfx_DrawTerminalButton((Vector2){82,4},"v","Down",4,textColor);
800031e6:	0e 9a       	mov	r10,r7
800031e8:	4d 3b       	lddpc	r11,80003334 <mainMenu+0x1a8>
800031ea:	fa cc ff dc 	sub	r12,sp,-36
800031ee:	f0 1f 00 4d 	mcall	80003320 <mainMenu+0x194>
800031f2:	20 1d       	sub	sp,4
800031f4:	0e 9a       	mov	r10,r7
800031f6:	0a 9b       	mov	r11,r5
800031f8:	1a 9c       	mov	r12,sp
800031fa:	f0 1f 00 4a 	mcall	80003320 <mainMenu+0x194>
800031fe:	40 a8       	lddsp	r8,sp[0x28]
80003200:	1a d8       	st.w	--sp,r8
80003202:	0e 9a       	mov	r10,r7
80003204:	4c db       	lddpc	r11,80003338 <mainMenu+0x1ac>
80003206:	4c ec       	lddpc	r12,8000333c <mainMenu+0x1b0>
80003208:	f0 1f 00 4a 	mcall	80003330 <mainMenu+0x1a4>
		gfx_DrawTerminalButton((Vector2){160,4},"^","Up",4,textColor);
8000320c:	0e 9a       	mov	r10,r7
8000320e:	4c db       	lddpc	r11,80003340 <mainMenu+0x1b4>
80003210:	fa cc ff d0 	sub	r12,sp,-48
80003214:	f0 1f 00 43 	mcall	80003320 <mainMenu+0x194>
80003218:	20 1d       	sub	sp,4
8000321a:	0e 9a       	mov	r10,r7
8000321c:	0a 9b       	mov	r11,r5
8000321e:	1a 9c       	mov	r12,sp
80003220:	f0 1f 00 40 	mcall	80003320 <mainMenu+0x194>
80003224:	40 d8       	lddsp	r8,sp[0x34]
80003226:	1a d8       	st.w	--sp,r8
80003228:	0e 9a       	mov	r10,r7
8000322a:	4c 7b       	lddpc	r11,80003344 <mainMenu+0x1b8>
8000322c:	4c 7c       	lddpc	r12,80003348 <mainMenu+0x1bc>
8000322e:	f0 1f 00 41 	mcall	80003330 <mainMenu+0x1a4>
		gfx_DrawTerminalButton((Vector2){238,4},">","Ok",4,textColor);
80003232:	2f 7d       	sub	sp,-36
80003234:	0e 9a       	mov	r10,r7
80003236:	4c 6b       	lddpc	r11,8000334c <mainMenu+0x1c0>
80003238:	fa cc ff e8 	sub	r12,sp,-24
8000323c:	f0 1f 00 39 	mcall	80003320 <mainMenu+0x194>
80003240:	20 1d       	sub	sp,4
80003242:	0e 9a       	mov	r10,r7
80003244:	0a 9b       	mov	r11,r5
80003246:	1a 9c       	mov	r12,sp
80003248:	f0 1f 00 36 	mcall	80003320 <mainMenu+0x194>
8000324c:	40 78       	lddsp	r8,sp[0x1c]
8000324e:	1a d8       	st.w	--sp,r8
80003250:	0e 9a       	mov	r10,r7
80003252:	4c 0b       	lddpc	r11,80003350 <mainMenu+0x1c4>
80003254:	4c 0c       	lddpc	r12,80003354 <mainMenu+0x1c8>
80003256:	f0 1f 00 37 	mcall	80003330 <mainMenu+0x1a4>
		menuChanged = false;
8000325a:	4c 08       	lddpc	r8,80003358 <mainMenu+0x1cc>
8000325c:	b0 86       	st.b	r8[0x0],r6
8000325e:	2f ed       	sub	sp,-8
	}
	
	gfx_BeginNewTerminal((Vector2){20,220});
80003260:	30 47       	mov	r7,4
80003262:	0e 9a       	mov	r10,r7
80003264:	4b eb       	lddpc	r11,8000335c <mainMenu+0x1d0>
80003266:	fa cc ff e4 	sub	r12,sp,-28
8000326a:	f0 1f 00 2e 	mcall	80003320 <mainMenu+0x194>
8000326e:	40 78       	lddsp	r8,sp[0x1c]
80003270:	1a d8       	st.w	--sp,r8
80003272:	f0 1f 00 3c 	mcall	80003360 <mainMenu+0x1d4>
		
	gfx_AddLineToTerminal("status --complete", 17, textColor);
80003276:	4a c6       	lddpc	r6,80003324 <mainMenu+0x198>
80003278:	20 1d       	sub	sp,4
8000327a:	0e 9a       	mov	r10,r7
8000327c:	0c 9b       	mov	r11,r6
8000327e:	1a 9c       	mov	r12,sp
80003280:	f0 1f 00 28 	mcall	80003320 <mainMenu+0x194>
80003284:	31 1b       	mov	r11,17
80003286:	4b 8c       	lddpc	r12,80003364 <mainMenu+0x1d8>
80003288:	f0 1f 00 38 	mcall	80003368 <mainMenu+0x1dc>
	gfx_AddLineToTerminal("> Vendredi", 10, textColor);
8000328c:	20 1d       	sub	sp,4
8000328e:	0e 9a       	mov	r10,r7
80003290:	0c 9b       	mov	r11,r6
80003292:	1a 9c       	mov	r12,sp
80003294:	f0 1f 00 23 	mcall	80003320 <mainMenu+0x194>
80003298:	30 ab       	mov	r11,10
8000329a:	4b 5c       	lddpc	r12,8000336c <mainMenu+0x1e0>
8000329c:	f0 1f 00 33 	mcall	80003368 <mainMenu+0x1dc>
	gfx_AddLineToTerminal("> 10/11/17", 10, textColor);
800032a0:	20 1d       	sub	sp,4
800032a2:	0e 9a       	mov	r10,r7
800032a4:	0c 9b       	mov	r11,r6
800032a6:	1a 9c       	mov	r12,sp
800032a8:	f0 1f 00 1e 	mcall	80003320 <mainMenu+0x194>
800032ac:	30 ab       	mov	r11,10
800032ae:	4b 1c       	lddpc	r12,80003370 <mainMenu+0x1e4>
800032b0:	f0 1f 00 2e 	mcall	80003368 <mainMenu+0x1dc>
	gfx_AddLineToTerminal("> 15h 30m" ,  9, textColor);
800032b4:	20 1d       	sub	sp,4
800032b6:	0e 9a       	mov	r10,r7
800032b8:	0c 9b       	mov	r11,r6
800032ba:	1a 9c       	mov	r12,sp
800032bc:	f0 1f 00 19 	mcall	80003320 <mainMenu+0x194>
800032c0:	30 9b       	mov	r11,9
800032c2:	4a dc       	lddpc	r12,80003374 <mainMenu+0x1e8>
800032c4:	f0 1f 00 29 	mcall	80003368 <mainMenu+0x1dc>
	gfx_AddLineToTerminal("> Alarme 1 disabled" ,  28, textColor);
800032c8:	20 1d       	sub	sp,4
800032ca:	0e 9a       	mov	r10,r7
800032cc:	0c 9b       	mov	r11,r6
800032ce:	1a 9c       	mov	r12,sp
800032d0:	f0 1f 00 14 	mcall	80003320 <mainMenu+0x194>
800032d4:	31 cb       	mov	r11,28
800032d6:	4a 9c       	lddpc	r12,80003378 <mainMenu+0x1ec>
800032d8:	f0 1f 00 24 	mcall	80003368 <mainMenu+0x1dc>
	gfx_AddLineToTerminal("> Alarme 2 enabled" ,  27, textColor);
800032dc:	20 1d       	sub	sp,4
800032de:	0e 9a       	mov	r10,r7
800032e0:	0c 9b       	mov	r11,r6
800032e2:	1a 9c       	mov	r12,sp
800032e4:	f0 1f 00 0f 	mcall	80003320 <mainMenu+0x194>
800032e8:	31 bb       	mov	r11,27
800032ea:	4a 5c       	lddpc	r12,8000337c <mainMenu+0x1f0>
800032ec:	f0 1f 00 1f 	mcall	80003368 <mainMenu+0x1dc>
	
	if(switchState == 4){
800032f0:	2f 9d       	sub	sp,-28
800032f2:	4a 48       	lddpc	r8,80003380 <mainMenu+0x1f4>
800032f4:	11 88       	ld.ub	r8,r8[0x0]
800032f6:	ee 08 18 00 	cp.b	r8,r7
800032fa:	c0 91       	brne	8000330c <mainMenu+0x180>
		currentMenuId = MUSIC;
800032fc:	30 18       	mov	r8,1
800032fe:	4a 29       	lddpc	r9,80003384 <mainMenu+0x1f8>
80003300:	b2 88       	st.b	r9[0x0],r8
		menuChanged = true;
80003302:	49 69       	lddpc	r9,80003358 <mainMenu+0x1cc>
80003304:	b2 88       	st.b	r9[0x0],r8
		switchState = 0;
80003306:	30 09       	mov	r9,0
80003308:	49 e8       	lddpc	r8,80003380 <mainMenu+0x1f4>
8000330a:	b0 89       	st.b	r8[0x0],r9
	}
}
8000330c:	2f 8d       	sub	sp,-32
8000330e:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
80003312:	00 00       	add	r0,r0
80003314:	80 00       	ld.sh	r0,r0[0x0]
80003316:	36 18       	mov	r8,97
80003318:	80 00       	ld.sh	r0,r0[0x0]
8000331a:	37 8c       	mov	r12,120
8000331c:	80 00       	ld.sh	r0,r0[0x0]
8000331e:	7b 50       	ld.w	r0,sp[0x54]
80003320:	80 00       	ld.sh	r0,r0[0x0]
80003322:	43 bc       	lddsp	r12,sp[0xec]
80003324:	00 00       	add	r0,r0
80003326:	00 0c       	add	r12,r0
80003328:	80 00       	ld.sh	r0,r0[0x0]
8000332a:	7a 94       	ld.w	r4,sp[0x24]
8000332c:	80 00       	ld.sh	r0,r0[0x0]
8000332e:	7a 9c       	ld.w	r12,sp[0x24]
80003330:	80 00       	ld.sh	r0,r0[0x0]
80003332:	30 48       	mov	r8,4
80003334:	80 00       	ld.sh	r0,r0[0x0]
80003336:	7b 5c       	ld.w	r12,sp[0x54]
80003338:	80 00       	ld.sh	r0,r0[0x0]
8000333a:	7a a0       	ld.w	r0,sp[0x28]
8000333c:	80 00       	ld.sh	r0,r0[0x0]
8000333e:	7a a8       	ld.w	r8,sp[0x28]
80003340:	80 00       	ld.sh	r0,r0[0x0]
80003342:	7a 90       	ld.w	r0,sp[0x24]
80003344:	80 00       	ld.sh	r0,r0[0x0]
80003346:	7a ac       	ld.w	r12,sp[0x28]
80003348:	80 00       	ld.sh	r0,r0[0x0]
8000334a:	7a b0       	ld.w	r0,sp[0x2c]
8000334c:	80 00       	ld.sh	r0,r0[0x0]
8000334e:	7b 54       	ld.w	r4,sp[0x54]
80003350:	80 00       	ld.sh	r0,r0[0x0]
80003352:	7a b4       	ld.w	r4,sp[0x2c]
80003354:	80 00       	ld.sh	r0,r0[0x0]
80003356:	7a b8       	ld.w	r8,sp[0x2c]
80003358:	00 00       	add	r0,r0
8000335a:	01 14       	ld.sh	r4,r0++
8000335c:	80 00       	ld.sh	r0,r0[0x0]
8000335e:	7b 60       	ld.w	r0,sp[0x58]
80003360:	80 00       	ld.sh	r0,r0[0x0]
80003362:	2e ac       	sub	r12,-22
80003364:	80 00       	ld.sh	r0,r0[0x0]
80003366:	7a bc       	ld.w	r12,sp[0x2c]
80003368:	80 00       	ld.sh	r0,r0[0x0]
8000336a:	30 c8       	mov	r8,12
8000336c:	80 00       	ld.sh	r0,r0[0x0]
8000336e:	7a d0       	ld.w	r0,sp[0x34]
80003370:	80 00       	ld.sh	r0,r0[0x0]
80003372:	7a dc       	ld.w	r12,sp[0x34]
80003374:	80 00       	ld.sh	r0,r0[0x0]
80003376:	7a e8       	ld.w	r8,sp[0x38]
80003378:	80 00       	ld.sh	r0,r0[0x0]
8000337a:	7a f4       	ld.w	r4,sp[0x3c]
8000337c:	80 00       	ld.sh	r0,r0[0x0]
8000337e:	7b 08       	ld.w	r8,sp[0x40]
80003380:	00 00       	add	r0,r0
80003382:	01 15       	ld.sh	r5,r0++
80003384:	00 00       	add	r0,r0
80003386:	01 16       	ld.sh	r6,r0++

80003388 <musicMenu>:
 * otherwise only dynamic part are drawn
 *
 * Created 10.11.17 QVT
 * Last modified 10.11.17 QVT
 */
void musicMenu(bool firstDraw){
80003388:	eb cd 40 e0 	pushm	r5-r7,lr
8000338c:	20 9d       	sub	sp,36
	if(firstDraw){
8000338e:	58 0c       	cp.w	r12,0
80003390:	c6 60       	breq	8000345c <musicMenu+0xd4>
		screen_SetPixels(Rect(0,0,320,240),(Color){BLACK});
80003392:	30 06       	mov	r6,0
80003394:	50 06       	stdsp	sp[0x0],r6
80003396:	e0 68 00 f0 	mov	r8,240
8000339a:	e0 69 01 40 	mov	r9,320
8000339e:	0c 9a       	mov	r10,r6
800033a0:	0c 9b       	mov	r11,r6
800033a2:	fa cc ff fc 	sub	r12,sp,-4
800033a6:	f0 1f 00 50 	mcall	800034e4 <musicMenu+0x15c>
800033aa:	40 08       	lddsp	r8,sp[0x0]
800033ac:	1a d8       	st.w	--sp,r8
800033ae:	fa e8 00 08 	ld.d	r8,sp[8]
800033b2:	bb 29       	st.d	--sp,r8
800033b4:	f0 1f 00 4d 	mcall	800034e8 <musicMenu+0x160>
	
		gfx_DrawTerminalButton((Vector2){4,4},"<","Back",4,textColor);
800033b8:	30 47       	mov	r7,4
800033ba:	0e 9a       	mov	r10,r7
800033bc:	4c cb       	lddpc	r11,800034ec <musicMenu+0x164>
800033be:	fa cc ff e8 	sub	r12,sp,-24
800033c2:	f0 1f 00 4c 	mcall	800034f0 <musicMenu+0x168>
800033c6:	4c c5       	lddpc	r5,800034f4 <musicMenu+0x16c>
800033c8:	20 1d       	sub	sp,4
800033ca:	0e 9a       	mov	r10,r7
800033cc:	0a 9b       	mov	r11,r5
800033ce:	1a 9c       	mov	r12,sp
800033d0:	f0 1f 00 48 	mcall	800034f0 <musicMenu+0x168>
800033d4:	40 78       	lddsp	r8,sp[0x1c]
800033d6:	1a d8       	st.w	--sp,r8
800033d8:	0e 9a       	mov	r10,r7
800033da:	4c 8b       	lddpc	r11,800034f8 <musicMenu+0x170>
800033dc:	4c 8c       	lddpc	r12,800034fc <musicMenu+0x174>
800033de:	f0 1f 00 49 	mcall	80003500 <musicMenu+0x178>
		gfx_DrawTerminalButton((Vector2){82,4},"v","Down",4,textColor);
800033e2:	0e 9a       	mov	r10,r7
800033e4:	4c 8b       	lddpc	r11,80003504 <musicMenu+0x17c>
800033e6:	fa cc ff dc 	sub	r12,sp,-36
800033ea:	f0 1f 00 42 	mcall	800034f0 <musicMenu+0x168>
800033ee:	20 1d       	sub	sp,4
800033f0:	0e 9a       	mov	r10,r7
800033f2:	0a 9b       	mov	r11,r5
800033f4:	1a 9c       	mov	r12,sp
800033f6:	f0 1f 00 3f 	mcall	800034f0 <musicMenu+0x168>
800033fa:	40 a8       	lddsp	r8,sp[0x28]
800033fc:	1a d8       	st.w	--sp,r8
800033fe:	0e 9a       	mov	r10,r7
80003400:	4c 2b       	lddpc	r11,80003508 <musicMenu+0x180>
80003402:	4c 3c       	lddpc	r12,8000350c <musicMenu+0x184>
80003404:	f0 1f 00 3f 	mcall	80003500 <musicMenu+0x178>
		gfx_DrawTerminalButton((Vector2){160,4},"^","Up",4,textColor);
80003408:	0e 9a       	mov	r10,r7
8000340a:	4c 2b       	lddpc	r11,80003510 <musicMenu+0x188>
8000340c:	fa cc ff d0 	sub	r12,sp,-48
80003410:	f0 1f 00 38 	mcall	800034f0 <musicMenu+0x168>
80003414:	20 1d       	sub	sp,4
80003416:	0e 9a       	mov	r10,r7
80003418:	0a 9b       	mov	r11,r5
8000341a:	1a 9c       	mov	r12,sp
8000341c:	f0 1f 00 35 	mcall	800034f0 <musicMenu+0x168>
80003420:	40 d8       	lddsp	r8,sp[0x34]
80003422:	1a d8       	st.w	--sp,r8
80003424:	0e 9a       	mov	r10,r7
80003426:	4b cb       	lddpc	r11,80003514 <musicMenu+0x18c>
80003428:	4b cc       	lddpc	r12,80003518 <musicMenu+0x190>
8000342a:	f0 1f 00 36 	mcall	80003500 <musicMenu+0x178>
		gfx_DrawTerminalButton((Vector2){238,4},">","Ok",4,textColor);
8000342e:	2f 7d       	sub	sp,-36
80003430:	0e 9a       	mov	r10,r7
80003432:	4b bb       	lddpc	r11,8000351c <musicMenu+0x194>
80003434:	fa cc ff e8 	sub	r12,sp,-24
80003438:	f0 1f 00 2e 	mcall	800034f0 <musicMenu+0x168>
8000343c:	20 1d       	sub	sp,4
8000343e:	0e 9a       	mov	r10,r7
80003440:	0a 9b       	mov	r11,r5
80003442:	1a 9c       	mov	r12,sp
80003444:	f0 1f 00 2b 	mcall	800034f0 <musicMenu+0x168>
80003448:	40 78       	lddsp	r8,sp[0x1c]
8000344a:	1a d8       	st.w	--sp,r8
8000344c:	0e 9a       	mov	r10,r7
8000344e:	4b 5b       	lddpc	r11,80003520 <musicMenu+0x198>
80003450:	4b 5c       	lddpc	r12,80003524 <musicMenu+0x19c>
80003452:	f0 1f 00 2c 	mcall	80003500 <musicMenu+0x178>
		menuChanged = false;
80003456:	4b 58       	lddpc	r8,80003528 <musicMenu+0x1a0>
80003458:	b0 86       	st.b	r8[0x0],r6
8000345a:	2f ed       	sub	sp,-8
	}
	
	gfx_BeginNewTerminal((Vector2){20,220});
8000345c:	30 47       	mov	r7,4
8000345e:	0e 9a       	mov	r10,r7
80003460:	4b 3b       	lddpc	r11,8000352c <musicMenu+0x1a4>
80003462:	fa cc ff e4 	sub	r12,sp,-28
80003466:	f0 1f 00 23 	mcall	800034f0 <musicMenu+0x168>
8000346a:	40 78       	lddsp	r8,sp[0x1c]
8000346c:	1a d8       	st.w	--sp,r8
8000346e:	f0 1f 00 31 	mcall	80003530 <musicMenu+0x1a8>
		
	gfx_AddLineToTerminal("ls | grep .wave", 15, textColor);
80003472:	20 1d       	sub	sp,4
80003474:	0e 9a       	mov	r10,r7
80003476:	4a 0b       	lddpc	r11,800034f4 <musicMenu+0x16c>
80003478:	1a 9c       	mov	r12,sp
8000347a:	f0 1f 00 1e 	mcall	800034f0 <musicMenu+0x168>
8000347e:	30 fb       	mov	r11,15
80003480:	4a dc       	lddpc	r12,80003534 <musicMenu+0x1ac>
80003482:	f0 1f 00 2e 	mcall	80003538 <musicMenu+0x1b0>
	if(sdcard_CheckPresence()){
80003486:	f0 1f 00 2e 	mcall	8000353c <musicMenu+0x1b4>
8000348a:	2f ed       	sub	sp,-8
8000348c:	58 0c       	cp.w	r12,0
8000348e:	c0 e0       	breq	800034aa <musicMenu+0x122>
		gfx_AddLineToTerminal((char*)(file_menu[0].name),25,textColor);
80003490:	20 1d       	sub	sp,4
80003492:	0e 9a       	mov	r10,r7
80003494:	49 8b       	lddpc	r11,800034f4 <musicMenu+0x16c>
80003496:	1a 9c       	mov	r12,sp
80003498:	f0 1f 00 16 	mcall	800034f0 <musicMenu+0x168>
8000349c:	31 9b       	mov	r11,25
8000349e:	4a 9c       	lddpc	r12,80003540 <musicMenu+0x1b8>
800034a0:	2f 9c       	sub	r12,-7
800034a2:	f0 1f 00 26 	mcall	80003538 <musicMenu+0x1b0>
800034a6:	0e 0d       	add	sp,r7
800034a8:	c0 d8       	rjmp	800034c2 <musicMenu+0x13a>
	}
	else{
		gfx_AddLineToTerminal("No results",10,(Color){RED});
800034aa:	30 08       	mov	r8,0
800034ac:	50 88       	stdsp	sp[0x20],r8
800034ae:	31 f8       	mov	r8,31
800034b0:	fb 58 00 20 	st.h	sp[32],r8
800034b4:	40 88       	lddsp	r8,sp[0x20]
800034b6:	1a d8       	st.w	--sp,r8
800034b8:	30 ab       	mov	r11,10
800034ba:	4a 3c       	lddpc	r12,80003544 <musicMenu+0x1bc>
800034bc:	f0 1f 00 1f 	mcall	80003538 <musicMenu+0x1b0>
800034c0:	2f fd       	sub	sp,-4
	}
	
	if(switchState == 1){
800034c2:	4a 28       	lddpc	r8,80003548 <musicMenu+0x1c0>
800034c4:	11 89       	ld.ub	r9,r8[0x0]
800034c6:	30 18       	mov	r8,1
800034c8:	f0 09 18 00 	cp.b	r9,r8
800034cc:	c0 91       	brne	800034de <musicMenu+0x156>
		currentMenuId = MAIN;
800034ce:	30 08       	mov	r8,0
800034d0:	49 f9       	lddpc	r9,8000354c <musicMenu+0x1c4>
800034d2:	b2 88       	st.b	r9[0x0],r8
		menuChanged = true;
800034d4:	30 1a       	mov	r10,1
800034d6:	49 59       	lddpc	r9,80003528 <musicMenu+0x1a0>
800034d8:	b2 8a       	st.b	r9[0x0],r10
		switchState = 0;
800034da:	49 c9       	lddpc	r9,80003548 <musicMenu+0x1c0>
800034dc:	b2 88       	st.b	r9[0x0],r8
	}
}
800034de:	2f 7d       	sub	sp,-36
800034e0:	e3 cd 80 e0 	ldm	sp++,r5-r7,pc
800034e4:	80 00       	ld.sh	r0,r0[0x0]
800034e6:	36 18       	mov	r8,97
800034e8:	80 00       	ld.sh	r0,r0[0x0]
800034ea:	37 8c       	mov	r12,120
800034ec:	80 00       	ld.sh	r0,r0[0x0]
800034ee:	7b 4c       	ld.w	r12,sp[0x50]
800034f0:	80 00       	ld.sh	r0,r0[0x0]
800034f2:	43 bc       	lddsp	r12,sp[0xec]
800034f4:	00 00       	add	r0,r0
800034f6:	00 0c       	add	r12,r0
800034f8:	80 00       	ld.sh	r0,r0[0x0]
800034fa:	7a 94       	ld.w	r4,sp[0x24]
800034fc:	80 00       	ld.sh	r0,r0[0x0]
800034fe:	7a 9c       	ld.w	r12,sp[0x24]
80003500:	80 00       	ld.sh	r0,r0[0x0]
80003502:	30 48       	mov	r8,4
80003504:	80 00       	ld.sh	r0,r0[0x0]
80003506:	7b 58       	ld.w	r8,sp[0x54]
80003508:	80 00       	ld.sh	r0,r0[0x0]
8000350a:	7a a0       	ld.w	r0,sp[0x28]
8000350c:	80 00       	ld.sh	r0,r0[0x0]
8000350e:	7a a8       	ld.w	r8,sp[0x28]
80003510:	80 00       	ld.sh	r0,r0[0x0]
80003512:	7a 88       	ld.w	r8,sp[0x20]
80003514:	80 00       	ld.sh	r0,r0[0x0]
80003516:	7a ac       	ld.w	r12,sp[0x28]
80003518:	80 00       	ld.sh	r0,r0[0x0]
8000351a:	7a b0       	ld.w	r0,sp[0x2c]
8000351c:	80 00       	ld.sh	r0,r0[0x0]
8000351e:	7a 8c       	ld.w	r12,sp[0x20]
80003520:	80 00       	ld.sh	r0,r0[0x0]
80003522:	7a b4       	ld.w	r4,sp[0x2c]
80003524:	80 00       	ld.sh	r0,r0[0x0]
80003526:	7a b8       	ld.w	r8,sp[0x2c]
80003528:	00 00       	add	r0,r0
8000352a:	01 14       	ld.sh	r4,r0++
8000352c:	80 00       	ld.sh	r0,r0[0x0]
8000352e:	7b 48       	ld.w	r8,sp[0x50]
80003530:	80 00       	ld.sh	r0,r0[0x0]
80003532:	2e ac       	sub	r12,-22
80003534:	80 00       	ld.sh	r0,r0[0x0]
80003536:	7b 1c       	ld.w	r12,sp[0x44]
80003538:	80 00       	ld.sh	r0,r0[0x0]
8000353a:	30 c8       	mov	r8,12
8000353c:	80 00       	ld.sh	r0,r0[0x0]
8000353e:	3d f0       	mov	r0,-33
80003540:	00 00       	add	r0,r0
80003542:	05 a8       	ld.ub	r8,r2[0x2]
80003544:	80 00       	ld.sh	r0,r0[0x0]
80003546:	7b 2c       	ld.w	r12,sp[0x48]
80003548:	00 00       	add	r0,r0
8000354a:	01 15       	ld.sh	r5,r0++
8000354c:	00 00       	add	r0,r0
8000354e:	01 16       	ld.sh	r6,r0++

80003550 <gui_Init>:

/************************************************************************/
/* FUNCTIONS                                                            */
/************************************************************************/

void gui_Init(void){
80003550:	d4 01       	pushm	lr
	gpio_enable_pin_glitch_filter(PIN_SWITCH0);
80003552:	33 8c       	mov	r12,56
80003554:	f0 1f 00 17 	mcall	800035b0 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH0);
80003558:	33 8c       	mov	r12,56
8000355a:	f0 1f 00 17 	mcall	800035b4 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH0, GPIO_RISING_EDGE);
8000355e:	30 1b       	mov	r11,1
80003560:	33 8c       	mov	r12,56
80003562:	f0 1f 00 16 	mcall	800035b8 <gui_Init+0x68>

	gpio_enable_pin_glitch_filter(PIN_SWITCH1);
80003566:	33 9c       	mov	r12,57
80003568:	f0 1f 00 12 	mcall	800035b0 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH1);
8000356c:	33 9c       	mov	r12,57
8000356e:	f0 1f 00 12 	mcall	800035b4 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH1, GPIO_RISING_EDGE);
80003572:	30 1b       	mov	r11,1
80003574:	33 9c       	mov	r12,57
80003576:	f0 1f 00 11 	mcall	800035b8 <gui_Init+0x68>

	gpio_enable_pin_glitch_filter(PIN_SWITCH2);
8000357a:	33 ac       	mov	r12,58
8000357c:	f0 1f 00 0d 	mcall	800035b0 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH2);
80003580:	33 ac       	mov	r12,58
80003582:	f0 1f 00 0d 	mcall	800035b4 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH2, GPIO_RISING_EDGE);
80003586:	30 1b       	mov	r11,1
80003588:	33 ac       	mov	r12,58
8000358a:	f0 1f 00 0c 	mcall	800035b8 <gui_Init+0x68>

	gpio_enable_pin_glitch_filter(PIN_SWITCH3);
8000358e:	33 bc       	mov	r12,59
80003590:	f0 1f 00 08 	mcall	800035b0 <gui_Init+0x60>
	gpio_enable_pin_pull_up(PIN_SWITCH3);
80003594:	33 bc       	mov	r12,59
80003596:	f0 1f 00 08 	mcall	800035b4 <gui_Init+0x64>
	gpio_enable_pin_interrupt(PIN_SWITCH3, GPIO_RISING_EDGE);
8000359a:	30 1b       	mov	r11,1
8000359c:	33 bc       	mov	r12,59
8000359e:	f0 1f 00 07 	mcall	800035b8 <gui_Init+0x68>
	
	INTC_register_interrupt(&switchISR, AVR32_GPIO_IRQ7, AVR32_INTC_INT0);
800035a2:	30 0a       	mov	r10,0
800035a4:	34 7b       	mov	r11,71
800035a6:	48 6c       	lddpc	r12,800035bc <gui_Init+0x6c>
800035a8:	f0 1f 00 06 	mcall	800035c0 <gui_Init+0x70>
}
800035ac:	d8 02       	popm	pc
800035ae:	00 00       	add	r0,r0
800035b0:	80 00       	ld.sh	r0,r0[0x0]
800035b2:	29 1e       	sub	lr,-111
800035b4:	80 00       	ld.sh	r0,r0[0x0]
800035b6:	28 d0       	sub	r0,-115
800035b8:	80 00       	ld.sh	r0,r0[0x0]
800035ba:	29 34       	sub	r4,-109
800035bc:	80 00       	ld.sh	r0,r0[0x0]
800035be:	31 34       	mov	r4,19
800035c0:	80 00       	ld.sh	r0,r0[0x0]
800035c2:	29 94       	sub	r4,-103

800035c4 <rectangle_GetArea>:
800035c4:	eb cd 00 10 	pushm	r4
800035c8:	20 1d       	sub	sp,4
800035ca:	fa c4 ff f8 	sub	r4,sp,-8
800035ce:	09 e9       	ld.ub	r9,r4[0x6]
800035d0:	2f f9       	sub	r9,-1
800035d2:	09 aa       	ld.ub	r10,r4[0x2]
800035d4:	14 19       	sub	r9,r10
800035d6:	88 a8       	ld.uh	r8,r4[0x4]
800035d8:	2f f8       	sub	r8,-1
800035da:	88 8a       	ld.uh	r10,r4[0x0]
800035dc:	14 18       	sub	r8,r10
800035de:	f2 08 02 48 	mul	r8,r9,r8
800035e2:	50 08       	stdsp	sp[0x0],r8
800035e4:	40 0c       	lddsp	r12,sp[0x0]
800035e6:	2f fd       	sub	sp,-4
800035e8:	e3 cd 00 10 	ldm	sp++,r4
800035ec:	5e fc       	retal	r12

800035ee <rectangle_VerifySize>:
800035ee:	98 08       	ld.sh	r8,r12[0x0]
800035f0:	f6 08 19 00 	cp.h	r8,r11
800035f4:	f9 fb bc 00 	st.hhi	r12[0x0],r11
800035f8:	98 28       	ld.sh	r8,r12[0x4]
800035fa:	f6 08 19 00 	cp.h	r8,r11
800035fe:	f9 fb bc 02 	st.hhi	r12[0x4],r11
80003602:	19 a8       	ld.ub	r8,r12[0x2]
80003604:	f4 08 18 00 	cp.b	r8,r10
80003608:	f9 fa be 02 	st.bhi	r12[0x2],r10
8000360c:	19 e8       	ld.ub	r8,r12[0x6]
8000360e:	f4 08 18 00 	cp.b	r8,r10
80003612:	f9 fa be 06 	st.bhi	r12[0x6],r10
80003616:	5e fc       	retal	r12

80003618 <Rect>:
80003618:	d4 01       	pushm	lr
8000361a:	18 9e       	mov	lr,r12
8000361c:	b8 0b       	st.h	r12[0x0],r11
8000361e:	b8 aa       	st.b	r12[0x2],r10
80003620:	b8 29       	st.h	r12[0x4],r9
80003622:	b8 e8       	st.b	r12[0x6],r8
80003624:	d8 02       	popm	pc
80003626:	d7 03       	nop

80003628 <_writeRegister>:
80003628:	eb cd 40 c0 	pushm	r6-r7,lr
8000362c:	18 96       	mov	r6,r12
8000362e:	16 97       	mov	r7,r11
80003630:	30 0b       	mov	r11,0
80003632:	fe 7c 24 00 	mov	r12,-56320
80003636:	f0 1f 00 1a 	mcall	8000369c <_writeRegister+0x74>
8000363a:	37 0b       	mov	r11,112
8000363c:	fe 7c 24 00 	mov	r12,-56320
80003640:	f0 1f 00 18 	mcall	800036a0 <_writeRegister+0x78>
80003644:	30 0b       	mov	r11,0
80003646:	fe 7c 24 00 	mov	r12,-56320
8000364a:	f0 1f 00 16 	mcall	800036a0 <_writeRegister+0x78>
8000364e:	0c 9b       	mov	r11,r6
80003650:	fe 7c 24 00 	mov	r12,-56320
80003654:	f0 1f 00 13 	mcall	800036a0 <_writeRegister+0x78>
80003658:	30 0b       	mov	r11,0
8000365a:	fe 7c 24 00 	mov	r12,-56320
8000365e:	f0 1f 00 12 	mcall	800036a4 <_writeRegister+0x7c>
80003662:	30 0b       	mov	r11,0
80003664:	fe 7c 24 00 	mov	r12,-56320
80003668:	f0 1f 00 0d 	mcall	8000369c <_writeRegister+0x74>
8000366c:	37 2b       	mov	r11,114
8000366e:	fe 7c 24 00 	mov	r12,-56320
80003672:	f0 1f 00 0c 	mcall	800036a0 <_writeRegister+0x78>
80003676:	f7 d7 c1 08 	bfextu	r11,r7,0x8,0x8
8000367a:	fe 7c 24 00 	mov	r12,-56320
8000367e:	f0 1f 00 09 	mcall	800036a0 <_writeRegister+0x78>
80003682:	0e 9b       	mov	r11,r7
80003684:	5c 5b       	castu.b	r11
80003686:	fe 7c 24 00 	mov	r12,-56320
8000368a:	f0 1f 00 06 	mcall	800036a0 <_writeRegister+0x78>
8000368e:	30 0b       	mov	r11,0
80003690:	fe 7c 24 00 	mov	r12,-56320
80003694:	f0 1f 00 04 	mcall	800036a4 <_writeRegister+0x7c>
80003698:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
8000369c:	80 00       	ld.sh	r0,r0[0x0]
8000369e:	2d 02       	sub	r2,-48
800036a0:	80 00       	ld.sh	r0,r0[0x0]
800036a2:	2e 32       	sub	r2,-29
800036a4:	80 00       	ld.sh	r0,r0[0x0]
800036a6:	2d 4e       	sub	lr,-44

800036a8 <_setStart>:
800036a8:	eb cd 40 10 	pushm	r4,lr
800036ac:	fa c4 ff f8 	sub	r4,sp,-8
800036b0:	09 ab       	ld.ub	r11,r4[0x2]
800036b2:	32 0c       	mov	r12,32
800036b4:	f0 1f 00 04 	mcall	800036c4 <_setStart+0x1c>
800036b8:	88 8b       	ld.uh	r11,r4[0x0]
800036ba:	32 1c       	mov	r12,33
800036bc:	f0 1f 00 02 	mcall	800036c4 <_setStart+0x1c>
800036c0:	e3 cd 80 10 	ldm	sp++,r4,pc
800036c4:	80 00       	ld.sh	r0,r0[0x0]
800036c6:	36 28       	mov	r8,98

800036c8 <_setLimits>:
800036c8:	eb cd 40 10 	pushm	r4,lr
800036cc:	fa c4 ff f8 	sub	r4,sp,-8
800036d0:	09 ab       	ld.ub	r11,r4[0x2]
800036d2:	35 0c       	mov	r12,80
800036d4:	f0 1f 00 08 	mcall	800036f4 <_setLimits+0x2c>
800036d8:	09 eb       	ld.ub	r11,r4[0x6]
800036da:	35 1c       	mov	r12,81
800036dc:	f0 1f 00 06 	mcall	800036f4 <_setLimits+0x2c>
800036e0:	88 8b       	ld.uh	r11,r4[0x0]
800036e2:	35 2c       	mov	r12,82
800036e4:	f0 1f 00 04 	mcall	800036f4 <_setLimits+0x2c>
800036e8:	88 ab       	ld.uh	r11,r4[0x4]
800036ea:	35 2c       	mov	r12,82
800036ec:	f0 1f 00 02 	mcall	800036f4 <_setLimits+0x2c>
800036f0:	e3 cd 80 10 	ldm	sp++,r4,pc
800036f4:	80 00       	ld.sh	r0,r0[0x0]
800036f6:	36 28       	mov	r8,98

800036f8 <_selectRegister>:
800036f8:	eb cd 40 80 	pushm	r7,lr
800036fc:	18 97       	mov	r7,r12
800036fe:	30 0b       	mov	r11,0
80003700:	fe 7c 24 00 	mov	r12,-56320
80003704:	f0 1f 00 0c 	mcall	80003734 <_selectRegister+0x3c>
80003708:	37 0b       	mov	r11,112
8000370a:	fe 7c 24 00 	mov	r12,-56320
8000370e:	f0 1f 00 0b 	mcall	80003738 <_selectRegister+0x40>
80003712:	30 0b       	mov	r11,0
80003714:	fe 7c 24 00 	mov	r12,-56320
80003718:	f0 1f 00 08 	mcall	80003738 <_selectRegister+0x40>
8000371c:	0e 9b       	mov	r11,r7
8000371e:	fe 7c 24 00 	mov	r12,-56320
80003722:	f0 1f 00 06 	mcall	80003738 <_selectRegister+0x40>
80003726:	30 0b       	mov	r11,0
80003728:	fe 7c 24 00 	mov	r12,-56320
8000372c:	f0 1f 00 04 	mcall	8000373c <_selectRegister+0x44>
80003730:	e3 cd 80 80 	ldm	sp++,r7,pc
80003734:	80 00       	ld.sh	r0,r0[0x0]
80003736:	2d 02       	sub	r2,-48
80003738:	80 00       	ld.sh	r0,r0[0x0]
8000373a:	2e 32       	sub	r2,-29
8000373c:	80 00       	ld.sh	r0,r0[0x0]
8000373e:	2d 4e       	sub	lr,-44

80003740 <_writeRAM>:
80003740:	eb cd 40 80 	pushm	r7,lr
80003744:	18 97       	mov	r7,r12
80003746:	30 0b       	mov	r11,0
80003748:	fe 7c 24 00 	mov	r12,-56320
8000374c:	f0 1f 00 0d 	mcall	80003780 <_writeRAM+0x40>
80003750:	37 2b       	mov	r11,114
80003752:	fe 7c 24 00 	mov	r12,-56320
80003756:	f0 1f 00 0c 	mcall	80003784 <_writeRAM+0x44>
8000375a:	f7 d7 c1 08 	bfextu	r11,r7,0x8,0x8
8000375e:	fe 7c 24 00 	mov	r12,-56320
80003762:	f0 1f 00 09 	mcall	80003784 <_writeRAM+0x44>
80003766:	0e 9b       	mov	r11,r7
80003768:	5c 5b       	castu.b	r11
8000376a:	fe 7c 24 00 	mov	r12,-56320
8000376e:	f0 1f 00 06 	mcall	80003784 <_writeRAM+0x44>
80003772:	30 0b       	mov	r11,0
80003774:	fe 7c 24 00 	mov	r12,-56320
80003778:	f0 1f 00 04 	mcall	80003788 <_writeRAM+0x48>
8000377c:	e3 cd 80 80 	ldm	sp++,r7,pc
80003780:	80 00       	ld.sh	r0,r0[0x0]
80003782:	2d 02       	sub	r2,-48
80003784:	80 00       	ld.sh	r0,r0[0x0]
80003786:	2e 32       	sub	r2,-29
80003788:	80 00       	ld.sh	r0,r0[0x0]
8000378a:	2d 4e       	sub	lr,-44

8000378c <screen_SetPixels>:
8000378c:	eb cd 40 d0 	pushm	r4,r6-r7,lr
80003790:	20 3d       	sub	sp,12
80003792:	fa c4 ff e4 	sub	r4,sp,-28
80003796:	e0 6a 00 f0 	mov	r10,240
8000379a:	e0 6b 01 40 	mov	r11,320
8000379e:	08 9c       	mov	r12,r4
800037a0:	f0 1f 00 1b 	mcall	8000380c <screen_SetPixels+0x80>
800037a4:	e8 e8 00 00 	ld.d	r8,r4[0]
800037a8:	bb 29       	st.d	--sp,r8
800037aa:	f0 1f 00 1a 	mcall	80003810 <screen_SetPixels+0x84>
800037ae:	68 08       	ld.w	r8,r4[0x0]
800037b0:	1a d8       	st.w	--sp,r8
800037b2:	f0 1f 00 19 	mcall	80003814 <screen_SetPixels+0x88>
800037b6:	32 2c       	mov	r12,34
800037b8:	f0 1f 00 18 	mcall	80003818 <screen_SetPixels+0x8c>
800037bc:	e8 e8 00 00 	ld.d	r8,r4[0]
800037c0:	bb 29       	st.d	--sp,r8
800037c2:	f0 1f 00 17 	mcall	8000381c <screen_SetPixels+0x90>
800037c6:	50 5c       	stdsp	sp[0x14],r12
800037c8:	40 57       	lddsp	r7,sp[0x14]
800037ca:	2f bd       	sub	sp,-20
800037cc:	58 07       	cp.w	r7,0
800037ce:	c0 70       	breq	800037dc <screen_SetPixels+0x50>
800037d0:	88 c6       	ld.uh	r6,r4[0x8]
800037d2:	0c 9c       	mov	r12,r6
800037d4:	f0 1f 00 13 	mcall	80003820 <screen_SetPixels+0x94>
800037d8:	20 17       	sub	r7,1
800037da:	cf c1       	brne	800037d2 <screen_SetPixels+0x46>
800037dc:	30 0b       	mov	r11,0
800037de:	fe 7c 24 00 	mov	r12,-56320
800037e2:	f0 1f 00 11 	mcall	80003824 <screen_SetPixels+0x98>
800037e6:	e0 68 00 f0 	mov	r8,240
800037ea:	e0 69 01 40 	mov	r9,320
800037ee:	30 0a       	mov	r10,0
800037f0:	14 9b       	mov	r11,r10
800037f2:	fa cc ff fc 	sub	r12,sp,-4
800037f6:	f0 1f 00 0d 	mcall	80003828 <screen_SetPixels+0x9c>
800037fa:	fa e8 00 04 	ld.d	r8,sp[4]
800037fe:	bb 29       	st.d	--sp,r8
80003800:	f0 1f 00 04 	mcall	80003810 <screen_SetPixels+0x84>
80003804:	2f ed       	sub	sp,-8
80003806:	2f dd       	sub	sp,-12
80003808:	e3 cd 80 d0 	ldm	sp++,r4,r6-r7,pc
8000380c:	80 00       	ld.sh	r0,r0[0x0]
8000380e:	35 ee       	mov	lr,94
80003810:	80 00       	ld.sh	r0,r0[0x0]
80003812:	36 c8       	mov	r8,108
80003814:	80 00       	ld.sh	r0,r0[0x0]
80003816:	36 a8       	mov	r8,106
80003818:	80 00       	ld.sh	r0,r0[0x0]
8000381a:	36 f8       	mov	r8,111
8000381c:	80 00       	ld.sh	r0,r0[0x0]
8000381e:	35 c4       	mov	r4,92
80003820:	80 00       	ld.sh	r0,r0[0x0]
80003822:	37 40       	mov	r0,116
80003824:	80 00       	ld.sh	r0,r0[0x0]
80003826:	2d 4e       	sub	lr,-44
80003828:	80 00       	ld.sh	r0,r0[0x0]
8000382a:	36 18       	mov	r8,97

8000382c <screen_SetPixel>:
8000382c:	eb cd 40 10 	pushm	r4,lr
80003830:	fa c4 ff f8 	sub	r4,sp,-8
80003834:	68 08       	ld.w	r8,r4[0x0]
80003836:	1a d8       	st.w	--sp,r8
80003838:	f0 1f 00 08 	mcall	80003858 <screen_SetPixel+0x2c>
8000383c:	32 2c       	mov	r12,34
8000383e:	f0 1f 00 08 	mcall	8000385c <screen_SetPixel+0x30>
80003842:	88 ac       	ld.uh	r12,r4[0x4]
80003844:	f0 1f 00 07 	mcall	80003860 <screen_SetPixel+0x34>
80003848:	30 0b       	mov	r11,0
8000384a:	fe 7c 24 00 	mov	r12,-56320
8000384e:	f0 1f 00 06 	mcall	80003864 <screen_SetPixel+0x38>
80003852:	2f fd       	sub	sp,-4
80003854:	e3 cd 80 10 	ldm	sp++,r4,pc
80003858:	80 00       	ld.sh	r0,r0[0x0]
8000385a:	36 a8       	mov	r8,106
8000385c:	80 00       	ld.sh	r0,r0[0x0]
8000385e:	36 f8       	mov	r8,111
80003860:	80 00       	ld.sh	r0,r0[0x0]
80003862:	37 40       	mov	r0,116
80003864:	80 00       	ld.sh	r0,r0[0x0]
80003866:	2d 4e       	sub	lr,-44

80003868 <screen_Init>:
80003868:	eb cd 40 80 	pushm	r7,lr
8000386c:	21 8d       	sub	sp,96
8000386e:	fe f8 03 a2 	ld.w	r8,pc[930]
80003872:	fa cc ff c0 	sub	r12,sp,-64
80003876:	f0 ea 00 00 	ld.d	r10,r8[0]
8000387a:	f8 eb 00 00 	st.d	r12[0],r10
8000387e:	f0 ea 00 08 	ld.d	r10,r8[8]
80003882:	f8 eb 00 08 	st.d	r12[8],r10
80003886:	f0 ea 00 10 	ld.d	r10,r8[16]
8000388a:	f8 eb 00 10 	st.d	r12[16],r10
8000388e:	f0 e8 00 18 	ld.d	r8,r8[24]
80003892:	f8 e9 00 18 	st.d	r12[24],r8
80003896:	fe f8 03 7e 	ld.w	r8,pc[894]
8000389a:	fa c7 ff d0 	sub	r7,sp,-48
8000389e:	f0 ea 00 00 	ld.d	r10,r8[0]
800038a2:	ee eb 00 00 	st.d	r7[0],r10
800038a6:	f0 e8 00 08 	ld.d	r8,r8[8]
800038aa:	ee e9 00 08 	st.d	r7[8],r8
800038ae:	30 4b       	mov	r11,4
800038b0:	f0 1f 00 da 	mcall	80003c18 <screen_Init+0x3b0>
800038b4:	0e 9b       	mov	r11,r7
800038b6:	fe 7c 24 00 	mov	r12,-56320
800038ba:	f0 1f 00 d9 	mcall	80003c1c <screen_Init+0x3b4>
800038be:	fe 7c 24 00 	mov	r12,-56320
800038c2:	f0 1f 00 d8 	mcall	80003c20 <screen_Init+0x3b8>
800038c6:	e0 6a 90 00 	mov	r10,36864
800038ca:	ea 1a 03 d0 	orh	r10,0x3d0
800038ce:	0e 9b       	mov	r11,r7
800038d0:	fe 7c 24 00 	mov	r12,-56320
800038d4:	f0 1f 00 d4 	mcall	80003c24 <screen_Init+0x3bc>
800038d8:	30 ec       	mov	r12,14
800038da:	f0 1f 00 d4 	mcall	80003c28 <screen_Init+0x3c0>
800038de:	e1 b8 00 42 	mfsr	r8,0x108
800038e2:	e0 6a a8 00 	mov	r10,43008
800038e6:	ea 1a 00 61 	orh	r10,0x61
800038ea:	f0 0a 00 0a 	add	r10,r8,r10
800038ee:	e1 b9 00 42 	mfsr	r9,0x108
800038f2:	14 38       	cp.w	r8,r10
800038f4:	e0 88 00 08 	brls	80003904 <screen_Init+0x9c>
800038f8:	12 38       	cp.w	r8,r9
800038fa:	fe 98 ff fa 	brls	800038ee <screen_Init+0x86>
800038fe:	12 3a       	cp.w	r10,r9
80003900:	c4 e3       	brcs	8000399c <screen_Init+0x134>
80003902:	cf 6b       	rjmp	800038ee <screen_Init+0x86>
80003904:	12 38       	cp.w	r8,r9
80003906:	e0 8b 00 4b 	brhi	8000399c <screen_Init+0x134>
8000390a:	12 3a       	cp.w	r10,r9
8000390c:	c4 83       	brcs	8000399c <screen_Init+0x134>
8000390e:	cf 0b       	rjmp	800038ee <screen_Init+0x86>
80003910:	e1 b9 00 42 	mfsr	r9,0x108
80003914:	14 38       	cp.w	r8,r10
80003916:	e0 88 00 08 	brls	80003926 <screen_Init+0xbe>
8000391a:	12 38       	cp.w	r8,r9
8000391c:	fe 98 ff fa 	brls	80003910 <screen_Init+0xa8>
80003920:	12 3a       	cp.w	r10,r9
80003922:	c4 73       	brcs	800039b0 <screen_Init+0x148>
80003924:	cf 6b       	rjmp	80003910 <screen_Init+0xa8>
80003926:	12 38       	cp.w	r8,r9
80003928:	e0 8b 00 44 	brhi	800039b0 <screen_Init+0x148>
8000392c:	12 3a       	cp.w	r10,r9
8000392e:	c4 13       	brcs	800039b0 <screen_Init+0x148>
80003930:	cf 0b       	rjmp	80003910 <screen_Init+0xa8>
80003932:	e1 b9 00 42 	mfsr	r9,0x108
80003936:	14 38       	cp.w	r8,r10
80003938:	e0 88 00 08 	brls	80003948 <screen_Init+0xe0>
8000393c:	12 38       	cp.w	r8,r9
8000393e:	fe 98 ff fa 	brls	80003932 <screen_Init+0xca>
80003942:	12 3a       	cp.w	r10,r9
80003944:	c4 73       	brcs	800039d2 <screen_Init+0x16a>
80003946:	cf 6b       	rjmp	80003932 <screen_Init+0xca>
80003948:	12 38       	cp.w	r8,r9
8000394a:	e0 8b 00 44 	brhi	800039d2 <screen_Init+0x16a>
8000394e:	12 3a       	cp.w	r10,r9
80003950:	c4 13       	brcs	800039d2 <screen_Init+0x16a>
80003952:	cf 0b       	rjmp	80003932 <screen_Init+0xca>
80003954:	e1 b9 00 42 	mfsr	r9,0x108
80003958:	14 38       	cp.w	r8,r10
8000395a:	e0 88 00 08 	brls	8000396a <screen_Init+0x102>
8000395e:	12 38       	cp.w	r8,r9
80003960:	fe 98 ff fa 	brls	80003954 <screen_Init+0xec>
80003964:	12 3a       	cp.w	r10,r9
80003966:	c5 43       	brcs	80003a0e <screen_Init+0x1a6>
80003968:	cf 6b       	rjmp	80003954 <screen_Init+0xec>
8000396a:	12 38       	cp.w	r8,r9
8000396c:	e0 8b 00 51 	brhi	80003a0e <screen_Init+0x1a6>
80003970:	12 3a       	cp.w	r10,r9
80003972:	c4 e3       	brcs	80003a0e <screen_Init+0x1a6>
80003974:	cf 0b       	rjmp	80003954 <screen_Init+0xec>
80003976:	e1 b9 00 42 	mfsr	r9,0x108
8000397a:	14 38       	cp.w	r8,r10
8000397c:	e0 88 00 09 	brls	8000398e <screen_Init+0x126>
80003980:	12 38       	cp.w	r8,r9
80003982:	fe 98 ff fa 	brls	80003976 <screen_Init+0x10e>
80003986:	12 3a       	cp.w	r10,r9
80003988:	e0 83 00 a0 	brlo	80003ac8 <screen_Init+0x260>
8000398c:	cf 5b       	rjmp	80003976 <screen_Init+0x10e>
8000398e:	12 38       	cp.w	r8,r9
80003990:	e0 8b 00 9c 	brhi	80003ac8 <screen_Init+0x260>
80003994:	12 3a       	cp.w	r10,r9
80003996:	e0 83 00 99 	brlo	80003ac8 <screen_Init+0x260>
8000399a:	ce eb       	rjmp	80003976 <screen_Init+0x10e>
8000399c:	30 ec       	mov	r12,14
8000399e:	f0 1f 00 a4 	mcall	80003c2c <screen_Init+0x3c4>
800039a2:	e1 b8 00 42 	mfsr	r8,0x108
800039a6:	e4 69 e2 00 	mov	r9,320000
800039aa:	f0 09 00 0a 	add	r10,r8,r9
800039ae:	cb 1b       	rjmp	80003910 <screen_Init+0xa8>
800039b0:	30 0b       	mov	r11,0
800039b2:	16 9c       	mov	r12,r11
800039b4:	f0 1f 00 9f 	mcall	80003c30 <screen_Init+0x3c8>
800039b8:	30 0b       	mov	r11,0
800039ba:	16 9c       	mov	r12,r11
800039bc:	f0 1f 00 9d 	mcall	80003c30 <screen_Init+0x3c8>
800039c0:	e1 b8 00 42 	mfsr	r8,0x108
800039c4:	e0 6a a8 00 	mov	r10,43008
800039c8:	ea 1a 00 61 	orh	r10,0x61
800039cc:	f0 0a 00 0a 	add	r10,r8,r10
800039d0:	cb 1b       	rjmp	80003932 <screen_Init+0xca>
800039d2:	30 0b       	mov	r11,0
800039d4:	16 9c       	mov	r12,r11
800039d6:	f0 1f 00 97 	mcall	80003c30 <screen_Init+0x3c8>
800039da:	30 0b       	mov	r11,0
800039dc:	16 9c       	mov	r12,r11
800039de:	f0 1f 00 95 	mcall	80003c30 <screen_Init+0x3c8>
800039e2:	30 0b       	mov	r11,0
800039e4:	16 9c       	mov	r12,r11
800039e6:	f0 1f 00 93 	mcall	80003c30 <screen_Init+0x3c8>
800039ea:	30 0b       	mov	r11,0
800039ec:	16 9c       	mov	r12,r11
800039ee:	f0 1f 00 91 	mcall	80003c30 <screen_Init+0x3c8>
800039f2:	30 1b       	mov	r11,1
800039f4:	e0 6c 00 a4 	mov	r12,164
800039f8:	f0 1f 00 8e 	mcall	80003c30 <screen_Init+0x3c8>
800039fc:	e1 b8 00 42 	mfsr	r8,0x108
80003a00:	e0 6a a8 00 	mov	r10,43008
80003a04:	ea 1a 00 61 	orh	r10,0x61
80003a08:	f0 0a 00 0a 	add	r10,r8,r10
80003a0c:	ca 4b       	rjmp	80003954 <screen_Init+0xec>
80003a0e:	e0 6b a7 00 	mov	r11,42752
80003a12:	36 0c       	mov	r12,96
80003a14:	f0 1f 00 87 	mcall	80003c30 <screen_Init+0x3c8>
80003a18:	e0 6b 08 08 	mov	r11,2056
80003a1c:	30 8c       	mov	r12,8
80003a1e:	f0 1f 00 85 	mcall	80003c30 <screen_Init+0x3c8>
80003a22:	e0 6b 02 03 	mov	r11,515
80003a26:	33 0c       	mov	r12,48
80003a28:	f0 1f 00 82 	mcall	80003c30 <screen_Init+0x3c8>
80003a2c:	e0 6b 08 0f 	mov	r11,2063
80003a30:	33 1c       	mov	r12,49
80003a32:	f0 1f 00 80 	mcall	80003c30 <screen_Init+0x3c8>
80003a36:	e0 6b 04 01 	mov	r11,1025
80003a3a:	33 2c       	mov	r12,50
80003a3c:	f0 1f 00 7d 	mcall	80003c30 <screen_Init+0x3c8>
80003a40:	e0 6b 05 0b 	mov	r11,1291
80003a44:	33 3c       	mov	r12,51
80003a46:	f0 1f 00 7b 	mcall	80003c30 <screen_Init+0x3c8>
80003a4a:	e0 6b 33 30 	mov	r11,13104
80003a4e:	33 4c       	mov	r12,52
80003a50:	f0 1f 00 78 	mcall	80003c30 <screen_Init+0x3c8>
80003a54:	e0 6b 0b 05 	mov	r11,2821
80003a58:	33 5c       	mov	r12,53
80003a5a:	f0 1f 00 76 	mcall	80003c30 <screen_Init+0x3c8>
80003a5e:	30 5b       	mov	r11,5
80003a60:	33 6c       	mov	r12,54
80003a62:	f0 1f 00 74 	mcall	80003c30 <screen_Init+0x3c8>
80003a66:	e0 6b 0f 08 	mov	r11,3848
80003a6a:	33 7c       	mov	r12,55
80003a6c:	f0 1f 00 71 	mcall	80003c30 <screen_Init+0x3c8>
80003a70:	e0 6b 03 02 	mov	r11,770
80003a74:	33 8c       	mov	r12,56
80003a76:	f0 1f 00 6f 	mcall	80003c30 <screen_Init+0x3c8>
80003a7a:	e0 6b 30 33 	mov	r11,12339
80003a7e:	33 9c       	mov	r12,57
80003a80:	f0 1f 00 6c 	mcall	80003c30 <screen_Init+0x3c8>
80003a84:	31 8b       	mov	r11,24
80003a86:	e0 6c 00 90 	mov	r12,144
80003a8a:	f0 1f 00 6a 	mcall	80003c30 <screen_Init+0x3c8>
80003a8e:	e0 6b 05 30 	mov	r11,1328
80003a92:	31 0c       	mov	r12,16
80003a94:	f0 1f 00 67 	mcall	80003c30 <screen_Init+0x3c8>
80003a98:	e0 6b 02 37 	mov	r11,567
80003a9c:	31 1c       	mov	r12,17
80003a9e:	f0 1f 00 65 	mcall	80003c30 <screen_Init+0x3c8>
80003aa2:	e0 6b 01 bf 	mov	r11,447
80003aa6:	31 2c       	mov	r12,18
80003aa8:	f0 1f 00 62 	mcall	80003c30 <screen_Init+0x3c8>
80003aac:	e0 6b 10 00 	mov	r11,4096
80003ab0:	31 3c       	mov	r12,19
80003ab2:	f0 1f 00 60 	mcall	80003c30 <screen_Init+0x3c8>
80003ab6:	e1 b8 00 42 	mfsr	r8,0x108
80003aba:	e0 6a 50 00 	mov	r10,20480
80003abe:	ea 1a 00 c3 	orh	r10,0xc3
80003ac2:	f0 0a 00 0a 	add	r10,r8,r10
80003ac6:	c5 8b       	rjmp	80003976 <screen_Init+0x10e>
80003ac8:	e0 6b 01 00 	mov	r11,256
80003acc:	30 1c       	mov	r12,1
80003ace:	f0 1f 00 59 	mcall	80003c30 <screen_Init+0x3c8>
80003ad2:	e0 6b 02 00 	mov	r11,512
80003ad6:	30 2c       	mov	r12,2
80003ad8:	f0 1f 00 56 	mcall	80003c30 <screen_Init+0x3c8>
80003adc:	33 0b       	mov	r11,48
80003ade:	30 3c       	mov	r12,3
80003ae0:	f0 1f 00 54 	mcall	80003c30 <screen_Init+0x3c8>
80003ae4:	30 1b       	mov	r11,1
80003ae6:	30 9c       	mov	r12,9
80003ae8:	f0 1f 00 52 	mcall	80003c30 <screen_Init+0x3c8>
80003aec:	30 8b       	mov	r11,8
80003aee:	30 ac       	mov	r12,10
80003af0:	f0 1f 00 50 	mcall	80003c30 <screen_Init+0x3c8>
80003af4:	30 0b       	mov	r11,0
80003af6:	30 cc       	mov	r12,12
80003af8:	f0 1f 00 4e 	mcall	80003c30 <screen_Init+0x3c8>
80003afc:	e0 6b d0 00 	mov	r11,53248
80003b00:	30 dc       	mov	r12,13
80003b02:	f0 1f 00 4c 	mcall	80003c30 <screen_Init+0x3c8>
80003b06:	33 0b       	mov	r11,48
80003b08:	30 ec       	mov	r12,14
80003b0a:	f0 1f 00 4a 	mcall	80003c30 <screen_Init+0x3c8>
80003b0e:	30 0b       	mov	r11,0
80003b10:	30 fc       	mov	r12,15
80003b12:	f0 1f 00 48 	mcall	80003c30 <screen_Init+0x3c8>
80003b16:	30 0b       	mov	r11,0
80003b18:	32 0c       	mov	r12,32
80003b1a:	f0 1f 00 46 	mcall	80003c30 <screen_Init+0x3c8>
80003b1e:	30 0b       	mov	r11,0
80003b20:	32 1c       	mov	r12,33
80003b22:	f0 1f 00 44 	mcall	80003c30 <screen_Init+0x3c8>
80003b26:	32 eb       	mov	r11,46
80003b28:	32 9c       	mov	r12,41
80003b2a:	f0 1f 00 42 	mcall	80003c30 <screen_Init+0x3c8>
80003b2e:	30 0b       	mov	r11,0
80003b30:	35 0c       	mov	r12,80
80003b32:	f0 1f 00 40 	mcall	80003c30 <screen_Init+0x3c8>
80003b36:	e0 6b 00 f0 	mov	r11,240
80003b3a:	35 1c       	mov	r12,81
80003b3c:	f0 1f 00 3d 	mcall	80003c30 <screen_Init+0x3c8>
80003b40:	30 0b       	mov	r11,0
80003b42:	35 2c       	mov	r12,82
80003b44:	f0 1f 00 3b 	mcall	80003c30 <screen_Init+0x3c8>
80003b48:	e0 6b 01 40 	mov	r11,320
80003b4c:	35 2c       	mov	r12,82
80003b4e:	f0 1f 00 39 	mcall	80003c30 <screen_Init+0x3c8>
80003b52:	30 1b       	mov	r11,1
80003b54:	36 1c       	mov	r12,97
80003b56:	f0 1f 00 37 	mcall	80003c30 <screen_Init+0x3c8>
80003b5a:	30 0b       	mov	r11,0
80003b5c:	36 ac       	mov	r12,106
80003b5e:	f0 1f 00 35 	mcall	80003c30 <screen_Init+0x3c8>
80003b62:	30 0b       	mov	r11,0
80003b64:	e0 6c 00 80 	mov	r12,128
80003b68:	f0 1f 00 32 	mcall	80003c30 <screen_Init+0x3c8>
80003b6c:	30 0b       	mov	r11,0
80003b6e:	e0 6c 00 81 	mov	r12,129
80003b72:	f0 1f 00 30 	mcall	80003c30 <screen_Init+0x3c8>
80003b76:	35 fb       	mov	r11,95
80003b78:	e0 6c 00 82 	mov	r12,130
80003b7c:	f0 1f 00 2d 	mcall	80003c30 <screen_Init+0x3c8>
80003b80:	e0 6b 07 01 	mov	r11,1793
80003b84:	e0 6c 00 93 	mov	r12,147
80003b88:	f0 1f 00 2a 	mcall	80003c30 <screen_Init+0x3c8>
80003b8c:	e0 6b 01 00 	mov	r11,256
80003b90:	30 7c       	mov	r12,7
80003b92:	f0 1f 00 28 	mcall	80003c30 <screen_Init+0x3c8>
80003b96:	30 08       	mov	r8,0
80003b98:	50 88       	stdsp	sp[0x20],r8
80003b9a:	50 98       	stdsp	sp[0x24],r8
80003b9c:	50 a8       	stdsp	sp[0x28],r8
80003b9e:	50 b8       	stdsp	sp[0x2c],r8
80003ba0:	30 0a       	mov	r10,0
80003ba2:	30 0b       	mov	r11,0
80003ba4:	fa eb 00 00 	st.d	sp[0],r10
80003ba8:	fa c9 ff f8 	sub	r9,sp,-8
80003bac:	f2 eb 00 00 	st.d	r9[0],r10
80003bb0:	fa c9 ff f0 	sub	r9,sp,-16
80003bb4:	f2 eb 00 00 	st.d	r9[0],r10
80003bb8:	fa c9 ff e8 	sub	r9,sp,-24
80003bbc:	f2 eb 00 00 	st.d	r9[0],r10
80003bc0:	30 1b       	mov	r11,1
80003bc2:	50 1b       	stdsp	sp[0x4],r11
80003bc4:	31 49       	mov	r9,20
80003bc6:	50 29       	stdsp	sp[0x8],r9
80003bc8:	50 48       	stdsp	sp[0x10],r8
80003bca:	40 09       	lddsp	r9,sp[0x0]
80003bcc:	f3 d8 d1 01 	bfins	r9,r8,0x8,0x1
80003bd0:	50 09       	stdsp	sp[0x0],r9
80003bd2:	40 09       	lddsp	r9,sp[0x0]
80003bd4:	f3 d8 d1 21 	bfins	r9,r8,0x9,0x1
80003bd8:	50 09       	stdsp	sp[0x0],r9
80003bda:	40 09       	lddsp	r9,sp[0x0]
80003bdc:	f3 d8 d1 41 	bfins	r9,r8,0xa,0x1
80003be0:	50 09       	stdsp	sp[0x0],r9
80003be2:	40 08       	lddsp	r8,sp[0x0]
80003be4:	30 57       	mov	r7,5
80003be6:	f1 d7 d0 04 	bfins	r8,r7,0x0,0x4
80003bea:	50 08       	stdsp	sp[0x0],r8
80003bec:	33 cc       	mov	r12,60
80003bee:	f0 1f 00 12 	mcall	80003c34 <screen_Init+0x3cc>
80003bf2:	fa cc ff e0 	sub	r12,sp,-32
80003bf6:	f0 1f 00 11 	mcall	80003c38 <screen_Init+0x3d0>
80003bfa:	1a 9b       	mov	r11,sp
80003bfc:	0e 9c       	mov	r12,r7
80003bfe:	f0 1f 00 10 	mcall	80003c3c <screen_Init+0x3d4>
80003c02:	32 0c       	mov	r12,32
80003c04:	f0 1f 00 0f 	mcall	80003c40 <screen_Init+0x3d8>
80003c08:	2e 8d       	sub	sp,-96
80003c0a:	e3 cd 80 80 	ldm	sp++,r7,pc
80003c0e:	00 00       	add	r0,r0
80003c10:	80 00       	ld.sh	r0,r0[0x0]
80003c12:	7b 64       	ld.w	r4,sp[0x58]
80003c14:	80 00       	ld.sh	r0,r0[0x0]
80003c16:	7b 84       	ld.w	r4,sp[0x60]
80003c18:	80 00       	ld.sh	r0,r0[0x0]
80003c1a:	28 a0       	sub	r0,-118
80003c1c:	80 00       	ld.sh	r0,r0[0x0]
80003c1e:	2c 9e       	sub	lr,-55
80003c20:	80 00       	ld.sh	r0,r0[0x0]
80003c22:	2e 2c       	sub	r12,-30
80003c24:	80 00       	ld.sh	r0,r0[0x0]
80003c26:	2d 74       	sub	r4,-41
80003c28:	80 00       	ld.sh	r0,r0[0x0]
80003c2a:	29 02       	sub	r2,-112
80003c2c:	80 00       	ld.sh	r0,r0[0x0]
80003c2e:	28 e6       	sub	r6,-114
80003c30:	80 00       	ld.sh	r0,r0[0x0]
80003c32:	36 28       	mov	r8,98
80003c34:	80 00       	ld.sh	r0,r0[0x0]
80003c36:	28 4e       	sub	lr,-124
80003c38:	80 00       	ld.sh	r0,r0[0x0]
80003c3a:	2c 38       	sub	r8,-61
80003c3c:	80 00       	ld.sh	r0,r0[0x0]
80003c3e:	2b f0       	sub	r0,-65
80003c40:	80 00       	ld.sh	r0,r0[0x0]
80003c42:	2c 26       	sub	r6,-62

80003c44 <vector2_Add>:
80003c44:	eb cd 00 10 	pushm	r4
80003c48:	fa c4 ff fc 	sub	r4,sp,-4
80003c4c:	09 ea       	ld.ub	r10,r4[0x6]
80003c4e:	09 a9       	ld.ub	r9,r4[0x2]
80003c50:	f4 09 00 09 	add	r9,r10,r9
80003c54:	88 2b       	ld.sh	r11,r4[0x4]
80003c56:	88 0a       	ld.sh	r10,r4[0x0]
80003c58:	f6 0a 00 0a 	add	r10,r11,r10
80003c5c:	b8 0a       	st.h	r12[0x0],r10
80003c5e:	b8 a9       	st.b	r12[0x2],r9
80003c60:	e3 cd 00 10 	ldm	sp++,r4
80003c64:	5e fc       	retal	r12
80003c66:	d7 03       	nop

80003c68 <mainCentre>:
#include "SDCard/sdcard.h"
#include "GFX/screen.h"
#include "GFX/gui.h"


void mainCentre(void){
80003c68:	eb cd 40 e0 	pushm	r5-r7,lr
	sysclk_init();
80003c6c:	f0 1f 00 0f 	mcall	80003ca8 <mainCentre+0x40>
	
	irq_initialize_vectors();
80003c70:	f0 1f 00 0f 	mcall	80003cac <mainCentre+0x44>
	cpu_irq_enable();
80003c74:	d5 03       	csrf	0x10
	
	screen_Init();
80003c76:	f0 1f 00 0f 	mcall	80003cb0 <mainCentre+0x48>
	//gui_loadingScreen();
	
	//cpu_delay_ms(1500,BOARD_OSC0_HZ);
	
	sdcard_Init();
80003c7a:	f0 1f 00 0f 	mcall	80003cb4 <mainCentre+0x4c>
	sdcard_Mount();
80003c7e:	f0 1f 00 0f 	mcall	80003cb8 <mainCentre+0x50>
	gui_Init();
80003c82:	f0 1f 00 0f 	mcall	80003cbc <mainCentre+0x54>
	
	menus[currentMenuId](true);
80003c86:	48 f8       	lddpc	r8,80003cc0 <mainCentre+0x58>
80003c88:	11 89       	ld.ub	r9,r8[0x0]
80003c8a:	48 f8       	lddpc	r8,80003cc4 <mainCentre+0x5c>
80003c8c:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80003c90:	30 1c       	mov	r12,1
80003c92:	5d 18       	icall	r8
	
	while(1){
		menus[currentMenuId](menuChanged);
80003c94:	48 c6       	lddpc	r6,80003cc4 <mainCentre+0x5c>
80003c96:	48 b7       	lddpc	r7,80003cc0 <mainCentre+0x58>
80003c98:	48 c5       	lddpc	r5,80003cc8 <mainCentre+0x60>
80003c9a:	0f 88       	ld.ub	r8,r7[0x0]
80003c9c:	ec 08 03 28 	ld.w	r8,r6[r8<<0x2]
80003ca0:	0b 8c       	ld.ub	r12,r5[0x0]
80003ca2:	5d 18       	icall	r8
80003ca4:	cf bb       	rjmp	80003c9a <mainCentre+0x32>
80003ca6:	00 00       	add	r0,r0
80003ca8:	80 00       	ld.sh	r0,r0[0x0]
80003caa:	43 1c       	lddsp	r12,sp[0xc4]
80003cac:	80 00       	ld.sh	r0,r0[0x0]
80003cae:	2a 14       	sub	r4,-95
80003cb0:	80 00       	ld.sh	r0,r0[0x0]
80003cb2:	38 68       	mov	r8,-122
80003cb4:	80 00       	ld.sh	r0,r0[0x0]
80003cb6:	42 94       	lddsp	r4,sp[0xa4]
80003cb8:	80 00       	ld.sh	r0,r0[0x0]
80003cba:	3d fc       	mov	r12,-33
80003cbc:	80 00       	ld.sh	r0,r0[0x0]
80003cbe:	35 50       	mov	r0,85
80003cc0:	00 00       	add	r0,r0
80003cc2:	01 16       	ld.sh	r6,r0++
80003cc4:	00 00       	add	r0,r0
80003cc6:	00 04       	add	r4,r0
80003cc8:	00 00       	add	r0,r0
80003cca:	01 14       	ld.sh	r4,r0++

80003ccc <sdcard_ReadSector>:
80003ccc:	eb cd 40 f8 	pushm	r3-r7,lr
80003cd0:	20 1d       	sub	sp,4
80003cd2:	18 94       	mov	r4,r12
80003cd4:	16 97       	mov	r7,r11
80003cd6:	f0 1f 00 3f 	mcall	80003dd0 <sdcard_ReadSector+0x104>
80003cda:	c7 80       	breq	80003dca <sdcard_ReadSector+0xfe>
80003cdc:	30 1b       	mov	r11,1
80003cde:	fe 7c 28 00 	mov	r12,-55296
80003ce2:	f0 1f 00 3d 	mcall	80003dd4 <sdcard_ReadSector+0x108>
80003ce6:	4b d8       	lddpc	r8,80003dd8 <sdcard_ReadSector+0x10c>
80003ce8:	11 89       	ld.ub	r9,r8[0x0]
80003cea:	30 38       	mov	r8,3
80003cec:	f0 09 18 00 	cp.b	r9,r8
80003cf0:	c0 61       	brne	80003cfc <sdcard_ReadSector+0x30>
80003cf2:	0e 9b       	mov	r11,r7
80003cf4:	31 1c       	mov	r12,17
80003cf6:	f0 1f 00 3a 	mcall	80003ddc <sdcard_ReadSector+0x110>
80003cfa:	c0 68       	rjmp	80003d06 <sdcard_ReadSector+0x3a>
80003cfc:	ee 0b 15 09 	lsl	r11,r7,0x9
80003d00:	31 1c       	mov	r12,17
80003d02:	f0 1f 00 37 	mcall	80003ddc <sdcard_ReadSector+0x110>
80003d06:	58 0c       	cp.w	r12,0
80003d08:	c1 20       	breq	80003d2c <sdcard_ReadSector+0x60>
80003d0a:	30 1b       	mov	r11,1
80003d0c:	fe 7c 28 00 	mov	r12,-55296
80003d10:	f0 1f 00 34 	mcall	80003de0 <sdcard_ReadSector+0x114>
80003d14:	30 0c       	mov	r12,0
80003d16:	c5 a8       	rjmp	80003dca <sdcard_ReadSector+0xfe>
80003d18:	20 17       	sub	r7,1
80003d1a:	5c 87       	casts.h	r7
80003d1c:	c0 d1       	brne	80003d36 <sdcard_ReadSector+0x6a>
80003d1e:	30 1b       	mov	r11,1
80003d20:	fe 7c 28 00 	mov	r12,-55296
80003d24:	f0 1f 00 2f 	mcall	80003de0 <sdcard_ReadSector+0x114>
80003d28:	30 0c       	mov	r12,0
80003d2a:	c5 08       	rjmp	80003dca <sdcard_ReadSector+0xfe>
80003d2c:	e0 67 75 30 	mov	r7,30000
80003d30:	e0 65 00 ff 	mov	r5,255
80003d34:	3f f6       	mov	r6,-1
80003d36:	0a 9c       	mov	r12,r5
80003d38:	f0 1f 00 2b 	mcall	80003de4 <sdcard_ReadSector+0x118>
80003d3c:	ec 0c 18 00 	cp.b	r12,r6
80003d40:	ce c0       	breq	80003d18 <sdcard_ReadSector+0x4c>
80003d42:	3f e8       	mov	r8,-2
80003d44:	f0 0c 18 00 	cp.b	r12,r8
80003d48:	c0 e0       	breq	80003d64 <sdcard_ReadSector+0x98>
80003d4a:	e0 6b 00 ff 	mov	r11,255
80003d4e:	fe 7c 28 00 	mov	r12,-55296
80003d52:	f0 1f 00 26 	mcall	80003de8 <sdcard_ReadSector+0x11c>
80003d56:	30 1b       	mov	r11,1
80003d58:	fe 7c 28 00 	mov	r12,-55296
80003d5c:	f0 1f 00 21 	mcall	80003de0 <sdcard_ReadSector+0x114>
80003d60:	30 0c       	mov	r12,0
80003d62:	c3 48       	rjmp	80003dca <sdcard_ReadSector+0xfe>
80003d64:	08 97       	mov	r7,r4
80003d66:	e8 c5 fe 00 	sub	r5,r4,-512
80003d6a:	e0 64 00 ff 	mov	r4,255
80003d6e:	fe 76 28 00 	mov	r6,-55296
80003d72:	fa c3 ff fe 	sub	r3,sp,-2
80003d76:	08 9b       	mov	r11,r4
80003d78:	0c 9c       	mov	r12,r6
80003d7a:	f0 1f 00 1c 	mcall	80003de8 <sdcard_ReadSector+0x11c>
80003d7e:	06 9b       	mov	r11,r3
80003d80:	0c 9c       	mov	r12,r6
80003d82:	f0 1f 00 1b 	mcall	80003dec <sdcard_ReadSector+0x120>
80003d86:	9a 18       	ld.sh	r8,sp[0x2]
80003d88:	0e c8       	st.b	r7++,r8
80003d8a:	0a 37       	cp.w	r7,r5
80003d8c:	cf 51       	brne	80003d76 <sdcard_ReadSector+0xaa>
80003d8e:	e0 6b 00 ff 	mov	r11,255
80003d92:	fe 7c 28 00 	mov	r12,-55296
80003d96:	f0 1f 00 15 	mcall	80003de8 <sdcard_ReadSector+0x11c>
80003d9a:	e0 6b 00 ff 	mov	r11,255
80003d9e:	fe 7c 28 00 	mov	r12,-55296
80003da2:	f0 1f 00 12 	mcall	80003de8 <sdcard_ReadSector+0x11c>
80003da6:	e0 6b 00 ff 	mov	r11,255
80003daa:	fe 7c 28 00 	mov	r12,-55296
80003dae:	f0 1f 00 0f 	mcall	80003de8 <sdcard_ReadSector+0x11c>
80003db2:	e0 6b 00 ff 	mov	r11,255
80003db6:	fe 7c 28 00 	mov	r12,-55296
80003dba:	f0 1f 00 0c 	mcall	80003de8 <sdcard_ReadSector+0x11c>
80003dbe:	30 1b       	mov	r11,1
80003dc0:	fe 7c 28 00 	mov	r12,-55296
80003dc4:	f0 1f 00 07 	mcall	80003de0 <sdcard_ReadSector+0x114>
80003dc8:	30 1c       	mov	r12,1
80003dca:	2f fd       	sub	sp,-4
80003dcc:	e3 cd 80 f8 	ldm	sp++,r3-r7,pc
80003dd0:	80 00       	ld.sh	r0,r0[0x0]
80003dd2:	21 54       	sub	r4,21
80003dd4:	80 00       	ld.sh	r0,r0[0x0]
80003dd6:	2d 02       	sub	r2,-48
80003dd8:	00 00       	add	r0,r0
80003dda:	05 92       	ld.ub	r2,r2[0x1]
80003ddc:	80 00       	ld.sh	r0,r0[0x0]
80003dde:	21 ac       	sub	r12,26
80003de0:	80 00       	ld.sh	r0,r0[0x0]
80003de2:	2d 4e       	sub	lr,-44
80003de4:	80 00       	ld.sh	r0,r0[0x0]
80003de6:	21 20       	sub	r0,18
80003de8:	80 00       	ld.sh	r0,r0[0x0]
80003dea:	2e 32       	sub	r2,-29
80003dec:	80 00       	ld.sh	r0,r0[0x0]
80003dee:	2e 4e       	sub	lr,-28

80003df0 <sdcard_CheckPresence>:
80003df0:	d4 01       	pushm	lr
80003df2:	f0 1f 00 02 	mcall	80003df8 <sdcard_CheckPresence+0x8>
80003df6:	d8 02       	popm	pc
80003df8:	80 00       	ld.sh	r0,r0[0x0]
80003dfa:	22 b4       	sub	r4,43

80003dfc <sdcard_Mount>:
80003dfc:	d4 31       	pushm	r0-r7,lr
80003dfe:	20 3d       	sub	sp,12
80003e00:	f0 1f 01 18 	mcall	80004260 <sdcard_Mount+0x464>
80003e04:	e0 80 02 14 	breq	8000422c <sdcard_Mount+0x430>
80003e08:	fe f8 04 5c 	ld.w	r8,pc[1116]
80003e0c:	20 4d       	sub	sp,16
80003e0e:	f0 ea 00 00 	ld.d	r10,r8[0]
80003e12:	fa eb 00 00 	st.d	sp[0],r10
80003e16:	f0 e8 00 08 	ld.d	r8,r8[8]
80003e1a:	fa e9 00 08 	st.d	sp[8],r8
80003e1e:	e0 6c 90 00 	mov	r12,36864
80003e22:	ea 1c 03 d0 	orh	r12,0x3d0
80003e26:	f0 1f 01 11 	mcall	80004268 <sdcard_Mount+0x46c>
80003e2a:	2f cd       	sub	sp,-16
80003e2c:	58 0c       	cp.w	r12,0
80003e2e:	e0 80 01 ff 	breq	8000422c <sdcard_Mount+0x430>
80003e32:	30 09       	mov	r9,0
80003e34:	fe f8 04 38 	ld.w	r8,pc[1080]
80003e38:	b0 89       	st.b	r8[0x0],r9
80003e3a:	30 0b       	mov	r11,0
80003e3c:	fe fc 04 34 	ld.w	r12,pc[1076]
80003e40:	f0 1f 01 0d 	mcall	80004274 <sdcard_Mount+0x478>
80003e44:	e0 80 01 f4 	breq	8000422c <sdcard_Mount+0x430>
80003e48:	fe fb 04 28 	ld.w	r11,pc[1064]
80003e4c:	f6 c8 fe 42 	sub	r8,r11,-446
80003e50:	fe f9 04 28 	ld.w	r9,pc[1064]
80003e54:	f6 cb fe 32 	sub	r11,r11,-462
80003e58:	11 3a       	ld.ub	r10,r8++
80003e5a:	12 ca       	st.b	r9++,r10
80003e5c:	16 38       	cp.w	r8,r11
80003e5e:	cf d1       	brne	80003e58 <sdcard_Mount+0x5c>
80003e60:	fe f8 04 18 	ld.w	r8,pc[1048]
80003e64:	f1 39 00 08 	ld.ub	r9,r8[8]
80003e68:	f1 3a 00 09 	ld.ub	r10,r8[9]
80003e6c:	a9 6a       	lsl	r10,0x8
80003e6e:	12 0a       	add	r10,r9
80003e70:	f1 39 00 0a 	ld.ub	r9,r8[10]
80003e74:	b1 69       	lsl	r9,0x10
80003e76:	12 0a       	add	r10,r9
80003e78:	f1 39 00 0b 	ld.ub	r9,r8[11]
80003e7c:	b9 69       	lsl	r9,0x18
80003e7e:	12 0a       	add	r10,r9
80003e80:	fe f9 03 fc 	ld.w	r9,pc[1020]
80003e84:	93 0a       	st.w	r9[0x0],r10
80003e86:	11 c9       	ld.ub	r9,r8[0x4]
80003e88:	30 b8       	mov	r8,11
80003e8a:	f0 09 18 00 	cp.b	r9,r8
80003e8e:	c0 51       	brne	80003e98 <sdcard_Mount+0x9c>
80003e90:	30 19       	mov	r9,1
80003e92:	fe f8 03 da 	ld.w	r8,pc[986]
80003e96:	b0 89       	st.b	r8[0x0],r9
80003e98:	fe f8 03 e4 	ld.w	r8,pc[996]
80003e9c:	70 0b       	ld.w	r11,r8[0x0]
80003e9e:	fe fc 03 d2 	ld.w	r12,pc[978]
80003ea2:	f0 1f 00 f5 	mcall	80004274 <sdcard_Mount+0x478>
80003ea6:	c0 e0       	breq	80003ec2 <sdcard_Mount+0xc6>
80003ea8:	30 08       	mov	r8,0
80003eaa:	fe fb 03 d6 	ld.w	r11,pc[982]
80003eae:	fe fa 03 c2 	ld.w	r10,pc[962]
80003eb2:	f4 08 07 09 	ld.ub	r9,r10[r8]
80003eb6:	f6 08 0b 09 	st.b	r11[r8],r9
80003eba:	2f f8       	sub	r8,-1
80003ebc:	e0 48 00 3d 	cp.w	r8,61
80003ec0:	cf 91       	brne	80003eb2 <sdcard_Mount+0xb6>
80003ec2:	fe f8 03 aa 	ld.w	r8,pc[938]
80003ec6:	11 88       	ld.ub	r8,r8[0x0]
80003ec8:	58 08       	cp.w	r8,0
80003eca:	c3 81       	brne	80003f3a <sdcard_Mount+0x13e>
80003ecc:	fe f8 03 b4 	ld.w	r8,pc[948]
80003ed0:	f1 3b 00 0c 	ld.ub	r11,r8[12]
80003ed4:	a9 6b       	lsl	r11,0x8
80003ed6:	f1 39 00 0b 	ld.ub	r9,r8[11]
80003eda:	12 0b       	add	r11,r9
80003edc:	f1 3a 00 0f 	ld.ub	r10,r8[15]
80003ee0:	a9 6a       	lsl	r10,0x8
80003ee2:	f1 39 00 0e 	ld.ub	r9,r8[14]
80003ee6:	12 0a       	add	r10,r9
80003ee8:	fe f9 03 94 	ld.w	r9,pc[916]
80003eec:	72 09       	ld.w	r9,r9[0x0]
80003eee:	f4 09 00 09 	add	r9,r10,r9
80003ef2:	f1 3c 00 17 	ld.ub	r12,r8[23]
80003ef6:	a9 6c       	lsl	r12,0x8
80003ef8:	f1 3a 00 16 	ld.ub	r10,r8[22]
80003efc:	14 0c       	add	r12,r10
80003efe:	f1 3a 00 10 	ld.ub	r10,r8[16]
80003f02:	f8 0a 02 4a 	mul	r10,r12,r10
80003f06:	12 0a       	add	r10,r9
80003f08:	f6 c7 00 01 	sub	r7,r11,1
80003f0c:	f1 3c 00 12 	ld.ub	r12,r8[18]
80003f10:	a9 6c       	lsl	r12,0x8
80003f12:	f1 38 00 11 	ld.ub	r8,r8[17]
80003f16:	f8 08 00 08 	add	r8,r12,r8
80003f1a:	a5 78       	lsl	r8,0x5
80003f1c:	10 07       	add	r7,r8
80003f1e:	ee 0b 0d 06 	divu	r6,r7,r11
80003f22:	f4 06 00 0b 	add	r11,r10,r6
80003f26:	fe f8 03 5e 	ld.w	r8,pc[862]
80003f2a:	91 0a       	st.w	r8[0x0],r10
80003f2c:	fe f8 03 5c 	ld.w	r8,pc[860]
80003f30:	91 09       	st.w	r8[0x0],r9
80003f32:	fe f8 03 5a 	ld.w	r8,pc[858]
80003f36:	91 0b       	st.w	r8[0x0],r11
80003f38:	c7 f9       	rjmp	80004236 <sdcard_Mount+0x43a>
80003f3a:	fe f8 03 46 	ld.w	r8,pc[838]
80003f3e:	f1 3a 00 0f 	ld.ub	r10,r8[15]
80003f42:	a9 6a       	lsl	r10,0x8
80003f44:	f1 39 00 0e 	ld.ub	r9,r8[14]
80003f48:	12 0a       	add	r10,r9
80003f4a:	fe f9 03 32 	ld.w	r9,pc[818]
80003f4e:	72 09       	ld.w	r9,r9[0x0]
80003f50:	f4 09 00 09 	add	r9,r10,r9
80003f54:	f1 3b 00 25 	ld.ub	r11,r8[37]
80003f58:	a9 6b       	lsl	r11,0x8
80003f5a:	f1 3a 00 26 	ld.ub	r10,r8[38]
80003f5e:	b1 6a       	lsl	r10,0x10
80003f60:	14 0b       	add	r11,r10
80003f62:	f1 3a 00 24 	ld.ub	r10,r8[36]
80003f66:	14 0b       	add	r11,r10
80003f68:	f1 3a 00 27 	ld.ub	r10,r8[39]
80003f6c:	b9 6a       	lsl	r10,0x18
80003f6e:	f6 0a 00 0a 	add	r10,r11,r10
80003f72:	f1 38 00 10 	ld.ub	r8,r8[16]
80003f76:	f4 08 02 48 	mul	r8,r10,r8
80003f7a:	12 08       	add	r8,r9
80003f7c:	fe fa 03 08 	ld.w	r10,pc[776]
80003f80:	95 08       	st.w	r10[0x0],r8
80003f82:	fe fa 03 06 	ld.w	r10,pc[774]
80003f86:	95 09       	st.w	r10[0x0],r9
80003f88:	fe f9 03 04 	ld.w	r9,pc[772]
80003f8c:	93 08       	st.w	r9[0x0],r8
80003f8e:	c5 49       	rjmp	80004236 <sdcard_Mount+0x43a>
80003f90:	f6 08 00 09 	add	r9,r11,r8
80003f94:	2f 99       	sub	r9,-7
80003f96:	b2 8e       	st.b	r9[0x0],lr
80003f98:	2f f8       	sub	r8,-1
80003f9a:	59 98       	cp.w	r8,25
80003f9c:	cf a1       	brne	80003f90 <sdcard_Mount+0x194>
80003f9e:	f8 08 15 05 	lsl	r8,r12,0x5
80003fa2:	ea 08 00 08 	add	r8,r5,r8
80003fa6:	f0 c9 ff e1 	sub	r9,r8,-31
80003faa:	b2 87       	st.b	r9[0x0],r7
80003fac:	f0 c9 ff fc 	sub	r9,r8,-4
80003fb0:	b2 87       	st.b	r9[0x0],r7
80003fb2:	f8 09 15 05 	lsl	r9,r12,0x5
80003fb6:	2f e9       	sub	r9,-2
80003fb8:	ea 09 00 09 	add	r9,r5,r9
80003fbc:	b2 97       	st.b	r9[0x1],r7
80003fbe:	f0 c9 ff fe 	sub	r9,r8,-2
80003fc2:	b2 87       	st.b	r9[0x0],r7
80003fc4:	f0 c9 ff ff 	sub	r9,r8,-1
80003fc8:	b2 87       	st.b	r9[0x0],r7
80003fca:	f8 09 15 05 	lsl	r9,r12,0x5
80003fce:	2f c9       	sub	r9,-4
80003fd0:	ea 09 00 09 	add	r9,r5,r9
80003fd4:	b2 97       	st.b	r9[0x1],r7
80003fd6:	f0 c9 ff fa 	sub	r9,r8,-6
80003fda:	b2 87       	st.b	r9[0x0],r7
80003fdc:	b0 87       	st.b	r8[0x0],r7
80003fde:	2f f6       	sub	r6,-1
80003fe0:	e0 46 00 64 	cp.w	r6,100
80003fe4:	c0 80       	breq	80003ff4 <sdcard_Mount+0x1f8>
80003fe6:	08 98       	mov	r8,r4
80003fe8:	0c 9c       	mov	r12,r6
80003fea:	ec 0b 15 05 	lsl	r11,r6,0x5
80003fee:	ea 0b 00 0b 	add	r11,r5,r11
80003ff2:	cc fb       	rjmp	80003f90 <sdcard_Mount+0x194>
80003ff4:	30 06       	mov	r6,0
80003ff6:	3f f4       	mov	r4,-1
80003ff8:	fe f3 02 84 	ld.w	r3,pc[644]
80003ffc:	fe f7 02 74 	ld.w	r7,pc[628]
80004000:	30 f0       	mov	r0,15
80004002:	30 02       	mov	r2,0
80004004:	fe f5 02 8c 	ld.w	r5,pc[652]
80004008:	2f f4       	sub	r4,-1
8000400a:	5c 84       	casts.h	r4
8000400c:	e3 d4 c0 04 	bfextu	r1,r4,0x0,0x4
80004010:	c0 a1       	brne	80004024 <sdcard_Mount+0x228>
80004012:	66 0b       	ld.w	r11,r3[0x0]
80004014:	0e 9c       	mov	r12,r7
80004016:	f0 1f 00 98 	mcall	80004274 <sdcard_Mount+0x478>
8000401a:	e0 80 01 0b 	breq	80004230 <sdcard_Mount+0x434>
8000401e:	66 08       	ld.w	r8,r3[0x0]
80004020:	2f f8       	sub	r8,-1
80004022:	87 08       	st.w	r3[0x0],r8
80004024:	e2 0e 15 05 	lsl	lr,r1,0x5
80004028:	ee 0e 00 08 	add	r8,r7,lr
8000402c:	f1 38 00 0b 	ld.ub	r8,r8[11]
80004030:	e0 08 18 00 	cp.b	r8,r0
80004034:	c7 90       	breq	80004126 <sdcard_Mount+0x32a>
80004036:	ee 0e 07 09 	ld.ub	r9,r7[lr]
8000403a:	3e 58       	mov	r8,-27
8000403c:	f0 09 18 00 	cp.b	r9,r8
80004040:	e0 80 00 e6 	breq	8000420c <sdcard_Mount+0x410>
80004044:	fc cc ff f8 	sub	r12,lr,-8
80004048:	ee 0c 07 09 	ld.ub	r9,r7[r12]
8000404c:	35 78       	mov	r8,87
8000404e:	f0 09 18 00 	cp.b	r9,r8
80004052:	e0 81 00 dd 	brne	8000420c <sdcard_Mount+0x410>
80004056:	fc cb ff f7 	sub	r11,lr,-9
8000405a:	ee 0b 07 08 	ld.ub	r8,r7[r11]
8000405e:	34 11       	mov	r1,65
80004060:	e2 08 18 00 	cp.b	r8,r1
80004064:	e0 81 00 d4 	brne	8000420c <sdcard_Mount+0x410>
80004068:	fc ca ff f6 	sub	r10,lr,-10
8000406c:	ee 0a 07 09 	ld.ub	r9,r7[r10]
80004070:	35 68       	mov	r8,86
80004072:	f0 09 18 00 	cp.b	r9,r8
80004076:	e0 81 00 cb 	brne	8000420c <sdcard_Mount+0x410>
8000407a:	0c 98       	mov	r8,r6
8000407c:	ec 09 15 05 	lsl	r9,r6,0x5
80004080:	2f c9       	sub	r9,-4
80004082:	ea 09 00 09 	add	r9,r5,r9
80004086:	13 b9       	ld.ub	r9,r9[0x3]
80004088:	58 09       	cp.w	r9,0
8000408a:	c2 41       	brne	800040d2 <sdcard_Mount+0x2d6>
8000408c:	ee 0e 00 0e 	add	lr,r7,lr
80004090:	ec 01 15 05 	lsl	r1,r6,0x5
80004094:	ea 01 00 01 	add	r1,r5,r1
80004098:	50 21       	stdsp	sp[0x8],r1
8000409a:	50 06       	stdsp	sp[0x0],r6
8000409c:	1d 38       	ld.ub	r8,lr++
8000409e:	40 21       	lddsp	r1,sp[0x8]
800040a0:	12 01       	add	r1,r9
800040a2:	2f 91       	sub	r1,-7
800040a4:	a2 88       	st.b	r1[0x0],r8
800040a6:	2f f9       	sub	r9,-1
800040a8:	58 89       	cp.w	r9,8
800040aa:	cf 91       	brne	8000409c <sdcard_Mount+0x2a0>
800040ac:	40 08       	lddsp	r8,sp[0x0]
800040ae:	ee 0c 07 0e 	ld.ub	lr,r7[r12]
800040b2:	f0 09 15 05 	lsl	r9,r8,0x5
800040b6:	ea 09 00 09 	add	r9,r5,r9
800040ba:	f2 cc ff f1 	sub	r12,r9,-15
800040be:	b8 8e       	st.b	r12[0x0],lr
800040c0:	ee 0b 07 0c 	ld.ub	r12,r7[r11]
800040c4:	f2 cb ff f0 	sub	r11,r9,-16
800040c8:	b6 8c       	st.b	r11[0x0],r12
800040ca:	ee 0a 07 0a 	ld.ub	r10,r7[r10]
800040ce:	2e f9       	sub	r9,-17
800040d0:	b2 8a       	st.b	r9[0x0],r10
800040d2:	66 0a       	ld.w	r10,r3[0x0]
800040d4:	f9 da c0 08 	bfextu	r12,r10,0x0,0x8
800040d8:	f0 09 15 05 	lsl	r9,r8,0x5
800040dc:	ea 09 00 09 	add	r9,r5,r9
800040e0:	f2 cb ff fc 	sub	r11,r9,-4
800040e4:	b6 8c       	st.b	r11[0x0],r12
800040e6:	f9 da c1 08 	bfextu	r12,r10,0x8,0x8
800040ea:	f0 0b 15 05 	lsl	r11,r8,0x5
800040ee:	2f eb       	sub	r11,-2
800040f0:	ea 0b 00 0b 	add	r11,r5,r11
800040f4:	b6 9c       	st.b	r11[0x1],r12
800040f6:	f9 da c2 08 	bfextu	r12,r10,0x10,0x8
800040fa:	f2 cb ff fe 	sub	r11,r9,-2
800040fe:	b6 8c       	st.b	r11[0x0],r12
80004100:	b9 8a       	lsr	r10,0x18
80004102:	f2 cb ff ff 	sub	r11,r9,-1
80004106:	b6 8a       	st.b	r11[0x0],r10
80004108:	08 9a       	mov	r10,r4
8000410a:	a5 78       	lsl	r8,0x5
8000410c:	2f c8       	sub	r8,-4
8000410e:	ea 08 00 08 	add	r8,r5,r8
80004112:	b0 9a       	st.b	r8[0x1],r10
80004114:	f5 d4 c1 08 	bfextu	r10,r4,0x8,0x8
80004118:	f2 c8 ff fa 	sub	r8,r9,-6
8000411c:	b0 8a       	st.b	r8[0x0],r10
8000411e:	b2 86       	st.b	r9[0x0],r6
80004120:	2f f6       	sub	r6,-1
80004122:	5c 56       	castu.b	r6
80004124:	c7 48       	rjmp	8000420c <sdcard_Mount+0x410>
80004126:	ee 0e 07 08 	ld.ub	r8,r7[lr]
8000412a:	30 11       	mov	r1,1
8000412c:	e2 08 18 00 	cp.b	r8,r1
80004130:	5f 0a       	sreq	r10
80004132:	34 19       	mov	r9,65
80004134:	f2 08 18 00 	cp.b	r8,r9
80004138:	5f 09       	sreq	r9
8000413a:	f5 e9 10 09 	or	r9,r10,r9
8000413e:	e4 09 18 00 	cp.b	r9,r2
80004142:	c3 a0       	breq	800041b6 <sdcard_Mount+0x3ba>
80004144:	fc ca ff ff 	sub	r10,lr,-1
80004148:	ee 0a 00 0a 	add	r10,r7,r10
8000414c:	30 08       	mov	r8,0
8000414e:	0c 9b       	mov	r11,r6
80004150:	ec 09 15 05 	lsl	r9,r6,0x5
80004154:	ea 09 00 09 	add	r9,r5,r9
80004158:	50 19       	stdsp	sp[0x4],r9
8000415a:	16 99       	mov	r9,r11
8000415c:	15 81       	ld.ub	r1,r10[0x0]
8000415e:	40 1c       	lddsp	r12,sp[0x4]
80004160:	10 0c       	add	r12,r8
80004162:	2f 9c       	sub	r12,-7
80004164:	b8 81       	st.b	r12[0x0],r1
80004166:	2f f8       	sub	r8,-1
80004168:	2f ea       	sub	r10,-2
8000416a:	58 58       	cp.w	r8,5
8000416c:	cf 71       	brne	8000415a <sdcard_Mount+0x35e>
8000416e:	fc ca ff f2 	sub	r10,lr,-14
80004172:	ee 0a 00 0a 	add	r10,r7,r10
80004176:	f6 08 09 4b 	lsl	r11,r11,r8
8000417a:	ea 0b 00 0b 	add	r11,r5,r11
8000417e:	15 81       	ld.ub	r1,r10[0x0]
80004180:	f6 08 00 0c 	add	r12,r11,r8
80004184:	2f 9c       	sub	r12,-7
80004186:	b8 81       	st.b	r12[0x0],r1
80004188:	2f ea       	sub	r10,-2
8000418a:	2f f8       	sub	r8,-1
8000418c:	58 c8       	cp.w	r8,12
8000418e:	cf 81       	brne	8000417e <sdcard_Mount+0x382>
80004190:	ee 0e 00 0e 	add	lr,r7,lr
80004194:	fd 3a 00 1c 	ld.ub	r10,lr[28]
80004198:	f2 08 15 05 	lsl	r8,r9,0x5
8000419c:	ea 08 00 08 	add	r8,r5,r8
800041a0:	2e e8       	sub	r8,-18
800041a2:	b0 8a       	st.b	r8[0x0],r10
800041a4:	fd 3a 00 1e 	ld.ub	r10,lr[30]
800041a8:	f2 08 15 05 	lsl	r8,r9,0x5
800041ac:	ea 08 00 08 	add	r8,r5,r8
800041b0:	2e d8       	sub	r8,-19
800041b2:	b0 8a       	st.b	r8[0x0],r10
800041b4:	c2 c8       	rjmp	8000420c <sdcard_Mount+0x410>
800041b6:	30 21       	mov	r1,2
800041b8:	e2 08 18 00 	cp.b	r8,r1
800041bc:	5f 09       	sreq	r9
800041be:	34 2a       	mov	r10,66
800041c0:	f4 08 18 00 	cp.b	r8,r10
800041c4:	5f 08       	sreq	r8
800041c6:	f3 e8 10 08 	or	r8,r9,r8
800041ca:	e4 08 18 00 	cp.b	r8,r2
800041ce:	c1 f0       	breq	8000420c <sdcard_Mount+0x410>
800041d0:	fc c9 ff ff 	sub	r9,lr,-1
800041d4:	ee 09 00 09 	add	r9,r7,r9
800041d8:	30 d8       	mov	r8,13
800041da:	0c 9b       	mov	r11,r6
800041dc:	ec 0a 15 05 	lsl	r10,r6,0x5
800041e0:	ea 0a 00 0a 	add	r10,r5,r10
800041e4:	50 1b       	stdsp	sp[0x4],r11
800041e6:	13 81       	ld.ub	r1,r9[0x0]
800041e8:	f4 08 00 0c 	add	r12,r10,r8
800041ec:	2f 9c       	sub	r12,-7
800041ee:	b8 81       	st.b	r12[0x0],r1
800041f0:	2f e9       	sub	r9,-2
800041f2:	2f f8       	sub	r8,-1
800041f4:	59 28       	cp.w	r8,18
800041f6:	cf 71       	brne	800041e4 <sdcard_Mount+0x3e8>
800041f8:	c2 98       	rjmp	8000424a <sdcard_Mount+0x44e>
800041fa:	13 8c       	ld.ub	r12,r9[0x0]
800041fc:	f4 08 00 0b 	add	r11,r10,r8
80004200:	2f 9b       	sub	r11,-7
80004202:	b6 8c       	st.b	r11[0x0],r12
80004204:	2f e9       	sub	r9,-2
80004206:	2f f8       	sub	r8,-1
80004208:	59 78       	cp.w	r8,23
8000420a:	cf 81       	brne	800041fa <sdcard_Mount+0x3fe>
8000420c:	e0 68 01 ff 	mov	r8,511
80004210:	f0 04 19 00 	cp.h	r4,r8
80004214:	5f 89       	srls	r9
80004216:	36 38       	mov	r8,99
80004218:	f0 06 18 00 	cp.b	r6,r8
8000421c:	5f 88       	srls	r8
8000421e:	f3 e8 00 08 	and	r8,r9,r8
80004222:	e4 08 18 00 	cp.b	r8,r2
80004226:	fe 91 fe f1 	brne	80004008 <sdcard_Mount+0x20c>
8000422a:	c0 38       	rjmp	80004230 <sdcard_Mount+0x434>
8000422c:	30 0c       	mov	r12,0
8000422e:	c0 28       	rjmp	80004232 <sdcard_Mount+0x436>
80004230:	30 1c       	mov	r12,1
80004232:	2f dd       	sub	sp,-12
80004234:	d8 32       	popm	r0-r7,pc
80004236:	49 48       	lddpc	r8,80004284 <sdcard_Mount+0x488>
80004238:	70 09       	ld.w	r9,r8[0x0]
8000423a:	49 18       	lddpc	r8,8000427c <sdcard_Mount+0x480>
8000423c:	91 09       	st.w	r8[0x0],r9
8000423e:	30 06       	mov	r6,0
80004240:	0c 94       	mov	r4,r6
80004242:	49 45       	lddpc	r5,80004290 <sdcard_Mount+0x494>
80004244:	32 0e       	mov	lr,32
80004246:	30 07       	mov	r7,0
80004248:	cc fa       	rjmp	80003fe6 <sdcard_Mount+0x1ea>
8000424a:	fc c9 ff f2 	sub	r9,lr,-14
8000424e:	ee 09 00 09 	add	r9,r7,r9
80004252:	31 28       	mov	r8,18
80004254:	40 1a       	lddsp	r10,sp[0x4]
80004256:	a5 7a       	lsl	r10,0x5
80004258:	ea 0a 00 0a 	add	r10,r5,r10
8000425c:	cc fb       	rjmp	800041fa <sdcard_Mount+0x3fe>
8000425e:	00 00       	add	r0,r0
80004260:	80 00       	ld.sh	r0,r0[0x0]
80004262:	3d f0       	mov	r0,-33
80004264:	00 00       	add	r0,r0
80004266:	00 10       	sub	r0,r0
80004268:	80 00       	ld.sh	r0,r0[0x0]
8000426a:	28 0c       	sub	r12,-128
8000426c:	00 00       	add	r0,r0
8000426e:	12 4c       	or	r12,r9
80004270:	00 00       	add	r0,r0
80004272:	01 1c       	ld.sh	r12,r0++
80004274:	80 00       	ld.sh	r0,r0[0x0]
80004276:	3c cc       	mov	r12,-52
80004278:	00 00       	add	r0,r0
8000427a:	03 20       	ld.uh	r0,r1++
8000427c:	00 00       	add	r0,r0
8000427e:	03 78       	ld.ub	r8,--r1
80004280:	00 00       	add	r0,r0
80004282:	03 38       	ld.ub	r8,r1++
80004284:	00 00       	add	r0,r0
80004286:	03 30       	ld.ub	r0,r1++
80004288:	00 00       	add	r0,r0
8000428a:	01 18       	ld.sh	r8,r0++
8000428c:	00 00       	add	r0,r0
8000428e:	03 34       	ld.ub	r4,r1++
80004290:	00 00       	add	r0,r0
80004292:	05 a8       	ld.ub	r8,r2[0x2]

80004294 <sdcard_Init>:
80004294:	eb cd 40 80 	pushm	r7,lr
80004298:	20 8d       	sub	sp,32
8000429a:	49 a8       	lddpc	r8,80004300 <sdcard_Init+0x6c>
8000429c:	1a 9c       	mov	r12,sp
8000429e:	f0 ea 00 00 	ld.d	r10,r8[0]
800042a2:	fa eb 00 00 	st.d	sp[0],r10
800042a6:	f0 ea 00 08 	ld.d	r10,r8[8]
800042aa:	fa eb 00 08 	st.d	sp[8],r10
800042ae:	f0 ea 00 10 	ld.d	r10,r8[16]
800042b2:	fa eb 00 10 	st.d	sp[16],r10
800042b6:	f0 e8 00 18 	ld.d	r8,r8[24]
800042ba:	fa e9 00 18 	st.d	sp[24],r8
800042be:	30 4b       	mov	r11,4
800042c0:	f0 1f 00 11 	mcall	80004304 <sdcard_Init+0x70>
800042c4:	49 17       	lddpc	r7,80004308 <sdcard_Init+0x74>
800042c6:	0e 9b       	mov	r11,r7
800042c8:	fe 7c 28 00 	mov	r12,-55296
800042cc:	f0 1f 00 10 	mcall	8000430c <sdcard_Init+0x78>
800042d0:	30 09       	mov	r9,0
800042d2:	12 9a       	mov	r10,r9
800042d4:	12 9b       	mov	r11,r9
800042d6:	fe 7c 28 00 	mov	r12,-55296
800042da:	f0 1f 00 0e 	mcall	80004310 <sdcard_Init+0x7c>
800042de:	e0 6a 90 00 	mov	r10,36864
800042e2:	ea 1a 03 d0 	orh	r10,0x3d0
800042e6:	0e 9b       	mov	r11,r7
800042e8:	fe 7c 28 00 	mov	r12,-55296
800042ec:	f0 1f 00 0a 	mcall	80004314 <sdcard_Init+0x80>
800042f0:	fe 7c 28 00 	mov	r12,-55296
800042f4:	f0 1f 00 09 	mcall	80004318 <sdcard_Init+0x84>
800042f8:	2f 8d       	sub	sp,-32
800042fa:	e3 cd 80 80 	ldm	sp++,r7,pc
800042fe:	00 00       	add	r0,r0
80004300:	80 00       	ld.sh	r0,r0[0x0]
80004302:	7b 94       	ld.w	r4,sp[0x64]
80004304:	80 00       	ld.sh	r0,r0[0x0]
80004306:	28 a0       	sub	r0,-118
80004308:	00 00       	add	r0,r0
8000430a:	00 10       	sub	r0,r0
8000430c:	80 00       	ld.sh	r0,r0[0x0]
8000430e:	2c 9e       	sub	lr,-55
80004310:	80 00       	ld.sh	r0,r0[0x0]
80004312:	2c d6       	sub	r6,-51
80004314:	80 00       	ld.sh	r0,r0[0x0]
80004316:	2d 74       	sub	r4,-41
80004318:	80 00       	ld.sh	r0,r0[0x0]
8000431a:	2e 2c       	sub	r12,-30

8000431c <sysclk_init>:
8000431c:	d4 01       	pushm	lr
8000431e:	30 3a       	mov	r10,3
80004320:	e0 6b 90 00 	mov	r11,36864
80004324:	ea 1b 03 d0 	orh	r11,0x3d0
80004328:	fe 7c 0c 00 	mov	r12,-62464
8000432c:	f0 1f 00 19 	mcall	80004390 <sysclk_init+0x74>
80004330:	31 08       	mov	r8,16
80004332:	1a d8       	st.w	--sp,r8
80004334:	30 08       	mov	r8,0
80004336:	30 19       	mov	r9,1
80004338:	30 7a       	mov	r10,7
8000433a:	10 9b       	mov	r11,r8
8000433c:	fe 7c 0c 00 	mov	r12,-62464
80004340:	f0 1f 00 15 	mcall	80004394 <sysclk_init+0x78>
80004344:	30 08       	mov	r8,0
80004346:	30 19       	mov	r9,1
80004348:	12 9a       	mov	r10,r9
8000434a:	10 9b       	mov	r11,r8
8000434c:	fe 7c 0c 00 	mov	r12,-62464
80004350:	f0 1f 00 12 	mcall	80004398 <sysclk_init+0x7c>
80004354:	30 0b       	mov	r11,0
80004356:	fe 7c 0c 00 	mov	r12,-62464
8000435a:	f0 1f 00 11 	mcall	8000439c <sysclk_init+0x80>
8000435e:	fe 7c 0c 00 	mov	r12,-62464
80004362:	f0 1f 00 10 	mcall	800043a0 <sysclk_init+0x84>
80004366:	30 0a       	mov	r10,0
80004368:	1a da       	st.w	--sp,r10
8000436a:	1a da       	st.w	--sp,r10
8000436c:	14 98       	mov	r8,r10
8000436e:	14 99       	mov	r9,r10
80004370:	30 1b       	mov	r11,1
80004372:	fe 7c 0c 00 	mov	r12,-62464
80004376:	f0 1f 00 0c 	mcall	800043a4 <sysclk_init+0x88>
8000437a:	30 1c       	mov	r12,1
8000437c:	f0 1f 00 0b 	mcall	800043a8 <sysclk_init+0x8c>
80004380:	30 2b       	mov	r11,2
80004382:	fe 7c 0c 00 	mov	r12,-62464
80004386:	f0 1f 00 0a 	mcall	800043ac <sysclk_init+0x90>
8000438a:	2f dd       	sub	sp,-12
8000438c:	d8 02       	popm	pc
8000438e:	00 00       	add	r0,r0
80004390:	80 00       	ld.sh	r0,r0[0x0]
80004392:	2b c4       	sub	r4,-68
80004394:	80 00       	ld.sh	r0,r0[0x0]
80004396:	2b 66       	sub	r6,-74
80004398:	80 00       	ld.sh	r0,r0[0x0]
8000439a:	2b 88       	sub	r8,-72
8000439c:	80 00       	ld.sh	r0,r0[0x0]
8000439e:	2b a2       	sub	r2,-70
800043a0:	80 00       	ld.sh	r0,r0[0x0]
800043a2:	2b b0       	sub	r0,-69
800043a4:	80 00       	ld.sh	r0,r0[0x0]
800043a6:	2b 20       	sub	r0,-78
800043a8:	80 00       	ld.sh	r0,r0[0x0]
800043aa:	28 40       	sub	r0,-124
800043ac:	80 00       	ld.sh	r0,r0[0x0]
800043ae:	2b ba       	sub	r10,-69

800043b0 <main>:
800043b0:	d4 01       	pushm	lr
800043b2:	f0 1f 00 02 	mcall	800043b8 <main+0x8>
800043b6:	d8 0a       	popm	pc,r12=0
800043b8:	80 00       	ld.sh	r0,r0[0x0]
800043ba:	3c 68       	mov	r8,-58

800043bc <memcpy>:
800043bc:	58 8a       	cp.w	r10,8
800043be:	c2 f5       	brlt	8000441c <memcpy+0x60>
800043c0:	f9 eb 10 09 	or	r9,r12,r11
800043c4:	e2 19 00 03 	andl	r9,0x3,COH
800043c8:	e0 81 00 97 	brne	800044f6 <memcpy+0x13a>
800043cc:	e0 4a 00 20 	cp.w	r10,32
800043d0:	c3 b4       	brge	80004446 <memcpy+0x8a>
800043d2:	f4 08 14 02 	asr	r8,r10,0x2
800043d6:	f0 09 11 08 	rsub	r9,r8,8
800043da:	fe 09 00 2f 	add	pc,pc,r9<<0x2
800043de:	76 69       	ld.w	r9,r11[0x18]
800043e0:	99 69       	st.w	r12[0x18],r9
800043e2:	76 59       	ld.w	r9,r11[0x14]
800043e4:	99 59       	st.w	r12[0x14],r9
800043e6:	76 49       	ld.w	r9,r11[0x10]
800043e8:	99 49       	st.w	r12[0x10],r9
800043ea:	76 39       	ld.w	r9,r11[0xc]
800043ec:	99 39       	st.w	r12[0xc],r9
800043ee:	76 29       	ld.w	r9,r11[0x8]
800043f0:	99 29       	st.w	r12[0x8],r9
800043f2:	76 19       	ld.w	r9,r11[0x4]
800043f4:	99 19       	st.w	r12[0x4],r9
800043f6:	76 09       	ld.w	r9,r11[0x0]
800043f8:	99 09       	st.w	r12[0x0],r9
800043fa:	f6 08 00 2b 	add	r11,r11,r8<<0x2
800043fe:	f8 08 00 28 	add	r8,r12,r8<<0x2
80004402:	e0 1a 00 03 	andl	r10,0x3
80004406:	f4 0a 11 04 	rsub	r10,r10,4
8000440a:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
8000440e:	17 a9       	ld.ub	r9,r11[0x2]
80004410:	b0 a9       	st.b	r8[0x2],r9
80004412:	17 99       	ld.ub	r9,r11[0x1]
80004414:	b0 99       	st.b	r8[0x1],r9
80004416:	17 89       	ld.ub	r9,r11[0x0]
80004418:	b0 89       	st.b	r8[0x0],r9
8000441a:	5e fc       	retal	r12
8000441c:	f4 0a 11 09 	rsub	r10,r10,9
80004420:	fe 0a 00 2f 	add	pc,pc,r10<<0x2
80004424:	17 f9       	ld.ub	r9,r11[0x7]
80004426:	b8 f9       	st.b	r12[0x7],r9
80004428:	17 e9       	ld.ub	r9,r11[0x6]
8000442a:	b8 e9       	st.b	r12[0x6],r9
8000442c:	17 d9       	ld.ub	r9,r11[0x5]
8000442e:	b8 d9       	st.b	r12[0x5],r9
80004430:	17 c9       	ld.ub	r9,r11[0x4]
80004432:	b8 c9       	st.b	r12[0x4],r9
80004434:	17 b9       	ld.ub	r9,r11[0x3]
80004436:	b8 b9       	st.b	r12[0x3],r9
80004438:	17 a9       	ld.ub	r9,r11[0x2]
8000443a:	b8 a9       	st.b	r12[0x2],r9
8000443c:	17 99       	ld.ub	r9,r11[0x1]
8000443e:	b8 99       	st.b	r12[0x1],r9
80004440:	17 89       	ld.ub	r9,r11[0x0]
80004442:	b8 89       	st.b	r12[0x0],r9
80004444:	5e fc       	retal	r12
80004446:	eb cd 40 c0 	pushm	r6-r7,lr
8000444a:	18 99       	mov	r9,r12
8000444c:	22 0a       	sub	r10,32
8000444e:	b7 07       	ld.d	r6,r11++
80004450:	b3 26       	st.d	r9++,r6
80004452:	b7 07       	ld.d	r6,r11++
80004454:	b3 26       	st.d	r9++,r6
80004456:	b7 07       	ld.d	r6,r11++
80004458:	b3 26       	st.d	r9++,r6
8000445a:	b7 07       	ld.d	r6,r11++
8000445c:	b3 26       	st.d	r9++,r6
8000445e:	22 0a       	sub	r10,32
80004460:	cf 74       	brge	8000444e <memcpy+0x92>
80004462:	2f 0a       	sub	r10,-16
80004464:	c0 65       	brlt	80004470 <memcpy+0xb4>
80004466:	b7 07       	ld.d	r6,r11++
80004468:	b3 26       	st.d	r9++,r6
8000446a:	b7 07       	ld.d	r6,r11++
8000446c:	b3 26       	st.d	r9++,r6
8000446e:	21 0a       	sub	r10,16
80004470:	5c 3a       	neg	r10
80004472:	fe 0a 00 3f 	add	pc,pc,r10<<0x3
80004476:	d7 03       	nop
80004478:	d7 03       	nop
8000447a:	f7 36 00 0e 	ld.ub	r6,r11[14]
8000447e:	f3 66 00 0e 	st.b	r9[14],r6
80004482:	f7 36 00 0d 	ld.ub	r6,r11[13]
80004486:	f3 66 00 0d 	st.b	r9[13],r6
8000448a:	f7 36 00 0c 	ld.ub	r6,r11[12]
8000448e:	f3 66 00 0c 	st.b	r9[12],r6
80004492:	f7 36 00 0b 	ld.ub	r6,r11[11]
80004496:	f3 66 00 0b 	st.b	r9[11],r6
8000449a:	f7 36 00 0a 	ld.ub	r6,r11[10]
8000449e:	f3 66 00 0a 	st.b	r9[10],r6
800044a2:	f7 36 00 09 	ld.ub	r6,r11[9]
800044a6:	f3 66 00 09 	st.b	r9[9],r6
800044aa:	f7 36 00 08 	ld.ub	r6,r11[8]
800044ae:	f3 66 00 08 	st.b	r9[8],r6
800044b2:	f7 36 00 07 	ld.ub	r6,r11[7]
800044b6:	f3 66 00 07 	st.b	r9[7],r6
800044ba:	f7 36 00 06 	ld.ub	r6,r11[6]
800044be:	f3 66 00 06 	st.b	r9[6],r6
800044c2:	f7 36 00 05 	ld.ub	r6,r11[5]
800044c6:	f3 66 00 05 	st.b	r9[5],r6
800044ca:	f7 36 00 04 	ld.ub	r6,r11[4]
800044ce:	f3 66 00 04 	st.b	r9[4],r6
800044d2:	f7 36 00 03 	ld.ub	r6,r11[3]
800044d6:	f3 66 00 03 	st.b	r9[3],r6
800044da:	f7 36 00 02 	ld.ub	r6,r11[2]
800044de:	f3 66 00 02 	st.b	r9[2],r6
800044e2:	f7 36 00 01 	ld.ub	r6,r11[1]
800044e6:	f3 66 00 01 	st.b	r9[1],r6
800044ea:	f7 36 00 00 	ld.ub	r6,r11[0]
800044ee:	f3 66 00 00 	st.b	r9[0],r6
800044f2:	e3 cd 80 c0 	ldm	sp++,r6-r7,pc
800044f6:	20 1a       	sub	r10,1
800044f8:	f6 0a 07 09 	ld.ub	r9,r11[r10]
800044fc:	f8 0a 0b 09 	st.b	r12[r10],r9
80004500:	cf b1       	brne	800044f6 <memcpy+0x13a>
80004502:	5e fc       	retal	r12

Disassembly of section .exception:

80004600 <_evba>:
80004600:	c0 08       	rjmp	80004600 <_evba>
	...

80004604 <_handle_TLB_Multiple_Hit>:
80004604:	c0 08       	rjmp	80004604 <_handle_TLB_Multiple_Hit>
	...

80004608 <_handle_Bus_Error_Data_Fetch>:
80004608:	c0 08       	rjmp	80004608 <_handle_Bus_Error_Data_Fetch>
	...

8000460c <_handle_Bus_Error_Instruction_Fetch>:
8000460c:	c0 08       	rjmp	8000460c <_handle_Bus_Error_Instruction_Fetch>
	...

80004610 <_handle_NMI>:
80004610:	c0 08       	rjmp	80004610 <_handle_NMI>
	...

80004614 <_handle_Instruction_Address>:
80004614:	c0 08       	rjmp	80004614 <_handle_Instruction_Address>
	...

80004618 <_handle_ITLB_Protection>:
80004618:	c0 08       	rjmp	80004618 <_handle_ITLB_Protection>
	...

8000461c <_handle_Breakpoint>:
8000461c:	c0 08       	rjmp	8000461c <_handle_Breakpoint>
	...

80004620 <_handle_Illegal_Opcode>:
80004620:	c0 08       	rjmp	80004620 <_handle_Illegal_Opcode>
	...

80004624 <_handle_Unimplemented_Instruction>:
80004624:	c0 08       	rjmp	80004624 <_handle_Unimplemented_Instruction>
	...

80004628 <_handle_Privilege_Violation>:
80004628:	c0 08       	rjmp	80004628 <_handle_Privilege_Violation>
	...

8000462c <_handle_Floating_Point>:
8000462c:	c0 08       	rjmp	8000462c <_handle_Floating_Point>
	...

80004630 <_handle_Coprocessor_Absent>:
80004630:	c0 08       	rjmp	80004630 <_handle_Coprocessor_Absent>
	...

80004634 <_handle_Data_Address_Read>:
80004634:	c0 08       	rjmp	80004634 <_handle_Data_Address_Read>
	...

80004638 <_handle_Data_Address_Write>:
80004638:	c0 08       	rjmp	80004638 <_handle_Data_Address_Write>
	...

8000463c <_handle_DTLB_Protection_Read>:
8000463c:	c0 08       	rjmp	8000463c <_handle_DTLB_Protection_Read>
	...

80004640 <_handle_DTLB_Protection_Write>:
80004640:	c0 08       	rjmp	80004640 <_handle_DTLB_Protection_Write>
	...

80004644 <_handle_DTLB_Modified>:
80004644:	c0 08       	rjmp	80004644 <_handle_DTLB_Modified>
	...

80004650 <_handle_ITLB_Miss>:
80004650:	c0 08       	rjmp	80004650 <_handle_ITLB_Miss>
	...

80004660 <_handle_DTLB_Miss_Read>:
80004660:	c0 08       	rjmp	80004660 <_handle_DTLB_Miss_Read>
	...

80004670 <_handle_DTLB_Miss_Write>:
80004670:	c0 08       	rjmp	80004670 <_handle_DTLB_Miss_Write>
	...

80004700 <_handle_Supervisor_Call>:
80004700:	c0 08       	rjmp	80004700 <_handle_Supervisor_Call>
80004702:	d7 03       	nop

80004704 <_int0>:
80004704:	30 0c       	mov	r12,0
80004706:	fe b0 f1 b1 	rcall	80002a68 <_get_interrupt_handler>
8000470a:	58 0c       	cp.w	r12,0
8000470c:	f8 0f 17 10 	movne	pc,r12
80004710:	d6 03       	rete

80004712 <_int1>:
80004712:	30 1c       	mov	r12,1
80004714:	fe b0 f1 aa 	rcall	80002a68 <_get_interrupt_handler>
80004718:	58 0c       	cp.w	r12,0
8000471a:	f8 0f 17 10 	movne	pc,r12
8000471e:	d6 03       	rete

80004720 <_int2>:
80004720:	30 2c       	mov	r12,2
80004722:	fe b0 f1 a3 	rcall	80002a68 <_get_interrupt_handler>
80004726:	58 0c       	cp.w	r12,0
80004728:	f8 0f 17 10 	movne	pc,r12
8000472c:	d6 03       	rete

8000472e <_int3>:
8000472e:	30 3c       	mov	r12,3
80004730:	fe b0 f1 9c 	rcall	80002a68 <_get_interrupt_handler>
80004734:	58 0c       	cp.w	r12,0
80004736:	f8 0f 17 10 	movne	pc,r12
8000473a:	d6 03       	rete
8000473c:	d7 03       	nop
8000473e:	d7 03       	nop
80004740:	d7 03       	nop
80004742:	d7 03       	nop
80004744:	d7 03       	nop
80004746:	d7 03       	nop
80004748:	d7 03       	nop
8000474a:	d7 03       	nop
8000474c:	d7 03       	nop
8000474e:	d7 03       	nop
80004750:	d7 03       	nop
80004752:	d7 03       	nop
80004754:	d7 03       	nop
80004756:	d7 03       	nop
80004758:	d7 03       	nop
8000475a:	d7 03       	nop
8000475c:	d7 03       	nop
8000475e:	d7 03       	nop
80004760:	d7 03       	nop
80004762:	d7 03       	nop
80004764:	d7 03       	nop
80004766:	d7 03       	nop
80004768:	d7 03       	nop
8000476a:	d7 03       	nop
8000476c:	d7 03       	nop
8000476e:	d7 03       	nop
80004770:	d7 03       	nop
80004772:	d7 03       	nop
80004774:	d7 03       	nop
80004776:	d7 03       	nop
80004778:	d7 03       	nop
8000477a:	d7 03       	nop
8000477c:	d7 03       	nop
8000477e:	d7 03       	nop
80004780:	d7 03       	nop
80004782:	d7 03       	nop
80004784:	d7 03       	nop
80004786:	d7 03       	nop
80004788:	d7 03       	nop
8000478a:	d7 03       	nop
8000478c:	d7 03       	nop
8000478e:	d7 03       	nop
80004790:	d7 03       	nop
80004792:	d7 03       	nop
80004794:	d7 03       	nop
80004796:	d7 03       	nop
80004798:	d7 03       	nop
8000479a:	d7 03       	nop
8000479c:	d7 03       	nop
8000479e:	d7 03       	nop
800047a0:	d7 03       	nop
800047a2:	d7 03       	nop
800047a4:	d7 03       	nop
800047a6:	d7 03       	nop
800047a8:	d7 03       	nop
800047aa:	d7 03       	nop
800047ac:	d7 03       	nop
800047ae:	d7 03       	nop
800047b0:	d7 03       	nop
800047b2:	d7 03       	nop
800047b4:	d7 03       	nop
800047b6:	d7 03       	nop
800047b8:	d7 03       	nop
800047ba:	d7 03       	nop
800047bc:	d7 03       	nop
800047be:	d7 03       	nop
800047c0:	d7 03       	nop
800047c2:	d7 03       	nop
800047c4:	d7 03       	nop
800047c6:	d7 03       	nop
800047c8:	d7 03       	nop
800047ca:	d7 03       	nop
800047cc:	d7 03       	nop
800047ce:	d7 03       	nop
800047d0:	d7 03       	nop
800047d2:	d7 03       	nop
800047d4:	d7 03       	nop
800047d6:	d7 03       	nop
800047d8:	d7 03       	nop
800047da:	d7 03       	nop
800047dc:	d7 03       	nop
800047de:	d7 03       	nop
800047e0:	d7 03       	nop
800047e2:	d7 03       	nop
800047e4:	d7 03       	nop
800047e6:	d7 03       	nop
800047e8:	d7 03       	nop
800047ea:	d7 03       	nop
800047ec:	d7 03       	nop
800047ee:	d7 03       	nop
800047f0:	d7 03       	nop
800047f2:	d7 03       	nop
800047f4:	d7 03       	nop
800047f6:	d7 03       	nop
800047f8:	d7 03       	nop
800047fa:	d7 03       	nop
800047fc:	d7 03       	nop
800047fe:	d7 03       	nop
